

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sun Apr 09 20:30:16 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75  0000                     
    76                           	psect	idataCOMRAM
    77  003CBE                     __pidataCOMRAM:
    78                           	opt stack 0
    79                           
    80                           ;initializer for high_priority_int@noise_mean_value
    81  003CBE  00                 	db	0
    82  003CBF  7D                 	db	125
    83  003CC0  00                 	db	0
    84                           
    85                           ;initializer for high_priority_int@activation_thresold
    86  003CC1  7D00               	dw	32000
    87                           
    88                           	psect	mediumconst
    89  007EF4                     __pmediumconst:
    90                           	opt stack 0
    91  007EF4  00                 	db	0
    92  007EF5                     _dpowers:
    93                           	opt stack 0
    94  007EF5  0001               	dw	1
    95  007EF7  0000               	dw	0
    96  007EF9  000A               	dw	10
    97  007EFB  0000               	dw	0
    98  007EFD  0064               	dw	100
    99  007EFF  0000               	dw	0
   100  007F01  03E8               	dw	1000
   101  007F03  0000               	dw	0
   102  007F05  2710               	dw	10000
   103  007F07  0000               	dw	0
   104  007F09  86A0               	dw	34464
   105  007F0B  0001               	dw	1
   106  007F0D  4240               	dw	16960
   107  007F0F  000F               	dw	15
   108  007F11  9680               	dw	38528
   109  007F13  0098               	dw	152
   110  007F15  E100               	dw	57600
   111  007F17  05F5               	dw	1525
   112  007F19  CA00               	dw	51712
   113  007F1B  3B9A               	dw	15258
   114  007F1D                     __end_of_dpowers:
   115                           	opt stack 0
   116  007F1D                     __npowers_:
   117                           	opt stack 0
   118  007F1D  00                 	db	0
   119  007F1E  80                 	db	128
   120  007F1F  3F                 	db	63
   121  007F20  CD                 	db	205
   122  007F21  CC                 	db	204
   123  007F22  3D                 	db	61
   124  007F23  D7                 	db	215
   125  007F24  23                 	db	35
   126  007F25  3C                 	db	60
   127  007F26  12                 	db	18
   128  007F27  83                 	db	131
   129  007F28  3A                 	db	58
   130  007F29  B7                 	db	183
   131  007F2A  D1                 	db	209
   132  007F2B  38                 	db	56
   133  007F2C  C6                 	db	198
   134  007F2D  27                 	db	39
   135  007F2E  37                 	db	55
   136  007F2F  38                 	db	56
   137  007F30  86                 	db	134
   138  007F31  35                 	db	53
   139  007F32  C0                 	db	192
   140  007F33  D6                 	db	214
   141  007F34  33                 	db	51
   142  007F35  CC                 	db	204
   143  007F36  2B                 	db	43
   144  007F37  32                 	db	50
   145  007F38  70                 	db	112
   146  007F39  89                 	db	137
   147  007F3A  30                 	db	48
   148  007F3B  E7                 	db	231
   149  007F3C  DB                 	db	219
   150  007F3D  2E                 	db	46
   151  007F3E  E5                 	db	229
   152  007F3F  3C                 	db	60
   153  007F40  1E                 	db	30
   154  007F41  42                 	db	66
   155  007F42  A2                 	db	162
   156  007F43  0D                 	db	13
   157  007F44                     __end_of__npowers_:
   158                           	opt stack 0
   159  007F44                     __powers_:
   160                           	opt stack 0
   161  007F44  00                 	db	0
   162  007F45  80                 	db	128
   163  007F46  3F                 	db	63
   164  007F47  00                 	db	0
   165  007F48  20                 	db	32
   166  007F49  41                 	db	65
   167  007F4A  00                 	db	0
   168  007F4B  C8                 	db	200
   169  007F4C  42                 	db	66
   170  007F4D  00                 	db	0
   171  007F4E  7A                 	db	122
   172  007F4F  44                 	db	68
   173  007F50  40                 	db	64
   174  007F51  1C                 	db	28
   175  007F52  46                 	db	70
   176  007F53  50                 	db	80
   177  007F54  C3                 	db	195
   178  007F55  47                 	db	71
   179  007F56  24                 	db	36
   180  007F57  74                 	db	116
   181  007F58  49                 	db	73
   182  007F59  97                 	db	151
   183  007F5A  18                 	db	24
   184  007F5B  4B                 	db	75
   185  007F5C  BC                 	db	188
   186  007F5D  BE                 	db	190
   187  007F5E  4C                 	db	76
   188  007F5F  6B                 	db	107
   189  007F60  6E                 	db	110
   190  007F61  4E                 	db	78
   191  007F62  03                 	db	3
   192  007F63  15                 	db	21
   193  007F64  50                 	db	80
   194  007F65  79                 	db	121
   195  007F66  AD                 	db	173
   196  007F67  60                 	db	96
   197  007F68  F3                 	db	243
   198  007F69  49                 	db	73
   199  007F6A  71                 	db	113
   200  007F6B                     __end_of__powers_:
   201                           	opt stack 0
   202  0000                     _ANSELAbits	set	3896
   203  0000                     _ANSELBbits	set	3897
   204  0000                     _ANSELDbits	set	3899
   205  0000                     _CCPTMRS0bits	set	3913
   206  0000                     _VREFCON0bits	set	3906
   207  0000                     _ADRES	set	4035
   208  0000                     _ADCON0bits	set	4034
   209  0000                     _ADCON1	set	4033
   210  0000                     _ADCON2	set	4032
   211  0000                     _CCP2CONbits	set	3942
   212  0000                     _CCPR2L	set	3943
   213  0000                     _INTCONbits	set	4082
   214  0000                     _IPR1bits	set	3999
   215  0000                     _LATAbits	set	3977
   216  0000                     _LATBbits	set	3978
   217  0000                     _LATDbits	set	3980
   218  0000                     _PIE1bits	set	3997
   219  0000                     _PIR1bits	set	3998
   220  0000                     _PORTAbits	set	3968
   221  0000                     _PORTBbits	set	3969
   222  0000                     _PORTDbits	set	3971
   223  0000                     _PR2	set	4027
   224  0000                     _RCONbits	set	4048
   225  0000                     _T1CONbits	set	4045
   226  0000                     _T2CONbits	set	4026
   227  0000                     _TMR1H	set	4047
   228  0000                     _TMR1L	set	4046
   229  0000                     _TRISAbits	set	3986
   230  0000                     _TRISBbits	set	3987
   231  0000                     _TRISDbits	set	3989
   232  0000                     _WPUB	set	3937
   233  0000                     _RBPU	set	32655
   234  007F6B                     STR_2:
   235  007F6B  20                 	db	32
   236  007F6C  25                 	db	37
   237  007F6D  2E                 	db	46
   238  007F6E  31                 	db	49	;'1'
   239  007F6F  66                 	db	102	;'f'
   240  007F70  20                 	db	32
   241  007F71  25                 	db	37
   242  007F72  2E                 	db	46
   243  007F73  31                 	db	49	;'1'
   244  007F74  66                 	db	102	;'f'
   245  007F75  20                 	db	32
   246  007F76  25                 	db	37
   247  007F77  33                 	db	51	;'3'
   248  007F78  2E                 	db	46
   249  007F79  30                 	db	48	;'0'
   250  007F7A  64                 	db	100	;'d'
   251  007F7B  20                 	db	32
   252  007F7C  25                 	db	37
   253  007F7D  33                 	db	51	;'3'
   254  007F7E  2E                 	db	46
   255  007F7F  30                 	db	48	;'0'
   256  007F80  64                 	db	100	;'d'
   257  007F81  00                 	db	0
   258  007F82                     STR_39:
   259  007F82  2D                 	db	45
   260  007F83  2D                 	db	45
   261  007F84  2E                 	db	46
   262  007F85  2E                 	db	46
   263  007F86  2D                 	db	45
   264  007F87  2D                 	db	45
   265  007F88  00                 	db	0
   266  007F89                     STR_42:
   267  007F89  2E                 	db	46
   268  007F8A  2D                 	db	45
   269  007F8B  2E                 	db	46
   270  007F8C  2D                 	db	45
   271  007F8D  2E                 	db	46
   272  007F8E  2D                 	db	45
   273  007F8F  00                 	db	0
   274  007F90                     STR_43:
   275  007F90  2D                 	db	45
   276  007F91  2E                 	db	46
   277  007F92  2E                 	db	46
   278  007F93  2E                 	db	46
   279  007F94  2E                 	db	46
   280  007F95  2D                 	db	45
   281  007F96  00                 	db	0
   282  007F97                     STR_40:
   283  007F97  2E                 	db	46
   284  007F98  2E                 	db	46
   285  007F99  2D                 	db	45
   286  007F9A  2D                 	db	45
   287  007F9B  2E                 	db	46
   288  007F9C  2E                 	db	46
   289  007F9D  00                 	db	0
   290  007F9E                     STR_1:
   291  007F9E  45                 	db	69	;'E'
   292  007F9F  41                 	db	65	;'A'
   293  007FA0  53                 	db	83	;'S'
   294  007FA1  41                 	db	65	;'A'
   295  007FA2  54                 	db	84	;'T'
   296  007FA3  32                 	db	50	;'2'
   297  007FA4  00                 	db	0
   298  007FA5                     STR_29:
   299  007FA5  2D                 	db	45
   300  007FA6  2D                 	db	45
   301  007FA7  2D                 	db	45
   302  007FA8  2D                 	db	45
   303  007FA9  2D                 	db	45
   304  007FAA  00                 	db	0
   305  007FAB                     STR_30:
   306  007FAB  2E                 	db	46
   307  007FAC  2D                 	db	45
   308  007FAD  2D                 	db	45
   309  007FAE  2D                 	db	45
   310  007FAF  2D                 	db	45
   311  007FB0  00                 	db	0
   312  007FB1                     STR_31:
   313  007FB1  2E                 	db	46
   314  007FB2  2E                 	db	46
   315  007FB3  2D                 	db	45
   316  007FB4  2D                 	db	45
   317  007FB5  2D                 	db	45
   318  007FB6  00                 	db	0
   319  007FB7                     STR_32:
   320  007FB7  2E                 	db	46
   321  007FB8  2E                 	db	46
   322  007FB9  2E                 	db	46
   323  007FBA  2D                 	db	45
   324  007FBB  2D                 	db	45
   325  007FBC  00                 	db	0
   326  007FBD                     STR_38:
   327  007FBD  2D                 	db	45
   328  007FBE  2D                 	db	45
   329  007FBF  2D                 	db	45
   330  007FC0  2D                 	db	45
   331  007FC1  2E                 	db	46
   332  007FC2  00                 	db	0
   333  007FC3                     STR_41:
   334  007FC3  2D                 	db	45
   335  007FC4  2E                 	db	46
   336  007FC5  2E                 	db	46
   337  007FC6  2D                 	db	45
   338  007FC7  2E                 	db	46
   339  007FC8  00                 	db	0
   340  007FC9                     STR_37:
   341  007FC9  2D                 	db	45
   342  007FCA  2D                 	db	45
   343  007FCB  2D                 	db	45
   344  007FCC  2E                 	db	46
   345  007FCD  2E                 	db	46
   346  007FCE  00                 	db	0
   347  007FCF                     STR_36:
   348  007FCF  2D                 	db	45
   349  007FD0  2D                 	db	45
   350  007FD1  2E                 	db	46
   351  007FD2  2E                 	db	46
   352  007FD3  2E                 	db	46
   353  007FD4  00                 	db	0
   354  007FD5                     STR_35:
   355  007FD5  2D                 	db	45
   356  007FD6  2E                 	db	46
   357  007FD7  2E                 	db	46
   358  007FD8  2E                 	db	46
   359  007FD9  2E                 	db	46
   360  007FDA  00                 	db	0
   361  007FDB                     STR_34:
   362  007FDB  2E                 	db	46
   363  007FDC  2E                 	db	46
   364  007FDD  2E                 	db	46
   365  007FDE  2E                 	db	46
   366  007FDF  2E                 	db	46
   367  007FE0  00                 	db	0
   368  007FE1                     STR_27:
   369  007FE1  2D                 	db	45
   370  007FE2  2E                 	db	46
   371  007FE3  2D                 	db	45
   372  007FE4  2D                 	db	45
   373  007FE5  00                 	db	0
   374  007FE6                     STR_19:
   375  007FE6  2D                 	db	45
   376  007FE7  2D                 	db	45
   377  007FE8  2E                 	db	46
   378  007FE9  2D                 	db	45
   379  007FEA  00                 	db	0
   380  007FEB                     STR_26:
   381  007FEB  2D                 	db	45
   382  007FEC  2E                 	db	46
   383  007FED  2E                 	db	46
   384  007FEE  2D                 	db	45
   385  007FEF  00                 	db	0
   386  007FF0                     STR_18:
   387  007FF0  2E                 	db	46
   388  007FF1  2D                 	db	45
   389  007FF2  2D                 	db	45
   390  007FF3  2E                 	db	46
   391  007FF4  00                 	db	0
   392  007FF5                     STR_5:
   393  007FF5  2D                 	db	45
   394  007FF6  2E                 	db	46
   395  007FF7  2D                 	db	45
   396  007FF8  2E                 	db	46
   397  007FF9  00                 	db	0
   398  007FFA                     STR_14:
   399  007FFA  2E                 	db	46
   400  007FFB  2D                 	db	45
   401  007FFC  2E                 	db	46
   402  007FFD  2E                 	db	46
   403  007FFE  00                 	db	0
   404  0000                     
   405                           ; #config settings
   406  007FFF  00                 	db	0	; dummy byte at the end
   407  0000                     
   408                           	psect	cinit
   409  003870                     __pcinit:
   410                           	opt stack 0
   411  003870                     start_initialization:
   412                           	opt stack 0
   413  003870                     __initialization:
   414                           	opt stack 0
   415                           
   416                           ; Initialize objects allocated to COMRAM (5 bytes)
   417                           ; load TBLPTR registers with __pidataCOMRAM
   418  003870  0EBE               	movlw	low __pidataCOMRAM
   419  003872  6EF6               	movwf	tblptrl,c
   420  003874  0E3C               	movlw	high __pidataCOMRAM
   421  003876  6EF7               	movwf	tblptrh,c
   422  003878  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   423  00387A  6EF8               	movwf	tblptru,c
   424  00387C  EE00  F039         	lfsr	0,__pdataCOMRAM
   425  003880  EE10 F005          	lfsr	1,5
   426  003884                     copy_data0:
   427  003884  0009               	tblrd		*+
   428  003886  CFF5 FFEE          	movff	tablat,postinc0
   429  00388A  50E5               	movf	postdec1,w,c
   430  00388C  50E1               	movf	fsr1l,w,c
   431  00388E  E1FA               	bnz	copy_data0
   432                           
   433                           ; Clear objects allocated to BANK2 (200 bytes)
   434  003890  EE02  F000         	lfsr	0,__pbssBANK2
   435  003894  0EC8               	movlw	200
   436  003896                     clear_0:
   437  003896  6AEE               	clrf	postinc0,c
   438  003898  06E8               	decf	wreg,f,c
   439  00389A  E1FD               	bnz	clear_0
   440                           
   441                           ; Clear objects allocated to COMRAM (12 bytes)
   442  00389C  EE00  F02D         	lfsr	0,__pbssCOMRAM
   443  0038A0  0E0C               	movlw	12
   444  0038A2                     clear_1:
   445  0038A2  6AEE               	clrf	postinc0,c
   446  0038A4  06E8               	decf	wreg,f,c
   447  0038A6  E1FD               	bnz	clear_1
   448  0038A8                     end_of_initialization:
   449                           	opt stack 0
   450  0038A8                     __end_of__initialization:
   451                           	opt stack 0
   452  0038A8  903E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   453  0038AA  923E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   454  0038AC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   455  0038AE  6EF8               	movwf	tblptru,c
   456  0038B0  0100               	movlb	0
   457  0038B2  EF54  F01E         	goto	_main	;jump to C main() function
   458                           tblptru	equ	0xFF8
   459                           tblptrh	equ	0xFF7
   460                           tblptrl	equ	0xFF6
   461                           tablat	equ	0xFF5
   462                           postinc0	equ	0xFEE
   463                           wreg	equ	0xFE8
   464                           postdec1	equ	0xFE5
   465                           fsr1l	equ	0xFE1
   466                           
   467                           	psect	bssCOMRAM
   468  00002D                     __pbssCOMRAM:
   469                           	opt stack 0
   470  00002D                     _tmr1_interrupt_number:
   471                           	opt stack 0
   472  00002D                     	ds	2
   473  00002F                     high_priority_int@cycles_transmitter_active:
   474                           	opt stack 0
   475  00002F                     	ds	2
   476  000031                     high_priority_int@is_transmitter_active:
   477                           	opt stack 0
   478  000031                     	ds	2
   479  000033                     high_priority_int@sample_position:
   480                           	opt stack 0
   481  000033                     	ds	2
   482  000035                     high_priority_int@times_thresold_exceeded:
   483                           	opt stack 0
   484  000035                     	ds	2
   485  000037                     high_priority_int@valid_samples:
   486                           	opt stack 0
   487  000037                     	ds	2
   488                           tblptru	equ	0xFF8
   489                           tblptrh	equ	0xFF7
   490                           tblptrl	equ	0xFF6
   491                           tablat	equ	0xFF5
   492                           postinc0	equ	0xFEE
   493                           wreg	equ	0xFE8
   494                           postdec1	equ	0xFE5
   495                           fsr1l	equ	0xFE1
   496                           
   497                           	psect	dataCOMRAM
   498  000039                     __pdataCOMRAM:
   499                           	opt stack 0
   500  000039                     high_priority_int@noise_mean_value:
   501                           	opt stack 0
   502  000039                     	ds	3
   503  00003C                     high_priority_int@activation_thresold:
   504                           	opt stack 0
   505  00003C                     	ds	2
   506                           tblptru	equ	0xFF8
   507                           tblptrh	equ	0xFF7
   508                           tblptrl	equ	0xFF6
   509                           tablat	equ	0xFF5
   510                           postinc0	equ	0xFEE
   511                           wreg	equ	0xFE8
   512                           postdec1	equ	0xFE5
   513                           fsr1l	equ	0xFE1
   514                           
   515                           	psect	bssBANK2
   516  000200                     __pbssBANK2:
   517                           	opt stack 0
   518  000200                     high_priority_int@samples:
   519                           	opt stack 0
   520  000200                     	ds	200
   521                           tblptru	equ	0xFF8
   522                           tblptrh	equ	0xFF7
   523                           tblptrl	equ	0xFF6
   524                           tablat	equ	0xFF5
   525                           postinc0	equ	0xFEE
   526                           wreg	equ	0xFE8
   527                           postdec1	equ	0xFE5
   528                           fsr1l	equ	0xFE1
   529                           
   530                           	psect	cstackBANK1
   531  000100                     __pcstackBANK1:
   532                           	opt stack 0
   533  000100                     util_beacon_transmission@BEACON_MESSAGE:
   534                           	opt stack 0
   535  000100                     util_getTemperature@bit_mem:
   536                           	opt stack 0
   537                           
   538                           ; 144 bytes @ 0x0
   539  000100                     	ds	128
   540  000180                     util_beacon_transmission@BEACON_BUFFER:
   541                           	opt stack 0
   542                           
   543                           ; 64 bytes @ 0x80
   544  000180                     	ds	16
   545  000190                     util_getTemperature@byte_mem:
   546                           	opt stack 0
   547                           
   548                           ; 18 bytes @ 0x90
   549  000190                     	ds	18
   550  0001A2                     util_getTemperature@num_bit:
   551                           	opt stack 0
   552                           
   553                           ; 2 bytes @ 0xA2
   554  0001A2                     	ds	2
   555  0001A4                     util_getTemperature@sign:
   556                           	opt stack 0
   557                           
   558                           ; 3 bytes @ 0xA4
   559  0001A4                     	ds	3
   560  0001A7                     _util_getTemperature$2674:
   561                           	opt stack 0
   562                           
   563                           ; 3 bytes @ 0xA7
   564  0001A7                     	ds	3
   565  0001AA                     _util_getTemperature$2675:
   566                           	opt stack 0
   567                           
   568                           ; 3 bytes @ 0xAA
   569  0001AA                     	ds	3
   570  0001AD                     _util_getTemperature$2676:
   571                           	opt stack 0
   572                           
   573                           ; 3 bytes @ 0xAD
   574  0001AD                     	ds	3
   575  0001B0                     _util_getTemperature$2677:
   576                           	opt stack 0
   577                           
   578                           ; 3 bytes @ 0xB0
   579  0001B0                     	ds	3
   580  0001B3                     util_getTemperature@shift_reg_bit0:
   581                           	opt stack 0
   582                           
   583                           ; 2 bytes @ 0xB3
   584  0001B3                     	ds	2
   585  0001B5                     util_getTemperature@shift_reg_bit1:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0xB5
   589  0001B5                     	ds	2
   590  0001B7                     util_getTemperature@shift_reg_bit2:
   591                           	opt stack 0
   592                           
   593                           ; 2 bytes @ 0xB7
   594  0001B7                     	ds	2
   595  0001B9                     util_getTemperature@shift_reg_bit3:
   596                           	opt stack 0
   597                           
   598                           ; 2 bytes @ 0xB9
   599  0001B9                     	ds	2
   600  0001BB                     util_getTemperature@shift_reg_bit4:
   601                           	opt stack 0
   602                           
   603                           ; 2 bytes @ 0xBB
   604  0001BB                     	ds	2
   605  0001BD                     util_getTemperature@shift_reg_bit5:
   606                           	opt stack 0
   607                           
   608                           ; 2 bytes @ 0xBD
   609  0001BD                     	ds	2
   610  0001BF                     util_getTemperature@shift_reg_bit6:
   611                           	opt stack 0
   612                           
   613                           ; 2 bytes @ 0xBF
   614  0001BF                     	ds	1
   615  0001C0                     util_beacon_transmission@i:
   616                           	opt stack 0
   617                           
   618                           ; 2 bytes @ 0xC0
   619  0001C0                     	ds	1
   620  0001C1                     util_getTemperature@shift_reg_bit7:
   621                           	opt stack 0
   622                           
   623                           ; 2 bytes @ 0xC1
   624  0001C1                     	ds	2
   625  0001C3                     util_getTemperature@shift_reg_bit_temp:
   626                           	opt stack 0
   627                           
   628                           ; 2 bytes @ 0xC3
   629  0001C3                     	ds	2
   630  0001C5                     util_getTemperature@num_byte:
   631                           	opt stack 0
   632                           
   633                           ; 2 bytes @ 0xC5
   634  0001C5                     	ds	2
   635  0001C7                     util_getTemperature@bit_in_byte:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0xC7
   639  0001C7                     	ds	2
   640  0001C9                     util_getTemperature@temperature:
   641                           	opt stack 0
   642                           
   643                           ; 3 bytes @ 0xC9
   644  0001C9                     	ds	3
   645  0001CC                     util_getTemperature@i:
   646                           	opt stack 0
   647                           
   648                           ; 2 bytes @ 0xCC
   649  0001CC                     	ds	2
   650                           tblptru	equ	0xFF8
   651                           tblptrh	equ	0xFF7
   652                           tblptrl	equ	0xFF6
   653                           tablat	equ	0xFF5
   654                           postinc0	equ	0xFEE
   655                           wreg	equ	0xFE8
   656                           postdec1	equ	0xFE5
   657                           fsr1l	equ	0xFE1
   658                           
   659                           	psect	cstackBANK0
   660  000060                     __pcstackBANK0:
   661                           	opt stack 0
   662  000060                     ??_low_priority_int:
   663                           
   664                           ; 1 bytes @ 0x0
   665  000060                     	ds	17
   666  000071                     ?_util_onewire_reset:
   667                           	opt stack 0
   668  000071                     ?_util_onewire_read_bit:
   669                           	opt stack 0
   670  000071                     ?_strlen:
   671                           	opt stack 0
   672  000071                     ?___awmod:
   673                           	opt stack 0
   674  000071                     ?___ftpack:
   675                           	opt stack 0
   676  000071                     ?___ftneg:
   677                           	opt stack 0
   678  000071                     ?__tdiv_to_l_:
   679                           	opt stack 0
   680  000071                     ?__div_to_l_:
   681                           	opt stack 0
   682  000071                     ?___lldiv:
   683                           	opt stack 0
   684  000071                     util_onewire_write_bit@bit_in:
   685                           	opt stack 0
   686  000071                     util_waits_delay_ms@ms:
   687                           	opt stack 0
   688  000071                     util_waits_delay_hundred_us@hun_us:
   689                           	opt stack 0
   690  000071                     ___awmod@dividend:
   691                           	opt stack 0
   692  000071                     memset@p1:
   693                           	opt stack 0
   694  000071                     strcat@to:
   695                           	opt stack 0
   696  000071                     strcpy@to:
   697                           	opt stack 0
   698  000071                     strlen@s:
   699                           	opt stack 0
   700  000071                     __div_to_l_@f1:
   701                           	opt stack 0
   702  000071                     ___ftpack@arg:
   703                           	opt stack 0
   704  000071                     __tdiv_to_l_@f1:
   705                           	opt stack 0
   706  000071                     ___ftge@ff1:
   707                           	opt stack 0
   708  000071                     ___ftneg@f1:
   709                           	opt stack 0
   710  000071                     ___lldiv@dividend:
   711                           	opt stack 0
   712                           
   713                           ; 4 bytes @ 0x11
   714  000071                     	ds	2
   715  000073                     ?_util_onewire_read_byte:
   716                           	opt stack 0
   717  000073                     util_onewire_write_byte@value:
   718                           	opt stack 0
   719  000073                     util_transmit_morse_sequence@morse_sequence:
   720                           	opt stack 0
   721  000073                     util_waits_delay_secs@secs:
   722                           	opt stack 0
   723  000073                     ___awmod@divisor:
   724                           	opt stack 0
   725  000073                     memset@c:
   726                           	opt stack 0
   727  000073                     strcat@from:
   728                           	opt stack 0
   729  000073                     strcpy@from:
   730                           	opt stack 0
   731                           
   732                           ; 2 bytes @ 0x13
   733  000073                     	ds	1
   734  000074                     ___ftpack@exp:
   735                           	opt stack 0
   736  000074                     __div_to_l_@f2:
   737                           	opt stack 0
   738  000074                     __tdiv_to_l_@f2:
   739                           	opt stack 0
   740  000074                     ___ftge@ff2:
   741                           	opt stack 0
   742                           
   743                           ; 3 bytes @ 0x14
   744  000074                     	ds	1
   745  000075                     ??_util_onewire_read_byte:
   746  000075                     ?___awdiv:
   747                           	opt stack 0
   748  000075                     ___ftpack@sign:
   749                           	opt stack 0
   750  000075                     util_onewire_write_byte@bit0:
   751                           	opt stack 0
   752  000075                     util_waits_delay_mins@minutes:
   753                           	opt stack 0
   754  000075                     ___awdiv@dividend:
   755                           	opt stack 0
   756  000075                     memset@n:
   757                           	opt stack 0
   758  000075                     ___lldiv@divisor:
   759                           	opt stack 0
   760                           
   761                           ; 4 bytes @ 0x15
   762  000075                     	ds	1
   763  000076                     ?___awtoft:
   764                           	opt stack 0
   765  000076                     ?___lltoft:
   766                           	opt stack 0
   767  000076                     ?___lwtoft:
   768                           	opt stack 0
   769  000076                     ___awtoft@c:
   770                           	opt stack 0
   771  000076                     ___lwtoft@c:
   772                           	opt stack 0
   773  000076                     ___lltoft@c:
   774                           	opt stack 0
   775                           
   776                           ; 4 bytes @ 0x16
   777  000076                     	ds	1
   778  000077                     util_onewire_write_byte@bit1:
   779                           	opt stack 0
   780  000077                     util_waits_delay_hours@hours:
   781                           	opt stack 0
   782  000077                     ___awdiv@divisor:
   783                           	opt stack 0
   784                           
   785                           ; 2 bytes @ 0x17
   786  000077                     	ds	2
   787  000079                     ??_util_waits_delay_hours:
   788  000079                     ?___wmul:
   789                           	opt stack 0
   790  000079                     ?___ftdiv:
   791                           	opt stack 0
   792  000079                     ?___llmod:
   793                           	opt stack 0
   794  000079                     util_onewire_write_byte@bit2:
   795                           	opt stack 0
   796  000079                     ___wmul@multiplier:
   797                           	opt stack 0
   798  000079                     ___ftdiv@f1:
   799                           	opt stack 0
   800  000079                     ___llmod@dividend:
   801                           	opt stack 0
   802                           
   803                           ; 4 bytes @ 0x19
   804  000079                     	ds	1
   805  00007A                     util_waits_delay_hours@i:
   806                           	opt stack 0
   807                           
   808                           ; 2 bytes @ 0x1A
   809  00007A                     	ds	1
   810  00007B                     util_onewire_write_byte@bit3:
   811                           	opt stack 0
   812  00007B                     ___wmul@multiplicand:
   813                           	opt stack 0
   814                           
   815                           ; 2 bytes @ 0x1B
   816  00007B                     	ds	1
   817  00007C                     ___ftdiv@f2:
   818                           	opt stack 0
   819                           
   820                           ; 3 bytes @ 0x1C
   821  00007C                     	ds	1
   822  00007D                     ?___ftmul:
   823                           	opt stack 0
   824  00007D                     util_onewire_write_byte@bit4:
   825                           	opt stack 0
   826  00007D                     ___ftmul@f1:
   827                           	opt stack 0
   828  00007D                     ___llmod@divisor:
   829                           	opt stack 0
   830                           
   831                           ; 4 bytes @ 0x1D
   832  00007D                     	ds	2
   833  00007F                     ___ftdiv@cntr:
   834                           	opt stack 0
   835  00007F                     util_onewire_write_byte@bit5:
   836                           	opt stack 0
   837                           
   838                           ; 2 bytes @ 0x1F
   839  00007F                     	ds	1
   840  000080                     ___ftdiv@f3:
   841                           	opt stack 0
   842  000080                     ___ftmul@f2:
   843                           	opt stack 0
   844                           
   845                           ; 3 bytes @ 0x20
   846  000080                     	ds	1
   847  000081                     util_onewire_write_byte@bit6:
   848                           	opt stack 0
   849                           
   850                           ; 2 bytes @ 0x21
   851  000081                     	ds	2
   852  000083                     ___ftdiv@exp:
   853                           	opt stack 0
   854  000083                     ___ftmul@exp:
   855                           	opt stack 0
   856  000083                     util_onewire_write_byte@bit7:
   857                           	opt stack 0
   858  000083                     util_onewire_read_byte@bit0:
   859                           	opt stack 0
   860                           
   861                           ; 2 bytes @ 0x23
   862  000083                     	ds	1
   863  000084                     ___ftdiv@sign:
   864                           	opt stack 0
   865  000084                     ___ftmul@f3_as_product:
   866                           	opt stack 0
   867                           
   868                           ; 3 bytes @ 0x24
   869  000084                     	ds	1
   870  000085                     util_onewire_read_byte@bit1:
   871                           	opt stack 0
   872                           
   873                           ; 2 bytes @ 0x25
   874  000085                     	ds	2
   875  000087                     ___ftmul@cntr:
   876                           	opt stack 0
   877  000087                     util_onewire_read_byte@bit2:
   878                           	opt stack 0
   879                           
   880                           ; 2 bytes @ 0x27
   881  000087                     	ds	1
   882  000088                     ___ftmul@sign:
   883                           	opt stack 0
   884                           
   885                           ; 1 bytes @ 0x28
   886  000088                     	ds	1
   887  000089                     ?_util_getBatteryVoltage:
   888                           	opt stack 0
   889  000089                     ?_fround:
   890                           	opt stack 0
   891  000089                     ?_scale:
   892                           	opt stack 0
   893  000089                     util_onewire_read_byte@bit3:
   894                           	opt stack 0
   895                           
   896                           ; 2 bytes @ 0x29
   897  000089                     	ds	2
   898  00008B                     util_onewire_read_byte@bit4:
   899                           	opt stack 0
   900                           
   901                           ; 2 bytes @ 0x2B
   902  00008B                     	ds	1
   903  00008C                     util_getBatteryVoltage@value:
   904                           	opt stack 0
   905  00008C                     _fround$2679:
   906                           	opt stack 0
   907  00008C                     _scale$2680:
   908                           	opt stack 0
   909                           
   910                           ; 3 bytes @ 0x2C
   911  00008C                     	ds	1
   912  00008D                     util_onewire_read_byte@bit5:
   913                           	opt stack 0
   914                           
   915                           ; 2 bytes @ 0x2D
   916  00008D                     	ds	2
   917  00008F                     scale@scl:
   918                           	opt stack 0
   919  00008F                     util_onewire_read_byte@bit6:
   920                           	opt stack 0
   921  00008F                     util_getBatteryVoltage@voltage:
   922                           	opt stack 0
   923  00008F                     _fround$2678:
   924                           	opt stack 0
   925                           
   926                           ; 3 bytes @ 0x2F
   927  00008F                     	ds	1
   928  000090                     ?___fttol:
   929                           	opt stack 0
   930  000090                     ___fttol@f1:
   931                           	opt stack 0
   932                           
   933                           ; 3 bytes @ 0x30
   934  000090                     	ds	1
   935  000091                     util_onewire_read_byte@bit7:
   936                           	opt stack 0
   937                           
   938                           ; 2 bytes @ 0x31
   939  000091                     	ds	1
   940  000092                     fround@prec:
   941                           	opt stack 0
   942                           
   943                           ; 1 bytes @ 0x32
   944  000092                     	ds	1
   945  000093                     ?___ftadd:
   946                           	opt stack 0
   947  000093                     util_onewire_read_byte@value:
   948                           	opt stack 0
   949  000093                     ___ftadd@f1:
   950                           	opt stack 0
   951                           
   952                           ; 3 bytes @ 0x33
   953  000093                     	ds	1
   954  000094                     ??___fttol:
   955                           
   956                           ; 1 bytes @ 0x34
   957  000094                     	ds	2
   958  000096                     ___ftadd@f2:
   959                           	opt stack 0
   960                           
   961                           ; 3 bytes @ 0x36
   962  000096                     	ds	3
   963  000099                     ??___ftadd:
   964  000099                     ___fttol@sign1:
   965                           	opt stack 0
   966                           
   967                           ; 1 bytes @ 0x39
   968  000099                     	ds	1
   969  00009A                     ___fttol@lval:
   970                           	opt stack 0
   971                           
   972                           ; 4 bytes @ 0x3A
   973  00009A                     	ds	2
   974  00009C                     ___ftadd@sign:
   975                           	opt stack 0
   976                           
   977                           ; 1 bytes @ 0x3C
   978  00009C                     	ds	1
   979  00009D                     ___ftadd@exp2:
   980                           	opt stack 0
   981                           
   982                           ; 1 bytes @ 0x3D
   983  00009D                     	ds	1
   984  00009E                     ___ftadd@exp1:
   985                           	opt stack 0
   986  00009E                     ___fttol@exp1:
   987                           	opt stack 0
   988                           
   989                           ; 1 bytes @ 0x3E
   990  00009E                     	ds	1
   991  00009F                     ?_util_getSolarCurrent:
   992                           	opt stack 0
   993  00009F                     ?_util_getBatteryCurrent:
   994                           	opt stack 0
   995  00009F                     ?_util_getTemperature:
   996                           	opt stack 0
   997  00009F                     ?___ftsub:
   998                           	opt stack 0
   999  00009F                     ___ftsub@f1:
  1000                           	opt stack 0
  1001                           
  1002                           ; 3 bytes @ 0x3F
  1003  00009F                     	ds	2
  1004  0000A1                     util_getSolarCurrent@value:
  1005                           	opt stack 0
  1006  0000A1                     util_getBatteryCurrent@value:
  1007                           	opt stack 0
  1008                           
  1009                           ; 3 bytes @ 0x41
  1010  0000A1                     	ds	1
  1011  0000A2                     ??_util_getTemperature:
  1012  0000A2                     ___ftsub@f2:
  1013                           	opt stack 0
  1014                           
  1015                           ; 3 bytes @ 0x42
  1016  0000A2                     	ds	2
  1017  0000A4                     util_getSolarCurrent@solarCurrent:
  1018                           	opt stack 0
  1019  0000A4                     util_getBatteryCurrent@batteryCurrent:
  1020                           	opt stack 0
  1021                           
  1022                           ; 3 bytes @ 0x44
  1023  0000A4                     	ds	1
  1024  0000A5                     ?_sprintf:
  1025                           	opt stack 0
  1026  0000A5                     sprintf@sp:
  1027                           	opt stack 0
  1028                           
  1029                           ; 2 bytes @ 0x45
  1030  0000A5                     	ds	2
  1031  0000A7                     sprintf@f:
  1032                           	opt stack 0
  1033                           
  1034                           ; 2 bytes @ 0x47
  1035  0000A7                     	ds	12
  1036  0000B3                     ??_sprintf:
  1037                           
  1038                           ; 1 bytes @ 0x53
  1039  0000B3                     	ds	6
  1040  0000B9                     _sprintf$2681:
  1041                           	opt stack 0
  1042                           
  1043                           ; 3 bytes @ 0x59
  1044  0000B9                     	ds	3
  1045  0000BC                     sprintf@ap:
  1046                           	opt stack 0
  1047                           
  1048                           ; 2 bytes @ 0x5C
  1049  0000BC                     	ds	2
  1050  0000BE                     sprintf@flag:
  1051                           	opt stack 0
  1052                           
  1053                           ; 2 bytes @ 0x5E
  1054  0000BE                     	ds	2
  1055  0000C0                     sprintf@width:
  1056                           	opt stack 0
  1057                           
  1058                           ; 2 bytes @ 0x60
  1059  0000C0                     	ds	2
  1060  0000C2                     sprintf@tmpval:
  1061                           	opt stack 0
  1062                           
  1063                           ; 4 bytes @ 0x62
  1064  0000C2                     	ds	4
  1065  0000C6                     sprintf@val:
  1066                           	opt stack 0
  1067                           
  1068                           ; 4 bytes @ 0x66
  1069  0000C6                     	ds	4
  1070  0000CA                     sprintf@exp:
  1071                           	opt stack 0
  1072                           
  1073                           ; 2 bytes @ 0x6A
  1074  0000CA                     	ds	2
  1075  0000CC                     sprintf@fval:
  1076                           	opt stack 0
  1077                           
  1078                           ; 3 bytes @ 0x6C
  1079  0000CC                     	ds	3
  1080  0000CF                     sprintf@prec:
  1081                           	opt stack 0
  1082                           
  1083                           ; 2 bytes @ 0x6F
  1084  0000CF                     	ds	2
  1085  0000D1                     sprintf@c:
  1086                           	opt stack 0
  1087                           
  1088                           ; 1 bytes @ 0x71
  1089  0000D1                     	ds	1
  1090  0000D2                     util_beacon_transmission@battery_voltage:
  1091                           	opt stack 0
  1092                           
  1093                           ; 3 bytes @ 0x72
  1094  0000D2                     	ds	3
  1095  0000D5                     util_beacon_transmission@solar_current:
  1096                           	opt stack 0
  1097                           
  1098                           ; 2 bytes @ 0x75
  1099  0000D5                     	ds	2
  1100  0000D7                     util_beacon_transmission@battery_current:
  1101                           	opt stack 0
  1102                           
  1103                           ; 2 bytes @ 0x77
  1104  0000D7                     	ds	2
  1105  0000D9                     util_beacon_transmission@temperature:
  1106                           	opt stack 0
  1107                           
  1108                           ; 3 bytes @ 0x79
  1109  0000D9                     	ds	3
  1110  0000DC                     main_loop@temperature:
  1111                           	opt stack 0
  1112                           
  1113                           ; 3 bytes @ 0x7C
  1114  0000DC                     	ds	3
  1115  0000DF                     main_loop@solar_current:
  1116                           	opt stack 0
  1117                           
  1118                           ; 2 bytes @ 0x7F
  1119  0000DF                     	ds	2
  1120  0000E1                     main_loop@battery_current:
  1121                           	opt stack 0
  1122                           
  1123                           ; 2 bytes @ 0x81
  1124  0000E1                     	ds	2
  1125  0000E3                     main_loop@battery_voltage:
  1126                           	opt stack 0
  1127                           
  1128                           ; 3 bytes @ 0x83
  1129  0000E3                     	ds	3
  1130                           tblptru	equ	0xFF8
  1131                           tblptrh	equ	0xFF7
  1132                           tblptrl	equ	0xFF6
  1133                           tablat	equ	0xFF5
  1134                           postinc0	equ	0xFEE
  1135                           wreg	equ	0xFE8
  1136                           postdec1	equ	0xFE5
  1137                           fsr1l	equ	0xFE1
  1138                           
  1139                           	psect	cstackCOMRAM
  1140  000001                     __pcstackCOMRAM:
  1141                           	opt stack 0
  1142  000001                     ?___ltdiv:
  1143                           	opt stack 0
  1144  000001                     ___ltdiv@dividend:
  1145                           	opt stack 0
  1146                           
  1147                           ; 3 bytes @ 0x0
  1148  000001                     	ds	3
  1149  000004                     ___ltdiv@divisor:
  1150                           	opt stack 0
  1151                           
  1152                           ; 3 bytes @ 0x3
  1153  000004                     	ds	3
  1154  000007                     ___ltdiv@quotient:
  1155                           	opt stack 0
  1156                           
  1157                           ; 3 bytes @ 0x6
  1158  000007                     	ds	3
  1159  00000A                     ___ltdiv@counter:
  1160                           	opt stack 0
  1161                           
  1162                           ; 1 bytes @ 0x9
  1163  00000A                     	ds	1
  1164  00000B                     ??_high_priority_int:
  1165                           
  1166                           ; 1 bytes @ 0xA
  1167  00000B                     	ds	19
  1168  00001E                     high_priority_int@sample:
  1169                           	opt stack 0
  1170                           
  1171                           ; 2 bytes @ 0x1D
  1172  00001E                     	ds	2
  1173  000020                     high_priority_int@i:
  1174                           	opt stack 0
  1175                           
  1176                           ; 2 bytes @ 0x1F
  1177  000020                     	ds	2
  1178  000022                     ??_util_onewire_reset:
  1179  000022                     ??_util_onewire_write_byte:
  1180  000022                     ??_util_onewire_read_bit:
  1181  000022                     ??_strlen:
  1182  000022                     ??_util_waits_delay_ms:
  1183  000022                     ??_util_waits_delay_hundred_us:
  1184  000022                     ??_isdigit:
  1185  000022                     ??__tdiv_to_l_:
  1186  000022                     ??___ftpack:
  1187  000022                     ??___ftge:
  1188  000022                     ___awmod@counter:
  1189                           	opt stack 0
  1190  000022                     memset@p:
  1191                           	opt stack 0
  1192  000022                     strcat@cp:
  1193                           	opt stack 0
  1194  000022                     strcpy@cp:
  1195                           	opt stack 0
  1196  000022                     __div_to_l_@quot:
  1197                           	opt stack 0
  1198  000022                     ___lldiv@quotient:
  1199                           	opt stack 0
  1200                           
  1201                           ; 4 bytes @ 0x21
  1202  000022                     	ds	1
  1203  000023                     ___awmod@sign:
  1204                           	opt stack 0
  1205  000023                     _isdigit$2306:
  1206                           	opt stack 0
  1207  000023                     util_onewire_reset@presence:
  1208                           	opt stack 0
  1209  000023                     util_onewire_read_bit@value:
  1210                           	opt stack 0
  1211  000023                     util_waits_delay_ms@i:
  1212                           	opt stack 0
  1213  000023                     util_waits_delay_hundred_us@i:
  1214                           	opt stack 0
  1215                           
  1216                           ; 2 bytes @ 0x22
  1217  000023                     	ds	1
  1218  000024                     ___awdiv@counter:
  1219                           	opt stack 0
  1220  000024                     isdigit@c:
  1221                           	opt stack 0
  1222  000024                     strlen@cp:
  1223                           	opt stack 0
  1224                           
  1225                           ; 2 bytes @ 0x23
  1226  000024                     	ds	1
  1227  000025                     ??_util_waits_delay_secs:
  1228  000025                     ??___lltoft:
  1229  000025                     ___awdiv@sign:
  1230                           	opt stack 0
  1231  000025                     ___awtoft@sign:
  1232                           	opt stack 0
  1233  000025                     util_transmit_dot@i:
  1234                           	opt stack 0
  1235  000025                     util_transmit_dash@i:
  1236                           	opt stack 0
  1237  000025                     __tdiv_to_l_@quot:
  1238                           	opt stack 0
  1239                           
  1240                           ; 4 bytes @ 0x24
  1241  000025                     	ds	1
  1242  000026                     ??___ftdiv:
  1243  000026                     __div_to_l_@cntr:
  1244                           	opt stack 0
  1245  000026                     ___lldiv@counter:
  1246                           	opt stack 0
  1247  000026                     util_waits_delay_secs@i:
  1248                           	opt stack 0
  1249  000026                     ___awdiv@quotient:
  1250                           	opt stack 0
  1251                           
  1252                           ; 2 bytes @ 0x25
  1253  000026                     	ds	1
  1254  000027                     ??_util_transmit_morse_sequence:
  1255  000027                     __div_to_l_@exp1:
  1256                           	opt stack 0
  1257  000027                     ___llmod@counter:
  1258                           	opt stack 0
  1259                           
  1260                           ; 1 bytes @ 0x26
  1261  000027                     	ds	1
  1262  000028                     util_waits_delay_secs@j:
  1263                           	opt stack 0
  1264  000028                     ___wmul@product:
  1265                           	opt stack 0
  1266                           
  1267                           ; 2 bytes @ 0x27
  1268  000028                     	ds	1
  1269  000029                     __tdiv_to_l_@cntr:
  1270                           	opt stack 0
  1271  000029                     ___lltoft@exp:
  1272                           	opt stack 0
  1273  000029                     util_transmit_morse_sequence@i:
  1274                           	opt stack 0
  1275                           
  1276                           ; 2 bytes @ 0x28
  1277  000029                     	ds	1
  1278  00002A                     ??_util_waits_delay_mins:
  1279  00002A                     ??___ftmul:
  1280  00002A                     __tdiv_to_l_@exp1:
  1281                           	opt stack 0
  1282                           
  1283                           ; 1 bytes @ 0x29
  1284  00002A                     	ds	1
  1285  00002B                     util_transmit_letter@letter:
  1286                           	opt stack 0
  1287  00002B                     util_waits_delay_mins@i:
  1288                           	opt stack 0
  1289                           
  1290                           ; 2 bytes @ 0x2A
  1291  00002B                     	ds	2
  1292  00002D                     tblptru	equ	0xFF8
  1293                           tblptrh	equ	0xFF7
  1294                           tblptrl	equ	0xFF6
  1295                           tablat	equ	0xFF5
  1296                           postinc0	equ	0xFEE
  1297                           wreg	equ	0xFE8
  1298                           postdec1	equ	0xFE5
  1299                           fsr1l	equ	0xFE1
  1300                           
  1301                           ; 1 bytes @ 0x2C
  1302 ;;
  1303 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1304 ;;
  1305 ;; *************** function _main *****************
  1306 ;; Defined at:
  1307 ;;		line 19 in file "easat2_main_mcu.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;		None
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;		None
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1321 ;;      Params:         0       0       0       0       0       0       0
  1322 ;;      Locals:         0       0       0       0       0       0       0
  1323 ;;      Temps:          0       0       0       0       0       0       0
  1324 ;;      Totals:         0       0       0       0       0       0       0
  1325 ;;Total ram usage:        0 bytes
  1326 ;; Hardware stack levels required when called:   10
  1327 ;; This function calls:
  1328 ;;		_init_initialize
  1329 ;;		_main_loop
  1330 ;; This function is called by:
  1331 ;;		Startup code after reset
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           	psect	text0
  1336  003CA8                     __ptext0:
  1337                           	opt stack 0
  1338  003CA8                     _main:
  1339                           	opt stack 21
  1340                           
  1341                           ;easat2_main_mcu.c: 22: init_initialize();
  1342                           
  1343                           ;incstack = 0
  1344  003CA8  EC5A  F01E         	call	_init_initialize	;wreg free
  1345                           
  1346                           ;easat2_main_mcu.c: 25: main_loop();
  1347  003CAC  ECDC  F01A         	call	_main_loop	;wreg free
  1348  003CB0  EF53  F000         	goto	start
  1349  003CB4                     __end_of_main:
  1350                           	opt stack 0
  1351                           tblptru	equ	0xFF8
  1352                           tblptrh	equ	0xFF7
  1353                           tblptrl	equ	0xFF6
  1354                           tablat	equ	0xFF5
  1355                           postinc0	equ	0xFEE
  1356                           wreg	equ	0xFE8
  1357                           postdec1	equ	0xFE5
  1358                           fsr1l	equ	0xFE1
  1359                           
  1360 ;; *************** function _main_loop *****************
  1361 ;; Defined at:
  1362 ;;		line 31 in file "easat2_main_mcu.c"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;		None
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;  battery_volt    3  131[BANK0 ] float 
  1367 ;;  temperature     3  124[BANK0 ] float 
  1368 ;;  battery_curr    2  129[BANK0 ] int 
  1369 ;;  solar_curren    2  127[BANK0 ] int 
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  1    wreg      void 
  1372 ;; Registers used:
  1373 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1379 ;;      Params:         0       0       0       0       0       0       0
  1380 ;;      Locals:         0      10       0       0       0       0       0
  1381 ;;      Temps:          0       0       0       0       0       0       0
  1382 ;;      Totals:         0      10       0       0       0       0       0
  1383 ;;Total ram usage:       10 bytes
  1384 ;; Hardware stack levels used:    1
  1385 ;; Hardware stack levels required when called:    9
  1386 ;; This function calls:
  1387 ;;		_util_beacon_transmission
  1388 ;;		_util_getBatteryCurrent
  1389 ;;		_util_getBatteryVoltage
  1390 ;;		_util_getSolarCurrent
  1391 ;;		_util_getTemperature
  1392 ;;		_util_waits_delay_hours
  1393 ;;		_util_waits_delay_mins
  1394 ;; This function is called by:
  1395 ;;		_main
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           	psect	text1
  1400  0035B8                     __ptext1:
  1401                           	opt stack 0
  1402  0035B8                     _main_loop:
  1403                           	opt stack 21
  1404  0035B8                     l24:
  1405  0035B8  0004               	clrwdt		;# 
  1406                           
  1407                           ;easat2_main_mcu.c: 47: battery_voltage = util_getBatteryVoltage();
  1408  0035BA  EC84  F018         	call	_util_getBatteryVoltage	;wreg free
  1409  0035BE  C089  F0E3         	movff	?_util_getBatteryVoltage,main_loop@battery_voltage
  1410  0035C2  C08A  F0E4         	movff	?_util_getBatteryVoltage+1,main_loop@battery_voltage+1
  1411  0035C6  C08B  F0E5         	movff	?_util_getBatteryVoltage+2,main_loop@battery_voltage+2
  1412                           
  1413                           ;easat2_main_mcu.c: 50: solar_current = util_getSolarCurrent();
  1414  0035CA  ECBA  F017         	call	_util_getSolarCurrent	;wreg free
  1415  0035CE  C09F  F0DF         	movff	?_util_getSolarCurrent,main_loop@solar_current
  1416  0035D2  C0A0  F0E0         	movff	?_util_getSolarCurrent+1,main_loop@solar_current+1
  1417                           
  1418                           ;easat2_main_mcu.c: 53: battery_current = util_getBatteryCurrent();
  1419  0035D6  EC1F  F018         	call	_util_getBatteryCurrent	;wreg free
  1420  0035DA  C09F  F0E1         	movff	?_util_getBatteryCurrent,main_loop@battery_current
  1421  0035DE  C0A0  F0E2         	movff	?_util_getBatteryCurrent+1,main_loop@battery_current+1
  1422                           
  1423                           ;easat2_main_mcu.c: 56: temperature = util_getTemperature();
  1424  0035E2  EC24  F006         	call	_util_getTemperature	;wreg free
  1425  0035E6  C09F  F0DC         	movff	?_util_getTemperature,main_loop@temperature
  1426  0035EA  C0A0  F0DD         	movff	?_util_getTemperature+1,main_loop@temperature+1
  1427  0035EE  C0A1  F0DE         	movff	?_util_getTemperature+2,main_loop@temperature+2
  1428                           
  1429                           ;easat2_main_mcu.c: 60: if (battery_voltage >= 0) {
  1430  0035F2  0100               	movlb	0	; () banked
  1431  0035F4  BFE5               	btfsc	(main_loop@battery_voltage+2)& (0+255),7,b
  1432  0035F6  D017               	goto	l6288
  1433                           
  1434                           ; BSR set to: 0
  1435                           ;easat2_main_mcu.c: 61: util_beacon_transmission(battery_voltage, solar_current, battery
      +                          _current, temperature);
  1436  0035F8  C0E3  F0D2         	movff	main_loop@battery_voltage,util_beacon_transmission@battery_voltage
  1437  0035FC  C0E4  F0D3         	movff	main_loop@battery_voltage+1,util_beacon_transmission@battery_voltage+1
  1438  003600  C0E5  F0D4         	movff	main_loop@battery_voltage+2,util_beacon_transmission@battery_voltage+2
  1439  003604  C0DF  F0D5         	movff	main_loop@solar_current,util_beacon_transmission@solar_current
  1440  003608  C0E0  F0D6         	movff	main_loop@solar_current+1,util_beacon_transmission@solar_current+1
  1441  00360C  C0E1  F0D7         	movff	main_loop@battery_current,util_beacon_transmission@battery_current
  1442  003610  C0E2  F0D8         	movff	main_loop@battery_current+1,util_beacon_transmission@battery_current+1
  1443  003614  C0DC  F0D9         	movff	main_loop@temperature,util_beacon_transmission@temperature
  1444  003618  C0DD  F0DA         	movff	main_loop@temperature+1,util_beacon_transmission@temperature+1
  1445  00361C  C0DE  F0DB         	movff	main_loop@temperature+2,util_beacon_transmission@temperature+2
  1446  003620  ECB7  F016         	call	_util_beacon_transmission	;wreg free
  1447                           
  1448                           ;easat2_main_mcu.c: 62: } else {
  1449  003624  D007               	goto	l26
  1450  003626                     l6288:
  1451                           
  1452                           ;easat2_main_mcu.c: 64: util_waits_delay_hours(2);
  1453  003626  0E00               	movlw	0
  1454  003628  0100               	movlb	0	; () banked
  1455  00362A  6F78               	movwf	(util_waits_delay_hours@hours+1)& (0+255),b
  1456  00362C  0E02               	movlw	2
  1457  00362E  6F77               	movwf	util_waits_delay_hours@hours& (0+255),b
  1458  003630  EC7D  F01C         	call	_util_waits_delay_hours	;wreg free
  1459  003634                     l26:
  1460                           
  1461                           ;easat2_main_mcu.c: 65: }
  1462                           ;easat2_main_mcu.c: 68: util_waits_delay_mins(3);
  1463  003634  0E00               	movlw	0
  1464  003636  0100               	movlb	0	; () banked
  1465  003638  6F76               	movwf	(util_waits_delay_mins@minutes+1)& (0+255),b
  1466  00363A  0E03               	movlw	3
  1467  00363C  6F75               	movwf	util_waits_delay_mins@minutes& (0+255),b
  1468  00363E  ECDF  F01C         	call	_util_waits_delay_mins	;wreg free
  1469                           
  1470                           ;easat2_main_mcu.c: 71: } while (1);
  1471  003642  D7BA               	goto	l24
  1472  003644                     __end_of_main_loop:
  1473                           	opt stack 0
  1474                           tblptru	equ	0xFF8
  1475                           tblptrh	equ	0xFF7
  1476                           tblptrl	equ	0xFF6
  1477                           tablat	equ	0xFF5
  1478                           postinc0	equ	0xFEE
  1479                           wreg	equ	0xFE8
  1480                           postdec1	equ	0xFE5
  1481                           fsr1l	equ	0xFE1
  1482                           
  1483 ;; *************** function _util_waits_delay_hours *****************
  1484 ;; Defined at:
  1485 ;;		line 17 in file "easat2_util_waits.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;  hours           2   23[BANK0 ] int 
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;  i               2   26[BANK0 ] int 
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  1    wreg      void 
  1492 ;; Registers used:
  1493 ;;		wreg, status,2, status,0, cstack
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1499 ;;      Params:         0       2       0       0       0       0       0
  1500 ;;      Locals:         0       2       0       0       0       0       0
  1501 ;;      Temps:          0       1       0       0       0       0       0
  1502 ;;      Totals:         0       5       0       0       0       0       0
  1503 ;;Total ram usage:        5 bytes
  1504 ;; Hardware stack levels used:    1
  1505 ;; Hardware stack levels required when called:    6
  1506 ;; This function calls:
  1507 ;;		_util_waits_delay_mins
  1508 ;; This function is called by:
  1509 ;;		_main_loop
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           	psect	text2
  1514  0038FA                     __ptext2:
  1515                           	opt stack 0
  1516  0038FA                     _util_waits_delay_hours:
  1517                           	opt stack 23
  1518                           
  1519                           ;easat2_util_waits.c: 18: for (int i = 0; i < hours; i++)
  1520                           
  1521                           ;incstack = 0
  1522  0038FA  0E00               	movlw	0
  1523  0038FC  0100               	movlb	0	; () banked
  1524  0038FE  6F7B               	movwf	(util_waits_delay_hours@i+1)& (0+255),b
  1525  003900  0E00               	movlw	0
  1526  003902  6F7A               	movwf	util_waits_delay_hours@i& (0+255),b
  1527  003904  D00A               	goto	l6134
  1528  003906                     l6130:
  1529                           
  1530                           ; BSR set to: 0
  1531                           ;easat2_util_waits.c: 19: util_waits_delay_mins(60);
  1532  003906  0E00               	movlw	0
  1533  003908  0100               	movlb	0	; () banked
  1534  00390A  6F76               	movwf	(util_waits_delay_mins@minutes+1)& (0+255),b
  1535  00390C  0E3C               	movlw	60
  1536  00390E  6F75               	movwf	util_waits_delay_mins@minutes& (0+255),b
  1537  003910  ECDF  F01C         	call	_util_waits_delay_mins	;wreg free
  1538  003914  0100               	movlb	0	; () banked
  1539  003916  4B7A               	infsnz	util_waits_delay_hours@i& (0+255),f,b
  1540  003918  2B7B               	incf	(util_waits_delay_hours@i+1)& (0+255),f,b
  1541  00391A                     l6134:
  1542                           
  1543                           ; BSR set to: 0
  1544  00391A  0100               	movlb	0	; () banked
  1545  00391C  5177               	movf	util_waits_delay_hours@hours& (0+255),w,b
  1546  00391E  0100               	movlb	0	; () banked
  1547  003920  5D7A               	subwf	util_waits_delay_hours@i& (0+255),w,b
  1548  003922  0100               	movlb	0	; () banked
  1549  003924  517B               	movf	(util_waits_delay_hours@i+1)& (0+255),w,b
  1550  003926  0A80               	xorlw	128
  1551  003928  0100               	movlb	0	; () banked
  1552  00392A  6F79               	movwf	??_util_waits_delay_hours& (0+255),b
  1553  00392C  0100               	movlb	0	; () banked
  1554  00392E  5178               	movf	(util_waits_delay_hours@hours+1)& (0+255),w,b
  1555  003930  0A80               	xorlw	128
  1556  003932  0100               	movlb	0	; () banked
  1557  003934  5979               	subwfb	??_util_waits_delay_hours& (0+255),w,b
  1558  003936  B0D8               	btfsc	status,0,c
  1559  003938  0012               	return	
  1560  00393A  D7E5               	goto	l6130
  1561  00393C                     __end_of_util_waits_delay_hours:
  1562                           	opt stack 0
  1563                           tblptru	equ	0xFF8
  1564                           tblptrh	equ	0xFF7
  1565                           tblptrl	equ	0xFF6
  1566                           tablat	equ	0xFF5
  1567                           postinc0	equ	0xFEE
  1568                           wreg	equ	0xFE8
  1569                           postdec1	equ	0xFE5
  1570                           fsr1l	equ	0xFE1
  1571                           status	equ	0xFD8
  1572                           
  1573 ;; *************** function _util_waits_delay_mins *****************
  1574 ;; Defined at:
  1575 ;;		line 24 in file "easat2_util_waits.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;  minutes         2   21[BANK0 ] int 
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;  i               2   42[COMRAM] int 
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  1    wreg      void 
  1582 ;; Registers used:
  1583 ;;		wreg, status,2, status,0, cstack
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1589 ;;      Params:         0       2       0       0       0       0       0
  1590 ;;      Locals:         2       0       0       0       0       0       0
  1591 ;;      Temps:          1       0       0       0       0       0       0
  1592 ;;      Totals:         3       2       0       0       0       0       0
  1593 ;;Total ram usage:        5 bytes
  1594 ;; Hardware stack levels used:    1
  1595 ;; Hardware stack levels required when called:    5
  1596 ;; This function calls:
  1597 ;;		_util_waits_delay_secs
  1598 ;; This function is called by:
  1599 ;;		_main_loop
  1600 ;;		_util_waits_delay_hours
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           	psect	text3
  1605  0039BE                     __ptext3:
  1606                           	opt stack 0
  1607  0039BE                     _util_waits_delay_mins:
  1608                           	opt stack 24
  1609                           
  1610                           ;easat2_util_waits.c: 25: for (int i = 0; i < minutes; i++)
  1611                           
  1612                           ; BSR set to: 0
  1613                           ;incstack = 0
  1614  0039BE  0E00               	movlw	0
  1615  0039C0  6E2C               	movwf	util_waits_delay_mins@i+1,c
  1616  0039C2  0E00               	movlw	0
  1617  0039C4  6E2B               	movwf	util_waits_delay_mins@i,c
  1618  0039C6  D009               	goto	l5360
  1619  0039C8                     l5356:
  1620                           
  1621                           ;easat2_util_waits.c: 26: util_waits_delay_secs(60);
  1622  0039C8  0E00               	movlw	0
  1623  0039CA  0100               	movlb	0	; () banked
  1624  0039CC  6F74               	movwf	(util_waits_delay_secs@secs+1)& (0+255),b
  1625  0039CE  0E3C               	movlw	60
  1626  0039D0  6F73               	movwf	util_waits_delay_secs@secs& (0+255),b
  1627  0039D2  ECE8  F01B         	call	_util_waits_delay_secs	;wreg free
  1628  0039D6  4A2B               	infsnz	util_waits_delay_mins@i,f,c
  1629  0039D8  2A2C               	incf	util_waits_delay_mins@i+1,f,c
  1630  0039DA                     l5360:
  1631  0039DA  0100               	movlb	0	; () banked
  1632  0039DC  5175               	movf	util_waits_delay_mins@minutes& (0+255),w,b
  1633  0039DE  5C2B               	subwf	util_waits_delay_mins@i,w,c
  1634  0039E0  502C               	movf	util_waits_delay_mins@i+1,w,c
  1635  0039E2  0A80               	xorlw	128
  1636  0039E4  6E2A               	movwf	??_util_waits_delay_mins& (0+255),c
  1637  0039E6  0100               	movlb	0	; () banked
  1638  0039E8  5176               	movf	(util_waits_delay_mins@minutes+1)& (0+255),w,b
  1639  0039EA  0A80               	xorlw	128
  1640  0039EC  582A               	subwfb	??_util_waits_delay_mins& (0+255),w,c
  1641  0039EE  B0D8               	btfsc	status,0,c
  1642  0039F0  0012               	return	
  1643  0039F2  D7EA               	goto	l5356
  1644  0039F4                     __end_of_util_waits_delay_mins:
  1645                           	opt stack 0
  1646                           tblptru	equ	0xFF8
  1647                           tblptrh	equ	0xFF7
  1648                           tblptrl	equ	0xFF6
  1649                           tablat	equ	0xFF5
  1650                           postinc0	equ	0xFEE
  1651                           wreg	equ	0xFE8
  1652                           postdec1	equ	0xFE5
  1653                           fsr1l	equ	0xFE1
  1654                           status	equ	0xFD8
  1655                           
  1656 ;; *************** function _util_getTemperature *****************
  1657 ;; Defined at:
  1658 ;;		line 118 in file "easat2_util_inputs.c"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;		None
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;  bit_mem       144    0[BANK1 ] int [72]
  1663 ;;  byte_mem       18  144[BANK1 ] int [9]
  1664 ;;  temperature     3  201[BANK1 ] float 
  1665 ;;  sign            3  164[BANK1 ] float 
  1666 ;;  i               2  204[BANK1 ] int 
  1667 ;;  bit_in_byte     2  199[BANK1 ] int 
  1668 ;;  num_byte        2  197[BANK1 ] int 
  1669 ;;  shift_reg_bi    2  195[BANK1 ] int 
  1670 ;;  shift_reg_bi    2  193[BANK1 ] int 
  1671 ;;  shift_reg_bi    2  191[BANK1 ] int 
  1672 ;;  shift_reg_bi    2  189[BANK1 ] int 
  1673 ;;  shift_reg_bi    2  187[BANK1 ] int 
  1674 ;;  shift_reg_bi    2  185[BANK1 ] int 
  1675 ;;  shift_reg_bi    2  183[BANK1 ] int 
  1676 ;;  shift_reg_bi    2  181[BANK1 ] int 
  1677 ;;  shift_reg_bi    2  179[BANK1 ] int 
  1678 ;;  num_bit         2  162[BANK1 ] int 
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  3   63[BANK0 ] float 
  1681 ;; Registers used:
  1682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1688 ;;      Params:         0       3       0       0       0       0       0
  1689 ;;      Locals:         0       0     206       0       0       0       0
  1690 ;;      Temps:          0       3       0       0       0       0       0
  1691 ;;      Totals:         0       6     206       0       0       0       0
  1692 ;;Total ram usage:      212 bytes
  1693 ;; Hardware stack levels used:    1
  1694 ;; Hardware stack levels required when called:    5
  1695 ;; This function calls:
  1696 ;;		___awtoft
  1697 ;;		___ftadd
  1698 ;;		___ftdiv
  1699 ;;		___ftmul
  1700 ;;		_util_onewire_read_byte
  1701 ;;		_util_onewire_reset
  1702 ;;		_util_onewire_write_byte
  1703 ;;		_util_waits_delay_secs
  1704 ;; This function is called by:
  1705 ;;		_main_loop
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           	psect	text4
  1710  000C48                     __ptext4:
  1711                           	opt stack 0
  1712  000C48                     _util_getTemperature:
  1713                           	opt stack 24
  1714                           
  1715                           ;easat2_util_inputs.c: 120: int byte_mem[9];
  1716                           ;easat2_util_inputs.c: 121: int bit_mem[(9*8)];
  1717                           ;easat2_util_inputs.c: 123: int shift_reg_bit0 = 0;
  1718                           
  1719                           ; BSR set to: 0
  1720                           ;incstack = 0
  1721  000C48  0E00               	movlw	0
  1722  000C4A  0101               	movlb	1	; () banked
  1723  000C4C  6FB4               	movwf	(util_getTemperature@shift_reg_bit0+1)& (0+255),b
  1724  000C4E  0E00               	movlw	0
  1725  000C50  6FB3               	movwf	util_getTemperature@shift_reg_bit0& (0+255),b
  1726                           
  1727                           ;easat2_util_inputs.c: 124: int shift_reg_bit1 = 0;
  1728  000C52  0E00               	movlw	0
  1729  000C54  0101               	movlb	1	; () banked
  1730  000C56  6FB6               	movwf	(util_getTemperature@shift_reg_bit1+1)& (0+255),b
  1731  000C58  0E00               	movlw	0
  1732  000C5A  6FB5               	movwf	util_getTemperature@shift_reg_bit1& (0+255),b
  1733                           
  1734                           ;easat2_util_inputs.c: 125: int shift_reg_bit2 = 0;
  1735  000C5C  0E00               	movlw	0
  1736  000C5E  0101               	movlb	1	; () banked
  1737  000C60  6FB8               	movwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),b
  1738  000C62  0E00               	movlw	0
  1739  000C64  6FB7               	movwf	util_getTemperature@shift_reg_bit2& (0+255),b
  1740                           
  1741                           ;easat2_util_inputs.c: 126: int shift_reg_bit3 = 0;
  1742  000C66  0E00               	movlw	0
  1743  000C68  0101               	movlb	1	; () banked
  1744  000C6A  6FBA               	movwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),b
  1745  000C6C  0E00               	movlw	0
  1746  000C6E  6FB9               	movwf	util_getTemperature@shift_reg_bit3& (0+255),b
  1747                           
  1748                           ;easat2_util_inputs.c: 127: int shift_reg_bit4 = 0;
  1749  000C70  0E00               	movlw	0
  1750  000C72  0101               	movlb	1	; () banked
  1751  000C74  6FBC               	movwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),b
  1752  000C76  0E00               	movlw	0
  1753  000C78  6FBB               	movwf	util_getTemperature@shift_reg_bit4& (0+255),b
  1754                           
  1755                           ;easat2_util_inputs.c: 128: int shift_reg_bit5 = 0;
  1756  000C7A  0E00               	movlw	0
  1757  000C7C  0101               	movlb	1	; () banked
  1758  000C7E  6FBE               	movwf	(util_getTemperature@shift_reg_bit5+1)& (0+255),b
  1759  000C80  0E00               	movlw	0
  1760  000C82  6FBD               	movwf	util_getTemperature@shift_reg_bit5& (0+255),b
  1761                           
  1762                           ;easat2_util_inputs.c: 129: int shift_reg_bit6 = 0;
  1763  000C84  0E00               	movlw	0
  1764  000C86  0101               	movlb	1	; () banked
  1765  000C88  6FC0               	movwf	(util_getTemperature@shift_reg_bit6+1)& (0+255),b
  1766  000C8A  0E00               	movlw	0
  1767  000C8C  6FBF               	movwf	util_getTemperature@shift_reg_bit6& (0+255),b
  1768                           
  1769                           ;easat2_util_inputs.c: 130: int shift_reg_bit7 = 0;
  1770  000C8E  0E00               	movlw	0
  1771  000C90  0101               	movlb	1	; () banked
  1772  000C92  6FC2               	movwf	(util_getTemperature@shift_reg_bit7+1)& (0+255),b
  1773  000C94  0E00               	movlw	0
  1774  000C96  6FC1               	movwf	util_getTemperature@shift_reg_bit7& (0+255),b
  1775                           
  1776                           ;easat2_util_inputs.c: 131: int shift_reg_bit_temp = 0;
  1777  000C98  0E00               	movlw	0
  1778  000C9A  0101               	movlb	1	; () banked
  1779  000C9C  6FC4               	movwf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),b
  1780  000C9E  0E00               	movlw	0
  1781  000CA0  6FC3               	movwf	util_getTemperature@shift_reg_bit_temp& (0+255),b
  1782                           
  1783                           ;easat2_util_inputs.c: 133: int num_bit = 0, num_byte = 0, bit_in_byte = 0;
  1784  000CA2  0E00               	movlw	0
  1785  000CA4  0101               	movlb	1	; () banked
  1786  000CA6  6FA3               	movwf	(util_getTemperature@num_bit+1)& (0+255),b
  1787  000CA8  0E00               	movlw	0
  1788  000CAA  6FA2               	movwf	util_getTemperature@num_bit& (0+255),b
  1789  000CAC  0E00               	movlw	0
  1790  000CAE  0101               	movlb	1	; () banked
  1791  000CB0  6FC6               	movwf	(util_getTemperature@num_byte+1)& (0+255),b
  1792  000CB2  0E00               	movlw	0
  1793  000CB4  6FC5               	movwf	util_getTemperature@num_byte& (0+255),b
  1794  000CB6  0E00               	movlw	0
  1795  000CB8  0101               	movlb	1	; () banked
  1796  000CBA  6FC8               	movwf	(util_getTemperature@bit_in_byte+1)& (0+255),b
  1797  000CBC  0E00               	movlw	0
  1798  000CBE  6FC7               	movwf	util_getTemperature@bit_in_byte& (0+255),b
  1799                           
  1800                           ;easat2_util_inputs.c: 135: float temperature = 0.0;
  1801  000CC0  0E00               	movlw	0
  1802  000CC2  0101               	movlb	1	; () banked
  1803  000CC4  6FC9               	movwf	util_getTemperature@temperature& (0+255),b
  1804  000CC6  0E00               	movlw	0
  1805  000CC8  0101               	movlb	1	; () banked
  1806  000CCA  6FCA               	movwf	(util_getTemperature@temperature+1)& (0+255),b
  1807  000CCC  0E00               	movlw	0
  1808  000CCE  0101               	movlb	1	; () banked
  1809  000CD0  6FCB               	movwf	(util_getTemperature@temperature+2)& (0+255),b
  1810                           
  1811                           ;easat2_util_inputs.c: 136: float sign = 1.0;
  1812  000CD2  0E00               	movlw	0
  1813  000CD4  0101               	movlb	1	; () banked
  1814  000CD6  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  1815  000CD8  0E80               	movlw	128
  1816  000CDA  0101               	movlb	1	; () banked
  1817  000CDC  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  1818  000CDE  0E3F               	movlw	63
  1819  000CE0  0101               	movlb	1	; () banked
  1820  000CE2  6FA6               	movwf	(util_getTemperature@sign+2)& (0+255),b
  1821                           
  1822                           ;easat2_util_inputs.c: 137: int i = 0;
  1823  000CE4  0E00               	movlw	0
  1824  000CE6  0101               	movlb	1	; () banked
  1825  000CE8  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  1826  000CEA  0E00               	movlw	0
  1827  000CEC  6FCC               	movwf	util_getTemperature@i& (0+255),b
  1828                           
  1829                           ; BSR set to: 1
  1830                           ;easat2_util_inputs.c: 143: if (util_onewire_reset()) return -99.1;
  1831  000CEE  EC9E  F01C         	call	_util_onewire_reset	;wreg free
  1832  000CF2  0100               	movlb	0	; () banked
  1833  000CF4  5171               	movf	?_util_onewire_reset& (0+255),w,b
  1834  000CF6  0100               	movlb	0	; () banked
  1835  000CF8  1172               	iorwf	(?_util_onewire_reset+1)& (0+255),w,b
  1836  000CFA  B4D8               	btfsc	status,2,c
  1837  000CFC  D00A               	goto	l5978
  1838                           
  1839                           ; BSR set to: 0
  1840  000CFE  0E33               	movlw	51
  1841  000D00  0100               	movlb	0	; () banked
  1842  000D02  6F9F               	movwf	?_util_getTemperature& (0+255),b
  1843  000D04  0EC6               	movlw	198
  1844  000D06  0100               	movlb	0	; () banked
  1845  000D08  6FA0               	movwf	(?_util_getTemperature+1)& (0+255),b
  1846  000D0A  0EC2               	movlw	194
  1847  000D0C  0100               	movlb	0	; () banked
  1848  000D0E  6FA1               	movwf	(?_util_getTemperature+2)& (0+255),b
  1849                           
  1850                           ; BSR set to: 0
  1851  000D10  0012               	return	
  1852  000D12                     l5978:
  1853                           
  1854                           ; BSR set to: 0
  1855                           ;easat2_util_inputs.c: 146: util_onewire_write_byte(0xCC);
  1856  000D12  0E00               	movlw	0
  1857  000D14  0100               	movlb	0	; () banked
  1858  000D16  6F74               	movwf	(util_onewire_write_byte@value+1)& (0+255),b
  1859  000D18  0ECC               	movlw	204
  1860  000D1A  6F73               	movwf	util_onewire_write_byte@value& (0+255),b
  1861  000D1C  ECA5  F012         	call	_util_onewire_write_byte	;wreg free
  1862                           
  1863                           ;easat2_util_inputs.c: 149: util_onewire_write_byte(0x44);
  1864  000D20  0E00               	movlw	0
  1865  000D22  0100               	movlb	0	; () banked
  1866  000D24  6F74               	movwf	(util_onewire_write_byte@value+1)& (0+255),b
  1867  000D26  0E44               	movlw	68
  1868  000D28  6F73               	movwf	util_onewire_write_byte@value& (0+255),b
  1869  000D2A  ECA5  F012         	call	_util_onewire_write_byte	;wreg free
  1870                           
  1871                           ;easat2_util_inputs.c: 154: TRISAbits.TRISA3 = 1;
  1872  000D2E  8692               	bsf	3986,3,c	;volatile
  1873                           
  1874                           ;easat2_util_inputs.c: 158: for (i = 0; i < 5 && PORTAbits.RA3 == 0; i++)
  1875  000D30  0E00               	movlw	0
  1876  000D32  0101               	movlb	1	; () banked
  1877  000D34  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  1878  000D36  0E00               	movlw	0
  1879  000D38  6FCC               	movwf	util_getTemperature@i& (0+255),b
  1880  000D3A  D00A               	goto	l5988
  1881  000D3C                     l5984:
  1882                           
  1883                           ; BSR set to: 1
  1884                           ;easat2_util_inputs.c: 159: util_waits_delay_secs(1);
  1885  000D3C  0E00               	movlw	0
  1886  000D3E  0100               	movlb	0	; () banked
  1887  000D40  6F74               	movwf	(util_waits_delay_secs@secs+1)& (0+255),b
  1888  000D42  0E01               	movlw	1
  1889  000D44  6F73               	movwf	util_waits_delay_secs@secs& (0+255),b
  1890  000D46  ECE8  F01B         	call	_util_waits_delay_secs	;wreg free
  1891  000D4A  0101               	movlb	1	; () banked
  1892  000D4C  4BCC               	infsnz	util_getTemperature@i& (0+255),f,b
  1893  000D4E  2BCD               	incf	(util_getTemperature@i+1)& (0+255),f,b
  1894  000D50                     l5988:
  1895                           
  1896                           ; BSR set to: 1
  1897  000D50  0101               	movlb	1	; () banked
  1898  000D52  BFCD               	btfsc	(util_getTemperature@i+1)& (0+255),7,b
  1899  000D54  D008               	goto	l5990
  1900  000D56  0101               	movlb	1	; () banked
  1901  000D58  51CD               	movf	(util_getTemperature@i+1)& (0+255),w,b
  1902  000D5A  E107               	bnz	l5992
  1903  000D5C  0E05               	movlw	5
  1904  000D5E  0101               	movlb	1	; () banked
  1905  000D60  5DCC               	subwf	util_getTemperature@i& (0+255),w,b
  1906  000D62  B0D8               	btfsc	status,0,c
  1907  000D64  D002               	goto	l5992
  1908  000D66                     l5990:
  1909                           
  1910                           ; BSR set to: 1
  1911  000D66  A680               	btfss	3968,3,c	;volatile
  1912  000D68  D7E9               	goto	l5984
  1913  000D6A                     l5992:
  1914                           
  1915                           ; BSR set to: 1
  1916                           ;easat2_util_inputs.c: 161: if (i == 5) return -99.2;
  1917  000D6A  0E05               	movlw	5
  1918  000D6C  0101               	movlb	1	; () banked
  1919  000D6E  19CC               	xorwf	util_getTemperature@i& (0+255),w,b
  1920  000D70  0101               	movlb	1	; () banked
  1921  000D72  11CD               	iorwf	(util_getTemperature@i+1)& (0+255),w,b
  1922  000D74  A4D8               	btfss	status,2,c
  1923  000D76  D00A               	goto	l5998
  1924                           
  1925                           ; BSR set to: 1
  1926  000D78  0E66               	movlw	102
  1927  000D7A  0100               	movlb	0	; () banked
  1928  000D7C  6F9F               	movwf	?_util_getTemperature& (0+255),b
  1929  000D7E  0EC6               	movlw	198
  1930  000D80  0100               	movlb	0	; () banked
  1931  000D82  6FA0               	movwf	(?_util_getTemperature+1)& (0+255),b
  1932  000D84  0EC2               	movlw	194
  1933  000D86  0100               	movlb	0	; () banked
  1934  000D88  6FA1               	movwf	(?_util_getTemperature+2)& (0+255),b
  1935                           
  1936                           ; BSR set to: 0
  1937  000D8A  0012               	return	
  1938  000D8C                     l5998:
  1939                           
  1940                           ;easat2_util_inputs.c: 165: if (util_onewire_reset()) return -99.3;
  1941  000D8C  EC9E  F01C         	call	_util_onewire_reset	;wreg free
  1942  000D90  0100               	movlb	0	; () banked
  1943  000D92  5171               	movf	?_util_onewire_reset& (0+255),w,b
  1944  000D94  0100               	movlb	0	; () banked
  1945  000D96  1172               	iorwf	(?_util_onewire_reset+1)& (0+255),w,b
  1946  000D98  B4D8               	btfsc	status,2,c
  1947  000D9A  D00A               	goto	l6004
  1948                           
  1949                           ; BSR set to: 0
  1950  000D9C  0E9A               	movlw	154
  1951  000D9E  0100               	movlb	0	; () banked
  1952  000DA0  6F9F               	movwf	?_util_getTemperature& (0+255),b
  1953  000DA2  0EC6               	movlw	198
  1954  000DA4  0100               	movlb	0	; () banked
  1955  000DA6  6FA0               	movwf	(?_util_getTemperature+1)& (0+255),b
  1956  000DA8  0EC2               	movlw	194
  1957  000DAA  0100               	movlb	0	; () banked
  1958  000DAC  6FA1               	movwf	(?_util_getTemperature+2)& (0+255),b
  1959                           
  1960                           ; BSR set to: 0
  1961  000DAE  0012               	return	
  1962  000DB0                     l6004:
  1963                           
  1964                           ; BSR set to: 0
  1965                           ;easat2_util_inputs.c: 168: util_onewire_write_byte(0xCC);
  1966  000DB0  0E00               	movlw	0
  1967  000DB2  0100               	movlb	0	; () banked
  1968  000DB4  6F74               	movwf	(util_onewire_write_byte@value+1)& (0+255),b
  1969  000DB6  0ECC               	movlw	204
  1970  000DB8  6F73               	movwf	util_onewire_write_byte@value& (0+255),b
  1971  000DBA  ECA5  F012         	call	_util_onewire_write_byte	;wreg free
  1972                           
  1973                           ;easat2_util_inputs.c: 171: util_onewire_write_byte(0xBE);
  1974  000DBE  0E00               	movlw	0
  1975  000DC0  0100               	movlb	0	; () banked
  1976  000DC2  6F74               	movwf	(util_onewire_write_byte@value+1)& (0+255),b
  1977  000DC4  0EBE               	movlw	190
  1978  000DC6  6F73               	movwf	util_onewire_write_byte@value& (0+255),b
  1979  000DC8  ECA5  F012         	call	_util_onewire_write_byte	;wreg free
  1980                           
  1981                           ;easat2_util_inputs.c: 182: byte_mem[0] = util_onewire_read_byte();
  1982  000DCC  ECDB  F011         	call	_util_onewire_read_byte	;wreg free
  1983  000DD0  C073  F190         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem
  1984  000DD4  C074  F191         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+1
  1985                           
  1986                           ;easat2_util_inputs.c: 184: byte_mem[1] = util_onewire_read_byte();
  1987  000DD8  ECDB  F011         	call	_util_onewire_read_byte	;wreg free
  1988  000DDC  C073  F192         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+2
  1989  000DE0  C074  F193         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+3
  1990                           
  1991                           ;easat2_util_inputs.c: 186: byte_mem[2] = util_onewire_read_byte();
  1992  000DE4  ECDB  F011         	call	_util_onewire_read_byte	;wreg free
  1993  000DE8  C073  F194         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+4
  1994  000DEC  C074  F195         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+5
  1995                           
  1996                           ;easat2_util_inputs.c: 188: byte_mem[3] = util_onewire_read_byte();
  1997  000DF0  ECDB  F011         	call	_util_onewire_read_byte	;wreg free
  1998  000DF4  C073  F196         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+6
  1999  000DF8  C074  F197         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+7
  2000                           
  2001                           ;easat2_util_inputs.c: 190: byte_mem[4] = util_onewire_read_byte();
  2002  000DFC  ECDB  F011         	call	_util_onewire_read_byte	;wreg free
  2003  000E00  C073  F198         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+8
  2004  000E04  C074  F199         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+9
  2005                           
  2006                           ;easat2_util_inputs.c: 192: byte_mem[5] = util_onewire_read_byte();
  2007  000E08  ECDB  F011         	call	_util_onewire_read_byte	;wreg free
  2008  000E0C  C073  F19A         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+10
  2009  000E10  C074  F19B         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+11
  2010                           
  2011                           ;easat2_util_inputs.c: 194: byte_mem[6] = util_onewire_read_byte();
  2012  000E14  ECDB  F011         	call	_util_onewire_read_byte	;wreg free
  2013  000E18  C073  F19C         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+12
  2014  000E1C  C074  F19D         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+13
  2015                           
  2016                           ;easat2_util_inputs.c: 196: byte_mem[7] = util_onewire_read_byte();
  2017  000E20  ECDB  F011         	call	_util_onewire_read_byte	;wreg free
  2018  000E24  C073  F19E         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+14
  2019  000E28  C074  F19F         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+15
  2020                           
  2021                           ;easat2_util_inputs.c: 198: byte_mem[8] = util_onewire_read_byte();
  2022  000E2C  ECDB  F011         	call	_util_onewire_read_byte	;wreg free
  2023  000E30  C073  F1A0         	movff	?_util_onewire_read_byte,util_getTemperature@byte_mem+16
  2024  000E34  C074  F1A1         	movff	?_util_onewire_read_byte+1,util_getTemperature@byte_mem+17
  2025                           
  2026                           ;easat2_util_inputs.c: 202: for (num_byte = 0; num_byte < 9; num_byte++) {
  2027  000E38  0E00               	movlw	0
  2028  000E3A  0101               	movlb	1	; () banked
  2029  000E3C  6FC6               	movwf	(util_getTemperature@num_byte+1)& (0+255),b
  2030  000E3E  0E00               	movlw	0
  2031  000E40  6FC5               	movwf	util_getTemperature@num_byte& (0+255),b
  2032  000E42                     l6008:
  2033                           
  2034                           ; BSR set to: 1
  2035  000E42  0101               	movlb	1	; () banked
  2036  000E44  BFC6               	btfsc	(util_getTemperature@num_byte+1)& (0+255),7,b
  2037  000E46  D008               	goto	l6012
  2038  000E48  0101               	movlb	1	; () banked
  2039  000E4A  51C6               	movf	(util_getTemperature@num_byte+1)& (0+255),w,b
  2040  000E4C  E14F               	bnz	l6030
  2041  000E4E  0E09               	movlw	9
  2042  000E50  0101               	movlb	1	; () banked
  2043  000E52  5DC5               	subwf	util_getTemperature@num_byte& (0+255),w,b
  2044  000E54  B0D8               	btfsc	status,0,c
  2045  000E56  D04A               	goto	l6030
  2046  000E58                     l6012:
  2047                           
  2048                           ; BSR set to: 1
  2049                           ;easat2_util_inputs.c: 203: for (bit_in_byte = 0; bit_in_byte < 8; bit_in_byte++)
  2050  000E58  0E00               	movlw	0
  2051  000E5A  0101               	movlb	1	; () banked
  2052  000E5C  6FC8               	movwf	(util_getTemperature@bit_in_byte+1)& (0+255),b
  2053  000E5E  0E00               	movlw	0
  2054  000E60  6FC7               	movwf	util_getTemperature@bit_in_byte& (0+255),b
  2055  000E62                     l6014:
  2056                           
  2057                           ; BSR set to: 1
  2058  000E62  0101               	movlb	1	; () banked
  2059  000E64  BFC8               	btfsc	(util_getTemperature@bit_in_byte+1)& (0+255),7,b
  2060  000E66  D008               	goto	l6018
  2061  000E68  0101               	movlb	1	; () banked
  2062  000E6A  51C8               	movf	(util_getTemperature@bit_in_byte+1)& (0+255),w,b
  2063  000E6C  E13B               	bnz	l6026
  2064  000E6E  0E08               	movlw	8
  2065  000E70  0101               	movlb	1	; () banked
  2066  000E72  5DC7               	subwf	util_getTemperature@bit_in_byte& (0+255),w,b
  2067  000E74  B0D8               	btfsc	status,0,c
  2068  000E76  D036               	goto	l6026
  2069  000E78                     l6018:
  2070                           
  2071                           ; BSR set to: 1
  2072                           ;easat2_util_inputs.c: 204: bit_mem[num_bit++] = (byte_mem[num_byte] >> bit_in_byte) & 0
      +                          x01;
  2073  000E78  C1C7  F0A2         	movff	util_getTemperature@bit_in_byte,??_util_getTemperature
  2074  000E7C  90D8               	bcf	status,0,c
  2075  000E7E  0101               	movlb	1	; () banked
  2076  000E80  35C5               	rlcf	util_getTemperature@num_byte& (0+255),w,b
  2077  000E82  6ED9               	movwf	fsr2l,c
  2078  000E84  0101               	movlb	1	; () banked
  2079  000E86  35C6               	rlcf	(util_getTemperature@num_byte+1)& (0+255),w,b
  2080  000E88  6EDA               	movwf	fsr2h,c
  2081  000E8A  0E90               	movlw	low util_getTemperature@byte_mem
  2082  000E8C  26D9               	addwf	fsr2l,f,c
  2083  000E8E  0E01               	movlw	high util_getTemperature@byte_mem
  2084  000E90  22DA               	addwfc	fsr2h,f,c
  2085  000E92  CFDE F0A3          	movff	postinc2,??_util_getTemperature+1
  2086  000E96  CFDD F0A4          	movff	postdec2,??_util_getTemperature+2
  2087  000E9A  0100               	movlb	0	; () banked
  2088  000E9C  2BA2               	incf	??_util_getTemperature& (0+255),f,b
  2089  000E9E  D004               	goto	u6184
  2090  000EA0                     u6185:
  2091  000EA0  0100               	movlb	0	; () banked
  2092  000EA2  35A4               	rlcf	(??_util_getTemperature+2)& (0+255),w,b
  2093  000EA4  33A4               	rrcf	(??_util_getTemperature+2)& (0+255),f,b
  2094  000EA6  33A3               	rrcf	(??_util_getTemperature+1)& (0+255),f,b
  2095  000EA8                     u6184:
  2096  000EA8  0100               	movlb	0	; () banked
  2097  000EAA  2FA2               	decfsz	??_util_getTemperature& (0+255),f,b
  2098  000EAC  D7F9               	goto	u6185
  2099  000EAE  0E01               	movlw	1
  2100  000EB0  0100               	movlb	0	; () banked
  2101  000EB2  17A3               	andwf	(??_util_getTemperature+1)& (0+255),f,b
  2102  000EB4  0E00               	movlw	0
  2103  000EB6  17A4               	andwf	(??_util_getTemperature+2)& (0+255),f,b
  2104  000EB8  90D8               	bcf	status,0,c
  2105  000EBA  0101               	movlb	1	; () banked
  2106  000EBC  35A2               	rlcf	util_getTemperature@num_bit& (0+255),w,b
  2107  000EBE  6ED9               	movwf	fsr2l,c
  2108  000EC0  0101               	movlb	1	; () banked
  2109  000EC2  35A3               	rlcf	(util_getTemperature@num_bit+1)& (0+255),w,b
  2110  000EC4  6EDA               	movwf	fsr2h,c
  2111  000EC6  0E00               	movlw	low util_getTemperature@bit_mem
  2112  000EC8  26D9               	addwf	fsr2l,f,c
  2113  000ECA  0E01               	movlw	high util_getTemperature@bit_mem
  2114  000ECC  22DA               	addwfc	fsr2h,f,c
  2115  000ECE  C0A3  FFDE         	movff	??_util_getTemperature+1,postinc2
  2116  000ED2  C0A4  FFDD         	movff	??_util_getTemperature+2,postdec2
  2117                           
  2118                           ; BSR set to: 1
  2119  000ED6  0101               	movlb	1	; () banked
  2120  000ED8  4BA2               	infsnz	util_getTemperature@num_bit& (0+255),f,b
  2121  000EDA  2BA3               	incf	(util_getTemperature@num_bit+1)& (0+255),f,b
  2122                           
  2123                           ; BSR set to: 1
  2124  000EDC  0101               	movlb	1	; () banked
  2125  000EDE  4BC7               	infsnz	util_getTemperature@bit_in_byte& (0+255),f,b
  2126  000EE0  2BC8               	incf	(util_getTemperature@bit_in_byte+1)& (0+255),f,b
  2127  000EE2  D7BF               	goto	l6014
  2128  000EE4                     l6026:
  2129                           
  2130                           ; BSR set to: 1
  2131  000EE4  0101               	movlb	1	; () banked
  2132  000EE6  4BC5               	infsnz	util_getTemperature@num_byte& (0+255),f,b
  2133  000EE8  2BC6               	incf	(util_getTemperature@num_byte+1)& (0+255),f,b
  2134  000EEA  D7AB               	goto	l6008
  2135  000EEC                     l6030:
  2136                           
  2137                           ; BSR set to: 1
  2138                           ;easat2_util_inputs.c: 205: }
  2139                           ;easat2_util_inputs.c: 209: for (i = 0; i < (9*8); i++) {
  2140  000EEC  0E00               	movlw	0
  2141  000EEE  0101               	movlb	1	; () banked
  2142  000EF0  6FCD               	movwf	(util_getTemperature@i+1)& (0+255),b
  2143  000EF2  0E00               	movlw	0
  2144  000EF4  6FCC               	movwf	util_getTemperature@i& (0+255),b
  2145  000EF6                     l6032:
  2146                           
  2147                           ; BSR set to: 1
  2148  000EF6  0101               	movlb	1	; () banked
  2149  000EF8  BFCD               	btfsc	(util_getTemperature@i+1)& (0+255),7,b
  2150  000EFA  D008               	goto	l6036
  2151  000EFC  0101               	movlb	1	; () banked
  2152  000EFE  51CD               	movf	(util_getTemperature@i+1)& (0+255),w,b
  2153  000F00  E154               	bnz	l6058
  2154  000F02  0E48               	movlw	72
  2155  000F04  0101               	movlb	1	; () banked
  2156  000F06  5DCC               	subwf	util_getTemperature@i& (0+255),w,b
  2157  000F08  B0D8               	btfsc	status,0,c
  2158  000F0A  D04F               	goto	l6058
  2159  000F0C                     l6036:
  2160                           
  2161                           ; BSR set to: 1
  2162                           ;easat2_util_inputs.c: 214: shift_reg_bit_temp = shift_reg_bit0^bit_mem[i];
  2163  000F0C  90D8               	bcf	status,0,c
  2164  000F0E  0101               	movlb	1	; () banked
  2165  000F10  35CC               	rlcf	util_getTemperature@i& (0+255),w,b
  2166  000F12  6ED9               	movwf	fsr2l,c
  2167  000F14  0101               	movlb	1	; () banked
  2168  000F16  35CD               	rlcf	(util_getTemperature@i+1)& (0+255),w,b
  2169  000F18  6EDA               	movwf	fsr2h,c
  2170  000F1A  0E00               	movlw	low util_getTemperature@bit_mem
  2171  000F1C  26D9               	addwf	fsr2l,f,c
  2172  000F1E  0E01               	movlw	high util_getTemperature@bit_mem
  2173  000F20  22DA               	addwfc	fsr2h,f,c
  2174  000F22  CFDE F0A2          	movff	postinc2,??_util_getTemperature
  2175  000F26  CFDD F0A3          	movff	postdec2,??_util_getTemperature+1
  2176  000F2A  0101               	movlb	1	; () banked
  2177  000F2C  51B3               	movf	util_getTemperature@shift_reg_bit0& (0+255),w,b
  2178  000F2E  0100               	movlb	0	; () banked
  2179  000F30  19A2               	xorwf	??_util_getTemperature& (0+255),w,b
  2180  000F32  0101               	movlb	1	; () banked
  2181  000F34  6FC3               	movwf	util_getTemperature@shift_reg_bit_temp& (0+255),b
  2182  000F36  0101               	movlb	1	; () banked
  2183  000F38  51B4               	movf	(util_getTemperature@shift_reg_bit0+1)& (0+255),w,b
  2184  000F3A  0100               	movlb	0	; () banked
  2185  000F3C  19A3               	xorwf	(??_util_getTemperature+1)& (0+255),w,b
  2186  000F3E  0101               	movlb	1	; () banked
  2187  000F40  6FC4               	movwf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),b
  2188                           
  2189                           ; BSR set to: 1
  2190                           ;easat2_util_inputs.c: 216: shift_reg_bit0 = shift_reg_bit1;
  2191  000F42  C1B5  F1B3         	movff	util_getTemperature@shift_reg_bit1,util_getTemperature@shift_reg_bit0
  2192  000F46  C1B6  F1B4         	movff	util_getTemperature@shift_reg_bit1+1,util_getTemperature@shift_reg_bit0+1
  2193                           
  2194                           ; BSR set to: 1
  2195                           ;easat2_util_inputs.c: 217: shift_reg_bit1 = shift_reg_bit2;
  2196  000F4A  C1B7  F1B5         	movff	util_getTemperature@shift_reg_bit2,util_getTemperature@shift_reg_bit1
  2197  000F4E  C1B8  F1B6         	movff	util_getTemperature@shift_reg_bit2+1,util_getTemperature@shift_reg_bit1+1
  2198                           
  2199                           ; BSR set to: 1
  2200                           ;easat2_util_inputs.c: 218: shift_reg_bit2 = shift_reg_bit3 ^ shift_reg_bit_temp;
  2201  000F52  0101               	movlb	1	; () banked
  2202  000F54  51C3               	movf	util_getTemperature@shift_reg_bit_temp& (0+255),w,b
  2203  000F56  0101               	movlb	1	; () banked
  2204  000F58  19B9               	xorwf	util_getTemperature@shift_reg_bit3& (0+255),w,b
  2205  000F5A  0101               	movlb	1	; () banked
  2206  000F5C  6FB7               	movwf	util_getTemperature@shift_reg_bit2& (0+255),b
  2207  000F5E  0101               	movlb	1	; () banked
  2208  000F60  51C4               	movf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),w,b
  2209  000F62  0101               	movlb	1	; () banked
  2210  000F64  19BA               	xorwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),w,b
  2211  000F66  0101               	movlb	1	; () banked
  2212  000F68  6FB8               	movwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),b
  2213                           
  2214                           ; BSR set to: 1
  2215                           ;easat2_util_inputs.c: 219: shift_reg_bit3 = shift_reg_bit4 ^ shift_reg_bit_temp;
  2216  000F6A  0101               	movlb	1	; () banked
  2217  000F6C  51C3               	movf	util_getTemperature@shift_reg_bit_temp& (0+255),w,b
  2218  000F6E  0101               	movlb	1	; () banked
  2219  000F70  19BB               	xorwf	util_getTemperature@shift_reg_bit4& (0+255),w,b
  2220  000F72  0101               	movlb	1	; () banked
  2221  000F74  6FB9               	movwf	util_getTemperature@shift_reg_bit3& (0+255),b
  2222  000F76  0101               	movlb	1	; () banked
  2223  000F78  51C4               	movf	(util_getTemperature@shift_reg_bit_temp+1)& (0+255),w,b
  2224  000F7A  0101               	movlb	1	; () banked
  2225  000F7C  19BC               	xorwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),w,b
  2226  000F7E  0101               	movlb	1	; () banked
  2227  000F80  6FBA               	movwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),b
  2228                           
  2229                           ; BSR set to: 1
  2230                           ;easat2_util_inputs.c: 220: shift_reg_bit4 = shift_reg_bit5;
  2231  000F82  C1BD  F1BB         	movff	util_getTemperature@shift_reg_bit5,util_getTemperature@shift_reg_bit4
  2232  000F86  C1BE  F1BC         	movff	util_getTemperature@shift_reg_bit5+1,util_getTemperature@shift_reg_bit4+1
  2233                           
  2234                           ; BSR set to: 1
  2235                           ;easat2_util_inputs.c: 221: shift_reg_bit5 = shift_reg_bit6;
  2236  000F8A  C1BF  F1BD         	movff	util_getTemperature@shift_reg_bit6,util_getTemperature@shift_reg_bit5
  2237  000F8E  C1C0  F1BE         	movff	util_getTemperature@shift_reg_bit6+1,util_getTemperature@shift_reg_bit5+1
  2238                           
  2239                           ; BSR set to: 1
  2240                           ;easat2_util_inputs.c: 222: shift_reg_bit6 = shift_reg_bit7;
  2241  000F92  C1C1  F1BF         	movff	util_getTemperature@shift_reg_bit7,util_getTemperature@shift_reg_bit6
  2242  000F96  C1C2  F1C0         	movff	util_getTemperature@shift_reg_bit7+1,util_getTemperature@shift_reg_bit6+1
  2243                           
  2244                           ; BSR set to: 1
  2245                           ;easat2_util_inputs.c: 223: shift_reg_bit7 = shift_reg_bit_temp;
  2246  000F9A  C1C3  F1C1         	movff	util_getTemperature@shift_reg_bit_temp,util_getTemperature@shift_reg_bit7
  2247  000F9E  C1C4  F1C2         	movff	util_getTemperature@shift_reg_bit_temp+1,util_getTemperature@shift_reg_bit7+1
  2248                           
  2249                           ; BSR set to: 1
  2250  000FA2  0101               	movlb	1	; () banked
  2251  000FA4  4BCC               	infsnz	util_getTemperature@i& (0+255),f,b
  2252  000FA6  2BCD               	incf	(util_getTemperature@i+1)& (0+255),f,b
  2253  000FA8  D7A6               	goto	l6032
  2254  000FAA                     l6058:
  2255                           
  2256                           ; BSR set to: 1
  2257                           ;easat2_util_inputs.c: 225: }
  2258                           ;easat2_util_inputs.c: 229: if (shift_reg_bit0 != 0 || shift_reg_bit1 != 0 || shift_reg_
      +                          bit2 != 0 &&
  2259                           ;easat2_util_inputs.c: 230: shift_reg_bit3 != 0 || shift_reg_bit4 != 0 || shift_reg_bit5
      +                           != 0 &&
  2260                           ;easat2_util_inputs.c: 231: shift_reg_bit6 != 0 || shift_reg_bit7 != 0)
  2261  000FAA  0101               	movlb	1	; () banked
  2262  000FAC  51B3               	movf	util_getTemperature@shift_reg_bit0& (0+255),w,b
  2263  000FAE  0101               	movlb	1	; () banked
  2264  000FB0  11B4               	iorwf	(util_getTemperature@shift_reg_bit0+1)& (0+255),w,b
  2265  000FB2  A4D8               	btfss	status,2,c
  2266  000FB4  D02A               	goto	l6074
  2267                           
  2268                           ; BSR set to: 1
  2269  000FB6  0101               	movlb	1	; () banked
  2270  000FB8  51B5               	movf	util_getTemperature@shift_reg_bit1& (0+255),w,b
  2271  000FBA  0101               	movlb	1	; () banked
  2272  000FBC  11B6               	iorwf	(util_getTemperature@shift_reg_bit1+1)& (0+255),w,b
  2273  000FBE  A4D8               	btfss	status,2,c
  2274  000FC0  D024               	goto	l6074
  2275                           
  2276                           ; BSR set to: 1
  2277  000FC2  0101               	movlb	1	; () banked
  2278  000FC4  51B7               	movf	util_getTemperature@shift_reg_bit2& (0+255),w,b
  2279  000FC6  0101               	movlb	1	; () banked
  2280  000FC8  11B8               	iorwf	(util_getTemperature@shift_reg_bit2+1)& (0+255),w,b
  2281  000FCA  B4D8               	btfsc	status,2,c
  2282  000FCC  D006               	goto	l6066
  2283                           
  2284                           ; BSR set to: 1
  2285  000FCE  0101               	movlb	1	; () banked
  2286  000FD0  51B9               	movf	util_getTemperature@shift_reg_bit3& (0+255),w,b
  2287  000FD2  0101               	movlb	1	; () banked
  2288  000FD4  11BA               	iorwf	(util_getTemperature@shift_reg_bit3+1)& (0+255),w,b
  2289  000FD6  A4D8               	btfss	status,2,c
  2290  000FD8  D018               	goto	l6074
  2291  000FDA                     l6066:
  2292                           
  2293                           ; BSR set to: 1
  2294  000FDA  0101               	movlb	1	; () banked
  2295  000FDC  51BB               	movf	util_getTemperature@shift_reg_bit4& (0+255),w,b
  2296  000FDE  0101               	movlb	1	; () banked
  2297  000FE0  11BC               	iorwf	(util_getTemperature@shift_reg_bit4+1)& (0+255),w,b
  2298  000FE2  A4D8               	btfss	status,2,c
  2299  000FE4  D012               	goto	l6074
  2300                           
  2301                           ; BSR set to: 1
  2302  000FE6  0101               	movlb	1	; () banked
  2303  000FE8  51BD               	movf	util_getTemperature@shift_reg_bit5& (0+255),w,b
  2304  000FEA  0101               	movlb	1	; () banked
  2305  000FEC  11BE               	iorwf	(util_getTemperature@shift_reg_bit5+1)& (0+255),w,b
  2306  000FEE  B4D8               	btfsc	status,2,c
  2307  000FF0  D006               	goto	l6072
  2308                           
  2309                           ; BSR set to: 1
  2310  000FF2  0101               	movlb	1	; () banked
  2311  000FF4  51BF               	movf	util_getTemperature@shift_reg_bit6& (0+255),w,b
  2312  000FF6  0101               	movlb	1	; () banked
  2313  000FF8  11C0               	iorwf	(util_getTemperature@shift_reg_bit6+1)& (0+255),w,b
  2314  000FFA  A4D8               	btfss	status,2,c
  2315  000FFC  D006               	goto	l6074
  2316  000FFE                     l6072:
  2317                           
  2318                           ; BSR set to: 1
  2319  000FFE  0101               	movlb	1	; () banked
  2320  001000  51C1               	movf	util_getTemperature@shift_reg_bit7& (0+255),w,b
  2321  001002  0101               	movlb	1	; () banked
  2322  001004  11C2               	iorwf	(util_getTemperature@shift_reg_bit7+1)& (0+255),w,b
  2323  001006  B4D8               	btfsc	status,2,c
  2324  001008  D00A               	goto	l6078
  2325  00100A                     l6074:
  2326                           
  2327                           ; BSR set to: 1
  2328                           ;easat2_util_inputs.c: 232: return -99.7;
  2329  00100A  0E66               	movlw	102
  2330  00100C  0100               	movlb	0	; () banked
  2331  00100E  6F9F               	movwf	?_util_getTemperature& (0+255),b
  2332  001010  0EC7               	movlw	199
  2333  001012  0100               	movlb	0	; () banked
  2334  001014  6FA0               	movwf	(?_util_getTemperature+1)& (0+255),b
  2335  001016  0EC2               	movlw	194
  2336  001018  0100               	movlb	0	; () banked
  2337  00101A  6FA1               	movwf	(?_util_getTemperature+2)& (0+255),b
  2338                           
  2339                           ; BSR set to: 0
  2340  00101C  0012               	return	
  2341  00101E                     l6078:
  2342                           
  2343                           ;easat2_util_inputs.c: 236: if (bit_mem[11] == 0) sign = 1.0; else sign = -1.0;
  2344  00101E  0101               	movlb	1	; () banked
  2345  001020  5116               	movf	(util_getTemperature@bit_mem+22)& (0+255),w,b
  2346  001022  0101               	movlb	1	; () banked
  2347  001024  1117               	iorwf	(util_getTemperature@bit_mem+23)& (0+255),w,b
  2348  001026  A4D8               	btfss	status,2,c
  2349  001028  D008               	goto	l6082
  2350                           
  2351                           ; BSR set to: 1
  2352  00102A  0E00               	movlw	0
  2353  00102C  0101               	movlb	1	; () banked
  2354  00102E  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  2355  001030  0E80               	movlw	128
  2356  001032  0101               	movlb	1	; () banked
  2357  001034  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  2358  001036  0E3F               	movlw	63
  2359  001038  D007               	goto	L1
  2360  00103A                     l6082:
  2361                           
  2362                           ; BSR set to: 1
  2363  00103A  0E00               	movlw	0
  2364  00103C  0101               	movlb	1	; () banked
  2365  00103E  6FA4               	movwf	util_getTemperature@sign& (0+255),b
  2366  001040  0E80               	movlw	128
  2367  001042  0101               	movlb	1	; () banked
  2368  001044  6FA5               	movwf	(util_getTemperature@sign+1)& (0+255),b
  2369  001046  0EBF               	movlw	191
  2370  001048                     L1:
  2371  001048  0101               	movlb	1	; () banked
  2372  00104A  6FA6               	movwf	(util_getTemperature@sign+2)& (0+255),b
  2373                           
  2374                           ; BSR set to: 1
  2375                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2376                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2377                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2378                           
  2379                           ; BSR set to: 1
  2380  00104C  0E00               	movlw	0
  2381  00104E  0100               	movlb	0	; () banked
  2382  001050  6F7C               	movwf	___ftdiv@f2& (0+255),b
  2383  001052  0E00               	movlw	0
  2384  001054  0100               	movlb	0	; () banked
  2385  001056  6F7D               	movwf	(___ftdiv@f2+1)& (0+255),b
  2386  001058  0E41               	movlw	65
  2387  00105A  0100               	movlb	0	; () banked
  2388  00105C  6F7E               	movwf	(___ftdiv@f2+2)& (0+255),b
  2389  00105E  C102  F076         	movff	util_getTemperature@bit_mem+2,___awtoft@c
  2390  001062  C103  F077         	movff	util_getTemperature@bit_mem+3,___awtoft@c+1
  2391  001066  ECBF  F01C         	call	___awtoft	;wreg free
  2392  00106A  C076  F079         	movff	?___awtoft,___ftdiv@f1
  2393  00106E  C077  F07A         	movff	?___awtoft+1,___ftdiv@f1+1
  2394  001072  C078  F07B         	movff	?___awtoft+2,___ftdiv@f1+2
  2395  001076  EC17  F016         	call	___ftdiv	;wreg free
  2396  00107A  C079  F096         	movff	?___ftdiv,___ftadd@f2
  2397  00107E  C07A  F097         	movff	?___ftdiv+1,___ftadd@f2+1
  2398  001082  C07B  F098         	movff	?___ftdiv+2,___ftadd@f2+2
  2399  001086  0E00               	movlw	0
  2400  001088  0100               	movlb	0	; () banked
  2401  00108A  6F7C               	movwf	___ftdiv@f2& (0+255),b
  2402  00108C  0E80               	movlw	128
  2403  00108E  0100               	movlb	0	; () banked
  2404  001090  6F7D               	movwf	(___ftdiv@f2+1)& (0+255),b
  2405  001092  0E41               	movlw	65
  2406  001094  0100               	movlb	0	; () banked
  2407  001096  6F7E               	movwf	(___ftdiv@f2+2)& (0+255),b
  2408  001098  C100  F076         	movff	util_getTemperature@bit_mem,___awtoft@c
  2409  00109C  C101  F077         	movff	util_getTemperature@bit_mem+1,___awtoft@c+1
  2410  0010A0  ECBF  F01C         	call	___awtoft	;wreg free
  2411  0010A4  C076  F079         	movff	?___awtoft,___ftdiv@f1
  2412  0010A8  C077  F07A         	movff	?___awtoft+1,___ftdiv@f1+1
  2413  0010AC  C078  F07B         	movff	?___awtoft+2,___ftdiv@f1+2
  2414  0010B0  EC17  F016         	call	___ftdiv	;wreg free
  2415  0010B4  C079  F093         	movff	?___ftdiv,___ftadd@f1
  2416  0010B8  C07A  F094         	movff	?___ftdiv+1,___ftadd@f1+1
  2417  0010BC  C07B  F095         	movff	?___ftdiv+2,___ftadd@f1+2
  2418  0010C0  EC9A  F00F         	call	___ftadd	;wreg free
  2419  0010C4  C093  F1A7         	movff	?___ftadd,_util_getTemperature$2674
  2420  0010C8  C094  F1A8         	movff	?___ftadd+1,_util_getTemperature$2674+1
  2421  0010CC  C095  F1A9         	movff	?___ftadd+2,_util_getTemperature$2674+2
  2422                           
  2423                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2424                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2425                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2426  0010D0  0E00               	movlw	0
  2427  0010D2  0100               	movlb	0	; () banked
  2428  0010D4  6F7C               	movwf	___ftdiv@f2& (0+255),b
  2429  0010D6  0E80               	movlw	128
  2430  0010D8  0100               	movlb	0	; () banked
  2431  0010DA  6F7D               	movwf	(___ftdiv@f2+1)& (0+255),b
  2432  0010DC  0E40               	movlw	64
  2433  0010DE  0100               	movlb	0	; () banked
  2434  0010E0  6F7E               	movwf	(___ftdiv@f2+2)& (0+255),b
  2435  0010E2  C104  F076         	movff	util_getTemperature@bit_mem+4,___awtoft@c
  2436  0010E6  C105  F077         	movff	util_getTemperature@bit_mem+5,___awtoft@c+1
  2437  0010EA  ECBF  F01C         	call	___awtoft	;wreg free
  2438  0010EE  C076  F079         	movff	?___awtoft,___ftdiv@f1
  2439  0010F2  C077  F07A         	movff	?___awtoft+1,___ftdiv@f1+1
  2440  0010F6  C078  F07B         	movff	?___awtoft+2,___ftdiv@f1+2
  2441  0010FA  EC17  F016         	call	___ftdiv	;wreg free
  2442  0010FE  C079  F096         	movff	?___ftdiv,___ftadd@f2
  2443  001102  C07A  F097         	movff	?___ftdiv+1,___ftadd@f2+1
  2444  001106  C07B  F098         	movff	?___ftdiv+2,___ftadd@f2+2
  2445  00110A  C1A7  F093         	movff	_util_getTemperature$2674,___ftadd@f1
  2446  00110E  C1A8  F094         	movff	_util_getTemperature$2674+1,___ftadd@f1+1
  2447  001112  C1A9  F095         	movff	_util_getTemperature$2674+2,___ftadd@f1+2
  2448  001116  EC9A  F00F         	call	___ftadd	;wreg free
  2449  00111A  C093  F1AA         	movff	?___ftadd,_util_getTemperature$2675
  2450  00111E  C094  F1AB         	movff	?___ftadd+1,_util_getTemperature$2675+1
  2451  001122  C095  F1AC         	movff	?___ftadd+2,_util_getTemperature$2675+2
  2452                           
  2453                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2454                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2455                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2456  001126  0E00               	movlw	0
  2457  001128  0100               	movlb	0	; () banked
  2458  00112A  6F7C               	movwf	___ftdiv@f2& (0+255),b
  2459  00112C  0E00               	movlw	0
  2460  00112E  0100               	movlb	0	; () banked
  2461  001130  6F7D               	movwf	(___ftdiv@f2+1)& (0+255),b
  2462  001132  0E40               	movlw	64
  2463  001134  0100               	movlb	0	; () banked
  2464  001136  6F7E               	movwf	(___ftdiv@f2+2)& (0+255),b
  2465  001138  C106  F076         	movff	util_getTemperature@bit_mem+6,___awtoft@c
  2466  00113C  C107  F077         	movff	util_getTemperature@bit_mem+7,___awtoft@c+1
  2467  001140  ECBF  F01C         	call	___awtoft	;wreg free
  2468  001144  C076  F079         	movff	?___awtoft,___ftdiv@f1
  2469  001148  C077  F07A         	movff	?___awtoft+1,___ftdiv@f1+1
  2470  00114C  C078  F07B         	movff	?___awtoft+2,___ftdiv@f1+2
  2471  001150  EC17  F016         	call	___ftdiv	;wreg free
  2472  001154  C079  F096         	movff	?___ftdiv,___ftadd@f2
  2473  001158  C07A  F097         	movff	?___ftdiv+1,___ftadd@f2+1
  2474  00115C  C07B  F098         	movff	?___ftdiv+2,___ftadd@f2+2
  2475  001160  C1AA  F093         	movff	_util_getTemperature$2675,___ftadd@f1
  2476  001164  C1AB  F094         	movff	_util_getTemperature$2675+1,___ftadd@f1+1
  2477  001168  C1AC  F095         	movff	_util_getTemperature$2675+2,___ftadd@f1+2
  2478  00116C  EC9A  F00F         	call	___ftadd	;wreg free
  2479  001170  C093  F1AD         	movff	?___ftadd,_util_getTemperature$2676
  2480  001174  C094  F1AE         	movff	?___ftadd+1,_util_getTemperature$2676+1
  2481  001178  C095  F1AF         	movff	?___ftadd+2,_util_getTemperature$2676+2
  2482                           
  2483                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2484                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2485                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2486  00117C  C108  F076         	movff	util_getTemperature@bit_mem+8,___awtoft@c
  2487  001180  C109  F077         	movff	util_getTemperature@bit_mem+9,___awtoft@c+1
  2488  001184  ECBF  F01C         	call	___awtoft	;wreg free
  2489  001188  C076  F096         	movff	?___awtoft,___ftadd@f2
  2490  00118C  C077  F097         	movff	?___awtoft+1,___ftadd@f2+1
  2491  001190  C078  F098         	movff	?___awtoft+2,___ftadd@f2+2
  2492  001194  C1AD  F093         	movff	_util_getTemperature$2676,___ftadd@f1
  2493  001198  C1AE  F094         	movff	_util_getTemperature$2676+1,___ftadd@f1+1
  2494  00119C  C1AF  F095         	movff	_util_getTemperature$2676+2,___ftadd@f1+2
  2495  0011A0  EC9A  F00F         	call	___ftadd	;wreg free
  2496  0011A4  C093  F1B0         	movff	?___ftadd,_util_getTemperature$2677
  2497  0011A8  C094  F1B1         	movff	?___ftadd+1,_util_getTemperature$2677+1
  2498  0011AC  C095  F1B2         	movff	?___ftadd+2,_util_getTemperature$2677+2
  2499                           
  2500                           ;easat2_util_inputs.c: 238: temperature = (float)bit_mem[0]/16.0 + (float)bit_mem[1]/8.0
      +                           +
  2501                           ;easat2_util_inputs.c: 239: (float)bit_mem[2]/4.0 + (float)bit_mem[3]/2.0 +
  2502                           ;easat2_util_inputs.c: 240: (float)bit_mem[4] + (float)bit_mem[5]*2.0 ;
  2503  0011B0  C1B0  F093         	movff	_util_getTemperature$2677,___ftadd@f1
  2504  0011B4  C1B1  F094         	movff	_util_getTemperature$2677+1,___ftadd@f1+1
  2505  0011B8  C1B2  F095         	movff	_util_getTemperature$2677+2,___ftadd@f1+2
  2506  0011BC  0E00               	movlw	0
  2507  0011BE  0100               	movlb	0	; () banked
  2508  0011C0  6F80               	movwf	___ftmul@f2& (0+255),b
  2509  0011C2  0E00               	movlw	0
  2510  0011C4  0100               	movlb	0	; () banked
  2511  0011C6  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2512  0011C8  0E40               	movlw	64
  2513  0011CA  0100               	movlb	0	; () banked
  2514  0011CC  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2515  0011CE  C10A  F076         	movff	util_getTemperature@bit_mem+10,___awtoft@c
  2516  0011D2  C10B  F077         	movff	util_getTemperature@bit_mem+11,___awtoft@c+1
  2517  0011D6  ECBF  F01C         	call	___awtoft	;wreg free
  2518  0011DA  C076  F07D         	movff	?___awtoft,___ftmul@f1
  2519  0011DE  C077  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2520  0011E2  C078  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2521  0011E6  ECCC  F014         	call	___ftmul	;wreg free
  2522  0011EA  C07D  F096         	movff	?___ftmul,___ftadd@f2
  2523  0011EE  C07E  F097         	movff	?___ftmul+1,___ftadd@f2+1
  2524  0011F2  C07F  F098         	movff	?___ftmul+2,___ftadd@f2+2
  2525  0011F6  EC9A  F00F         	call	___ftadd	;wreg free
  2526  0011FA  C093  F1C9         	movff	?___ftadd,util_getTemperature@temperature
  2527  0011FE  C094  F1CA         	movff	?___ftadd+1,util_getTemperature@temperature+1
  2528  001202  C095  F1CB         	movff	?___ftadd+2,util_getTemperature@temperature+2
  2529                           
  2530                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2531                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2532                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2533                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2534  001206  0E00               	movlw	0
  2535  001208  0100               	movlb	0	; () banked
  2536  00120A  6F80               	movwf	___ftmul@f2& (0+255),b
  2537  00120C  0E00               	movlw	0
  2538  00120E  0100               	movlb	0	; () banked
  2539  001210  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2540  001212  0E41               	movlw	65
  2541  001214  0100               	movlb	0	; () banked
  2542  001216  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2543  001218  C10E  F076         	movff	util_getTemperature@bit_mem+14,___awtoft@c
  2544  00121C  C10F  F077         	movff	util_getTemperature@bit_mem+15,___awtoft@c+1
  2545  001220  ECBF  F01C         	call	___awtoft	;wreg free
  2546  001224  C076  F07D         	movff	?___awtoft,___ftmul@f1
  2547  001228  C077  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2548  00122C  C078  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2549  001230  ECCC  F014         	call	___ftmul	;wreg free
  2550  001234  C07D  F096         	movff	?___ftmul,___ftadd@f2
  2551  001238  C07E  F097         	movff	?___ftmul+1,___ftadd@f2+1
  2552  00123C  C07F  F098         	movff	?___ftmul+2,___ftadd@f2+2
  2553  001240  0E00               	movlw	0
  2554  001242  0100               	movlb	0	; () banked
  2555  001244  6F80               	movwf	___ftmul@f2& (0+255),b
  2556  001246  0E80               	movlw	128
  2557  001248  0100               	movlb	0	; () banked
  2558  00124A  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2559  00124C  0E40               	movlw	64
  2560  00124E  0100               	movlb	0	; () banked
  2561  001250  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2562  001252  C10C  F076         	movff	util_getTemperature@bit_mem+12,___awtoft@c
  2563  001256  C10D  F077         	movff	util_getTemperature@bit_mem+13,___awtoft@c+1
  2564  00125A  ECBF  F01C         	call	___awtoft	;wreg free
  2565  00125E  C076  F07D         	movff	?___awtoft,___ftmul@f1
  2566  001262  C077  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2567  001266  C078  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2568  00126A  ECCC  F014         	call	___ftmul	;wreg free
  2569  00126E  C07D  F093         	movff	?___ftmul,___ftadd@f1
  2570  001272  C07E  F094         	movff	?___ftmul+1,___ftadd@f1+1
  2571  001276  C07F  F095         	movff	?___ftmul+2,___ftadd@f1+2
  2572  00127A  EC9A  F00F         	call	___ftadd	;wreg free
  2573  00127E  C093  F1A7         	movff	?___ftadd,_util_getTemperature$2674
  2574  001282  C094  F1A8         	movff	?___ftadd+1,_util_getTemperature$2674+1
  2575  001286  C095  F1A9         	movff	?___ftadd+2,_util_getTemperature$2674+2
  2576                           
  2577                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2578                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2579                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2580                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2581  00128A  0E00               	movlw	0
  2582  00128C  0100               	movlb	0	; () banked
  2583  00128E  6F80               	movwf	___ftmul@f2& (0+255),b
  2584  001290  0E80               	movlw	128
  2585  001292  0100               	movlb	0	; () banked
  2586  001294  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2587  001296  0E41               	movlw	65
  2588  001298  0100               	movlb	0	; () banked
  2589  00129A  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2590  00129C  C110  F076         	movff	util_getTemperature@bit_mem+16,___awtoft@c
  2591  0012A0  C111  F077         	movff	util_getTemperature@bit_mem+17,___awtoft@c+1
  2592  0012A4  ECBF  F01C         	call	___awtoft	;wreg free
  2593  0012A8  C076  F07D         	movff	?___awtoft,___ftmul@f1
  2594  0012AC  C077  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2595  0012B0  C078  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2596  0012B4  ECCC  F014         	call	___ftmul	;wreg free
  2597  0012B8  C07D  F096         	movff	?___ftmul,___ftadd@f2
  2598  0012BC  C07E  F097         	movff	?___ftmul+1,___ftadd@f2+1
  2599  0012C0  C07F  F098         	movff	?___ftmul+2,___ftadd@f2+2
  2600  0012C4  C1A7  F093         	movff	_util_getTemperature$2674,___ftadd@f1
  2601  0012C8  C1A8  F094         	movff	_util_getTemperature$2674+1,___ftadd@f1+1
  2602  0012CC  C1A9  F095         	movff	_util_getTemperature$2674+2,___ftadd@f1+2
  2603  0012D0  EC9A  F00F         	call	___ftadd	;wreg free
  2604  0012D4  C093  F1AA         	movff	?___ftadd,_util_getTemperature$2675
  2605  0012D8  C094  F1AB         	movff	?___ftadd+1,_util_getTemperature$2675+1
  2606  0012DC  C095  F1AC         	movff	?___ftadd+2,_util_getTemperature$2675+2
  2607                           
  2608                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2609                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2610                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2611                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2612  0012E0  0E00               	movlw	0
  2613  0012E2  0100               	movlb	0	; () banked
  2614  0012E4  6F80               	movwf	___ftmul@f2& (0+255),b
  2615  0012E6  0E00               	movlw	0
  2616  0012E8  0100               	movlb	0	; () banked
  2617  0012EA  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2618  0012EC  0E42               	movlw	66
  2619  0012EE  0100               	movlb	0	; () banked
  2620  0012F0  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2621  0012F2  C112  F076         	movff	util_getTemperature@bit_mem+18,___awtoft@c
  2622  0012F6  C113  F077         	movff	util_getTemperature@bit_mem+19,___awtoft@c+1
  2623  0012FA  ECBF  F01C         	call	___awtoft	;wreg free
  2624  0012FE  C076  F07D         	movff	?___awtoft,___ftmul@f1
  2625  001302  C077  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2626  001306  C078  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2627  00130A  ECCC  F014         	call	___ftmul	;wreg free
  2628  00130E  C07D  F096         	movff	?___ftmul,___ftadd@f2
  2629  001312  C07E  F097         	movff	?___ftmul+1,___ftadd@f2+1
  2630  001316  C07F  F098         	movff	?___ftmul+2,___ftadd@f2+2
  2631  00131A  C1AA  F093         	movff	_util_getTemperature$2675,___ftadd@f1
  2632  00131E  C1AB  F094         	movff	_util_getTemperature$2675+1,___ftadd@f1+1
  2633  001322  C1AC  F095         	movff	_util_getTemperature$2675+2,___ftadd@f1+2
  2634  001326  EC9A  F00F         	call	___ftadd	;wreg free
  2635  00132A  C093  F1AD         	movff	?___ftadd,_util_getTemperature$2676
  2636  00132E  C094  F1AE         	movff	?___ftadd+1,_util_getTemperature$2676+1
  2637  001332  C095  F1AF         	movff	?___ftadd+2,_util_getTemperature$2676+2
  2638                           
  2639                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2640                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2641                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2642                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2643  001336  0E00               	movlw	0
  2644  001338  0100               	movlb	0	; () banked
  2645  00133A  6F80               	movwf	___ftmul@f2& (0+255),b
  2646  00133C  0E80               	movlw	128
  2647  00133E  0100               	movlb	0	; () banked
  2648  001340  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  2649  001342  0E42               	movlw	66
  2650  001344  0100               	movlb	0	; () banked
  2651  001346  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  2652  001348  C114  F076         	movff	util_getTemperature@bit_mem+20,___awtoft@c
  2653  00134C  C115  F077         	movff	util_getTemperature@bit_mem+21,___awtoft@c+1
  2654  001350  ECBF  F01C         	call	___awtoft	;wreg free
  2655  001354  C076  F07D         	movff	?___awtoft,___ftmul@f1
  2656  001358  C077  F07E         	movff	?___awtoft+1,___ftmul@f1+1
  2657  00135C  C078  F07F         	movff	?___awtoft+2,___ftmul@f1+2
  2658  001360  ECCC  F014         	call	___ftmul	;wreg free
  2659  001364  C07D  F096         	movff	?___ftmul,___ftadd@f2
  2660  001368  C07E  F097         	movff	?___ftmul+1,___ftadd@f2+1
  2661  00136C  C07F  F098         	movff	?___ftmul+2,___ftadd@f2+2
  2662  001370  C1AD  F093         	movff	_util_getTemperature$2676,___ftadd@f1
  2663  001374  C1AE  F094         	movff	_util_getTemperature$2676+1,___ftadd@f1+1
  2664  001378  C1AF  F095         	movff	_util_getTemperature$2676+2,___ftadd@f1+2
  2665  00137C  EC9A  F00F         	call	___ftadd	;wreg free
  2666  001380  C093  F1B0         	movff	?___ftadd,_util_getTemperature$2677
  2667  001384  C094  F1B1         	movff	?___ftadd+1,_util_getTemperature$2677+1
  2668  001388  C095  F1B2         	movff	?___ftadd+2,_util_getTemperature$2677+2
  2669                           
  2670                           ;easat2_util_inputs.c: 241: temperature = temperature +
  2671                           ;easat2_util_inputs.c: 242: (float)bit_mem[6]*4.0 + (float)bit_mem[7]*8.0 +
  2672                           ;easat2_util_inputs.c: 243: (float)bit_mem[8]*16.0 + (float)bit_mem[9]*32.0 +
  2673                           ;easat2_util_inputs.c: 244: (float)bit_mem[10]*64.0;
  2674  00138C  C1B0  F093         	movff	_util_getTemperature$2677,___ftadd@f1
  2675  001390  C1B1  F094         	movff	_util_getTemperature$2677+1,___ftadd@f1+1
  2676  001394  C1B2  F095         	movff	_util_getTemperature$2677+2,___ftadd@f1+2
  2677  001398  C1C9  F096         	movff	util_getTemperature@temperature,___ftadd@f2
  2678  00139C  C1CA  F097         	movff	util_getTemperature@temperature+1,___ftadd@f2+1
  2679  0013A0  C1CB  F098         	movff	util_getTemperature@temperature+2,___ftadd@f2+2
  2680  0013A4  EC9A  F00F         	call	___ftadd	;wreg free
  2681  0013A8  C093  F1C9         	movff	?___ftadd,util_getTemperature@temperature
  2682  0013AC  C094  F1CA         	movff	?___ftadd+1,util_getTemperature@temperature+1
  2683  0013B0  C095  F1CB         	movff	?___ftadd+2,util_getTemperature@temperature+2
  2684                           
  2685                           ;easat2_util_inputs.c: 246: temperature = temperature * sign;
  2686  0013B4  C1C9  F07D         	movff	util_getTemperature@temperature,___ftmul@f1
  2687  0013B8  C1CA  F07E         	movff	util_getTemperature@temperature+1,___ftmul@f1+1
  2688  0013BC  C1CB  F07F         	movff	util_getTemperature@temperature+2,___ftmul@f1+2
  2689  0013C0  C1A4  F080         	movff	util_getTemperature@sign,___ftmul@f2
  2690  0013C4  C1A5  F081         	movff	util_getTemperature@sign+1,___ftmul@f2+1
  2691  0013C8  C1A6  F082         	movff	util_getTemperature@sign+2,___ftmul@f2+2
  2692  0013CC  ECCC  F014         	call	___ftmul	;wreg free
  2693  0013D0  C07D  F1C9         	movff	?___ftmul,util_getTemperature@temperature
  2694  0013D4  C07E  F1CA         	movff	?___ftmul+1,util_getTemperature@temperature+1
  2695  0013D8  C07F  F1CB         	movff	?___ftmul+2,util_getTemperature@temperature+2
  2696                           
  2697                           ;easat2_util_inputs.c: 248: return temperature;
  2698  0013DC  C1C9  F09F         	movff	util_getTemperature@temperature,?_util_getTemperature
  2699  0013E0  C1CA  F0A0         	movff	util_getTemperature@temperature+1,?_util_getTemperature+1
  2700  0013E4  C1CB  F0A1         	movff	util_getTemperature@temperature+2,?_util_getTemperature+2
  2701  0013E8  0012               	return	
  2702  0013EA                     __end_of_util_getTemperature:
  2703                           	opt stack 0
  2704                           tblptru	equ	0xFF8
  2705                           tblptrh	equ	0xFF7
  2706                           tblptrl	equ	0xFF6
  2707                           tablat	equ	0xFF5
  2708                           postinc0	equ	0xFEE
  2709                           wreg	equ	0xFE8
  2710                           postdec1	equ	0xFE5
  2711                           fsr1l	equ	0xFE1
  2712                           postinc2	equ	0xFDE
  2713                           postdec2	equ	0xFDD
  2714                           fsr2h	equ	0xFDA
  2715                           fsr2l	equ	0xFD9
  2716                           status	equ	0xFD8
  2717                           
  2718 ;; *************** function _util_waits_delay_secs *****************
  2719 ;; Defined at:
  2720 ;;		line 31 in file "easat2_util_waits.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;  secs            2   19[BANK0 ] int 
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;  j               2   39[COMRAM] int 
  2725 ;;  i               2   37[COMRAM] int 
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  1    wreg      void 
  2728 ;; Registers used:
  2729 ;;		wreg, status,2, status,0, cstack
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2735 ;;      Params:         0       2       0       0       0       0       0
  2736 ;;      Locals:         4       0       0       0       0       0       0
  2737 ;;      Temps:          1       0       0       0       0       0       0
  2738 ;;      Totals:         5       2       0       0       0       0       0
  2739 ;;Total ram usage:        7 bytes
  2740 ;; Hardware stack levels used:    1
  2741 ;; Hardware stack levels required when called:    4
  2742 ;; This function calls:
  2743 ;;		_util_waits_delay_ms
  2744 ;; This function is called by:
  2745 ;;		_util_getTemperature
  2746 ;;		_util_waits_delay_mins
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           	psect	text5
  2751  0037D0                     __ptext5:
  2752                           	opt stack 0
  2753  0037D0                     _util_waits_delay_secs:
  2754                           	opt stack 24
  2755                           
  2756                           ;easat2_util_waits.c: 32: for (int i = 0; i < secs; i++) {
  2757                           
  2758                           ;incstack = 0
  2759  0037D0  0E00               	movlw	0
  2760  0037D2  6E27               	movwf	util_waits_delay_secs@i+1,c
  2761  0037D4  0E00               	movlw	0
  2762  0037D6  6E26               	movwf	util_waits_delay_secs@i,c
  2763  0037D8  D018               	goto	l5034
  2764  0037DA                     l5020:
  2765                           
  2766                           ;easat2_util_waits.c: 33: for (int j = 0; j < 10; j++ )
  2767  0037DA  0E00               	movlw	0
  2768  0037DC  6E29               	movwf	util_waits_delay_secs@j+1,c
  2769  0037DE  0E00               	movlw	0
  2770  0037E0  6E28               	movwf	util_waits_delay_secs@j,c
  2771  0037E2                     l5022:
  2772  0037E2  BE29               	btfsc	util_waits_delay_secs@j+1,7,c
  2773  0037E4  D006               	goto	l5026
  2774  0037E6  5029               	movf	util_waits_delay_secs@j+1,w,c
  2775  0037E8  E10E               	bnz	l5032
  2776  0037EA  0E0A               	movlw	10
  2777  0037EC  5C28               	subwf	util_waits_delay_secs@j,w,c
  2778  0037EE  B0D8               	btfsc	status,0,c
  2779  0037F0  D00A               	goto	l5032
  2780  0037F2                     l5026:
  2781                           
  2782                           ;easat2_util_waits.c: 34: util_waits_delay_ms(100);
  2783  0037F2  0E00               	movlw	0
  2784  0037F4  0100               	movlb	0	; () banked
  2785  0037F6  6F72               	movwf	(util_waits_delay_ms@ms+1)& (0+255),b
  2786  0037F8  0E64               	movlw	100
  2787  0037FA  6F71               	movwf	util_waits_delay_ms@ms& (0+255),b
  2788  0037FC  ECAC  F01D         	call	_util_waits_delay_ms	;wreg free
  2789  003800  4A28               	infsnz	util_waits_delay_secs@j,f,c
  2790  003802  2A29               	incf	util_waits_delay_secs@j+1,f,c
  2791  003804  D7EE               	goto	l5022
  2792  003806                     l5032:
  2793  003806  4A26               	infsnz	util_waits_delay_secs@i,f,c
  2794  003808  2A27               	incf	util_waits_delay_secs@i+1,f,c
  2795  00380A                     l5034:
  2796  00380A  0100               	movlb	0	; () banked
  2797  00380C  5173               	movf	util_waits_delay_secs@secs& (0+255),w,b
  2798  00380E  5C26               	subwf	util_waits_delay_secs@i,w,c
  2799  003810  5027               	movf	util_waits_delay_secs@i+1,w,c
  2800  003812  0A80               	xorlw	128
  2801  003814  6E25               	movwf	??_util_waits_delay_secs& (0+255),c
  2802  003816  0100               	movlb	0	; () banked
  2803  003818  5174               	movf	(util_waits_delay_secs@secs+1)& (0+255),w,b
  2804  00381A  0A80               	xorlw	128
  2805  00381C  5825               	subwfb	??_util_waits_delay_secs& (0+255),w,c
  2806  00381E  B0D8               	btfsc	status,0,c
  2807  003820  0012               	return	
  2808  003822  D7DB               	goto	l5020
  2809  003824                     __end_of_util_waits_delay_secs:
  2810                           	opt stack 0
  2811                           tblptru	equ	0xFF8
  2812                           tblptrh	equ	0xFF7
  2813                           tblptrl	equ	0xFF6
  2814                           tablat	equ	0xFF5
  2815                           postinc0	equ	0xFEE
  2816                           wreg	equ	0xFE8
  2817                           postdec1	equ	0xFE5
  2818                           fsr1l	equ	0xFE1
  2819                           postinc2	equ	0xFDE
  2820                           postdec2	equ	0xFDD
  2821                           fsr2h	equ	0xFDA
  2822                           fsr2l	equ	0xFD9
  2823                           status	equ	0xFD8
  2824                           
  2825 ;; *************** function _util_onewire_write_byte *****************
  2826 ;; Defined at:
  2827 ;;		line 62 in file "easat2_util_onewire.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;  value           2   19[BANK0 ] int 
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;  bit7            2   35[BANK0 ] int 
  2832 ;;  bit6            2   33[BANK0 ] int 
  2833 ;;  bit5            2   31[BANK0 ] int 
  2834 ;;  bit4            2   29[BANK0 ] int 
  2835 ;;  bit3            2   27[BANK0 ] int 
  2836 ;;  bit2            2   25[BANK0 ] int 
  2837 ;;  bit1            2   23[BANK0 ] int 
  2838 ;;  bit0            2   21[BANK0 ] int 
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  1    wreg      void 
  2841 ;; Registers used:
  2842 ;;		wreg, status,2, status,0, cstack
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2848 ;;      Params:         0       2       0       0       0       0       0
  2849 ;;      Locals:         0      16       0       0       0       0       0
  2850 ;;      Temps:          3       0       0       0       0       0       0
  2851 ;;      Totals:         3      18       0       0       0       0       0
  2852 ;;Total ram usage:       21 bytes
  2853 ;; Hardware stack levels used:    1
  2854 ;; Hardware stack levels required when called:    4
  2855 ;; This function calls:
  2856 ;;		_util_onewire_write_bit
  2857 ;; This function is called by:
  2858 ;;		_util_getTemperature
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862                           	psect	text6
  2863  00254A                     __ptext6:
  2864                           	opt stack 0
  2865  00254A                     _util_onewire_write_byte:
  2866                           	opt stack 24
  2867                           
  2868                           ;easat2_util_onewire.c: 64: int bit0, bit1, bit2, bit3, bit4, bit5, bit6, bit7;
  2869                           ;easat2_util_onewire.c: 66: bit0 = (value >> 0) & 0x01;
  2870                           
  2871                           ; BSR set to: 0
  2872                           ;incstack = 0
  2873  00254A  0E01               	movlw	1
  2874  00254C  0100               	movlb	0	; () banked
  2875  00254E  1573               	andwf	util_onewire_write_byte@value& (0+255),w,b
  2876  002550  0100               	movlb	0	; () banked
  2877  002552  6F75               	movwf	util_onewire_write_byte@bit0& (0+255),b
  2878  002554  0100               	movlb	0	; () banked
  2879  002556  6B76               	clrf	(util_onewire_write_byte@bit0+1)& (0+255),b
  2880                           
  2881                           ;easat2_util_onewire.c: 67: bit1 = (value >> 1) & 0x01;
  2882  002558  0100               	movlb	0	; () banked
  2883  00255A  3574               	rlcf	(util_onewire_write_byte@value+1)& (0+255),w,b
  2884  00255C  3174               	rrcf	(util_onewire_write_byte@value+1)& (0+255),w,b
  2885  00255E  6E23               	movwf	(??_util_onewire_write_byte+1)& (0+255),c
  2886  002560  0100               	movlb	0	; () banked
  2887  002562  3173               	rrcf	util_onewire_write_byte@value& (0+255),w,b
  2888  002564  6E22               	movwf	??_util_onewire_write_byte& (0+255),c
  2889  002566  0E01               	movlw	1
  2890  002568  1422               	andwf	??_util_onewire_write_byte,w,c
  2891  00256A  0100               	movlb	0	; () banked
  2892  00256C  6F77               	movwf	util_onewire_write_byte@bit1& (0+255),b
  2893  00256E  0100               	movlb	0	; () banked
  2894  002570  6B78               	clrf	(util_onewire_write_byte@bit1+1)& (0+255),b
  2895                           
  2896                           ;easat2_util_onewire.c: 68: bit2 = (value >> 2) & 0x01;
  2897  002572  C073  F022         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2898  002576  C074  F023         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2899  00257A  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2900  00257C  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2901  00257E  3222               	rrcf	??_util_onewire_write_byte,f,c
  2902  002580  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2903  002582  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2904  002584  3222               	rrcf	??_util_onewire_write_byte,f,c
  2905  002586  0E01               	movlw	1
  2906  002588  1422               	andwf	??_util_onewire_write_byte,w,c
  2907  00258A  0100               	movlb	0	; () banked
  2908  00258C  6F79               	movwf	util_onewire_write_byte@bit2& (0+255),b
  2909  00258E  0100               	movlb	0	; () banked
  2910  002590  6B7A               	clrf	(util_onewire_write_byte@bit2+1)& (0+255),b
  2911                           
  2912                           ;easat2_util_onewire.c: 69: bit3 = (value >> 3) & 0x01;
  2913  002592  C073  F022         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2914  002596  C074  F023         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2915  00259A  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2916  00259C  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2917  00259E  3222               	rrcf	??_util_onewire_write_byte,f,c
  2918  0025A0  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2919  0025A2  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2920  0025A4  3222               	rrcf	??_util_onewire_write_byte,f,c
  2921  0025A6  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2922  0025A8  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2923  0025AA  3222               	rrcf	??_util_onewire_write_byte,f,c
  2924  0025AC  0E01               	movlw	1
  2925  0025AE  1422               	andwf	??_util_onewire_write_byte,w,c
  2926  0025B0  0100               	movlb	0	; () banked
  2927  0025B2  6F7B               	movwf	util_onewire_write_byte@bit3& (0+255),b
  2928  0025B4  0100               	movlb	0	; () banked
  2929  0025B6  6B7C               	clrf	(util_onewire_write_byte@bit3+1)& (0+255),b
  2930                           
  2931                           ;easat2_util_onewire.c: 70: bit4 = (value >> 4) & 0x01;
  2932  0025B8  C073  F022         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2933  0025BC  C074  F023         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2934  0025C0  0E04               	movlw	4
  2935  0025C2  6E24               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  2936  0025C4                     u5415:
  2937  0025C4  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2938  0025C6  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2939  0025C8  3222               	rrcf	??_util_onewire_write_byte,f,c
  2940  0025CA  2E24               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  2941  0025CC  D7FB               	goto	u5415
  2942  0025CE  0E01               	movlw	1
  2943  0025D0  1422               	andwf	??_util_onewire_write_byte,w,c
  2944  0025D2  0100               	movlb	0	; () banked
  2945  0025D4  6F7D               	movwf	util_onewire_write_byte@bit4& (0+255),b
  2946  0025D6  0100               	movlb	0	; () banked
  2947  0025D8  6B7E               	clrf	(util_onewire_write_byte@bit4+1)& (0+255),b
  2948                           
  2949                           ;easat2_util_onewire.c: 71: bit5 = (value >> 5) & 0x01;
  2950  0025DA  C073  F022         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2951  0025DE  C074  F023         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2952  0025E2  0E05               	movlw	5
  2953  0025E4  6E24               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  2954  0025E6                     u5425:
  2955  0025E6  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2956  0025E8  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2957  0025EA  3222               	rrcf	??_util_onewire_write_byte,f,c
  2958  0025EC  2E24               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  2959  0025EE  D7FB               	goto	u5425
  2960  0025F0  0E01               	movlw	1
  2961  0025F2  1422               	andwf	??_util_onewire_write_byte,w,c
  2962  0025F4  0100               	movlb	0	; () banked
  2963  0025F6  6F7F               	movwf	util_onewire_write_byte@bit5& (0+255),b
  2964  0025F8  0100               	movlb	0	; () banked
  2965  0025FA  6B80               	clrf	(util_onewire_write_byte@bit5+1)& (0+255),b
  2966                           
  2967                           ;easat2_util_onewire.c: 72: bit6 = (value >> 6) & 0x01;
  2968  0025FC  C073  F022         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2969  002600  C074  F023         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2970  002604  0E06               	movlw	6
  2971  002606  6E24               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  2972  002608                     u5435:
  2973  002608  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2974  00260A  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2975  00260C  3222               	rrcf	??_util_onewire_write_byte,f,c
  2976  00260E  2E24               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  2977  002610  D7FB               	goto	u5435
  2978  002612  0E01               	movlw	1
  2979  002614  1422               	andwf	??_util_onewire_write_byte,w,c
  2980  002616  0100               	movlb	0	; () banked
  2981  002618  6F81               	movwf	util_onewire_write_byte@bit6& (0+255),b
  2982  00261A  0100               	movlb	0	; () banked
  2983  00261C  6B82               	clrf	(util_onewire_write_byte@bit6+1)& (0+255),b
  2984                           
  2985                           ;easat2_util_onewire.c: 73: bit7 = (value >> 7) & 0x01;
  2986  00261E  C073  F022         	movff	util_onewire_write_byte@value,??_util_onewire_write_byte
  2987  002622  C074  F023         	movff	util_onewire_write_byte@value+1,??_util_onewire_write_byte+1
  2988  002626  0E07               	movlw	7
  2989  002628  6E24               	movwf	(??_util_onewire_write_byte+2)& (0+255),c
  2990  00262A                     u5445:
  2991  00262A  3423               	rlcf	??_util_onewire_write_byte+1,w,c
  2992  00262C  3223               	rrcf	??_util_onewire_write_byte+1,f,c
  2993  00262E  3222               	rrcf	??_util_onewire_write_byte,f,c
  2994  002630  2E24               	decfsz	(??_util_onewire_write_byte+2)& (0+255),f,c
  2995  002632  D7FB               	goto	u5445
  2996  002634  0E01               	movlw	1
  2997  002636  1422               	andwf	??_util_onewire_write_byte,w,c
  2998  002638  0100               	movlb	0	; () banked
  2999  00263A  6F83               	movwf	util_onewire_write_byte@bit7& (0+255),b
  3000  00263C  0100               	movlb	0	; () banked
  3001  00263E  6B84               	clrf	(util_onewire_write_byte@bit7+1)& (0+255),b
  3002                           
  3003                           ; BSR set to: 0
  3004                           ;easat2_util_onewire.c: 75: util_onewire_write_bit(bit0);
  3005  002640  C075  F071         	movff	util_onewire_write_byte@bit0,util_onewire_write_bit@bit_in
  3006  002644  C076  F072         	movff	util_onewire_write_byte@bit0+1,util_onewire_write_bit@bit_in+1
  3007  002648  ECFA  F01C         	call	_util_onewire_write_bit	;wreg free
  3008                           
  3009                           ;easat2_util_onewire.c: 76: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3010  00264C  F000               	nop	
  3011  00264E  D000               	nop2		;2 cycle nop
  3012  002650  D000               	nop2		;2 cycle nop
  3013                           
  3014                           ;easat2_util_onewire.c: 77: util_onewire_write_bit(bit1);
  3015  002652  C077  F071         	movff	util_onewire_write_byte@bit1,util_onewire_write_bit@bit_in
  3016  002656  C078  F072         	movff	util_onewire_write_byte@bit1+1,util_onewire_write_bit@bit_in+1
  3017  00265A  ECFA  F01C         	call	_util_onewire_write_bit	;wreg free
  3018                           
  3019                           ;easat2_util_onewire.c: 78: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3020  00265E  F000               	nop	
  3021  002660  D000               	nop2		;2 cycle nop
  3022  002662  D000               	nop2		;2 cycle nop
  3023                           
  3024                           ;easat2_util_onewire.c: 79: util_onewire_write_bit(bit2);
  3025  002664  C079  F071         	movff	util_onewire_write_byte@bit2,util_onewire_write_bit@bit_in
  3026  002668  C07A  F072         	movff	util_onewire_write_byte@bit2+1,util_onewire_write_bit@bit_in+1
  3027  00266C  ECFA  F01C         	call	_util_onewire_write_bit	;wreg free
  3028                           
  3029                           ;easat2_util_onewire.c: 80: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3030  002670  F000               	nop	
  3031  002672  D000               	nop2		;2 cycle nop
  3032  002674  D000               	nop2		;2 cycle nop
  3033                           
  3034                           ;easat2_util_onewire.c: 81: util_onewire_write_bit(bit3);
  3035  002676  C07B  F071         	movff	util_onewire_write_byte@bit3,util_onewire_write_bit@bit_in
  3036  00267A  C07C  F072         	movff	util_onewire_write_byte@bit3+1,util_onewire_write_bit@bit_in+1
  3037  00267E  ECFA  F01C         	call	_util_onewire_write_bit	;wreg free
  3038                           
  3039                           ;easat2_util_onewire.c: 82: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3040  002682  F000               	nop	
  3041  002684  D000               	nop2		;2 cycle nop
  3042  002686  D000               	nop2		;2 cycle nop
  3043                           
  3044                           ;easat2_util_onewire.c: 83: util_onewire_write_bit(bit4);
  3045  002688  C07D  F071         	movff	util_onewire_write_byte@bit4,util_onewire_write_bit@bit_in
  3046  00268C  C07E  F072         	movff	util_onewire_write_byte@bit4+1,util_onewire_write_bit@bit_in+1
  3047  002690  ECFA  F01C         	call	_util_onewire_write_bit	;wreg free
  3048                           
  3049                           ;easat2_util_onewire.c: 84: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3050  002694  F000               	nop	
  3051  002696  D000               	nop2		;2 cycle nop
  3052  002698  D000               	nop2		;2 cycle nop
  3053                           
  3054                           ;easat2_util_onewire.c: 85: util_onewire_write_bit(bit5);
  3055  00269A  C07F  F071         	movff	util_onewire_write_byte@bit5,util_onewire_write_bit@bit_in
  3056  00269E  C080  F072         	movff	util_onewire_write_byte@bit5+1,util_onewire_write_bit@bit_in+1
  3057  0026A2  ECFA  F01C         	call	_util_onewire_write_bit	;wreg free
  3058                           
  3059                           ;easat2_util_onewire.c: 86: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3060  0026A6  F000               	nop	
  3061  0026A8  D000               	nop2		;2 cycle nop
  3062  0026AA  D000               	nop2		;2 cycle nop
  3063                           
  3064                           ;easat2_util_onewire.c: 87: util_onewire_write_bit(bit6);
  3065  0026AC  C081  F071         	movff	util_onewire_write_byte@bit6,util_onewire_write_bit@bit_in
  3066  0026B0  C082  F072         	movff	util_onewire_write_byte@bit6+1,util_onewire_write_bit@bit_in+1
  3067  0026B4  ECFA  F01C         	call	_util_onewire_write_bit	;wreg free
  3068                           
  3069                           ;easat2_util_onewire.c: 88: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3070  0026B8  F000               	nop	
  3071  0026BA  D000               	nop2		;2 cycle nop
  3072  0026BC  D000               	nop2		;2 cycle nop
  3073                           
  3074                           ;easat2_util_onewire.c: 89: util_onewire_write_bit(bit7);
  3075  0026BE  C083  F071         	movff	util_onewire_write_byte@bit7,util_onewire_write_bit@bit_in
  3076  0026C2  C084  F072         	movff	util_onewire_write_byte@bit7+1,util_onewire_write_bit@bit_in+1
  3077  0026C6  ECFA  F01C         	call	_util_onewire_write_bit	;wreg free
  3078                           
  3079                           ;easat2_util_onewire.c: 90: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3080  0026CA  F000               	nop	
  3081  0026CC  D000               	nop2		;2 cycle nop
  3082  0026CE  D000               	nop2		;2 cycle nop
  3083  0026D0  0012               	return		;funcret
  3084  0026D2                     __end_of_util_onewire_write_byte:
  3085                           	opt stack 0
  3086                           tblptru	equ	0xFF8
  3087                           tblptrh	equ	0xFF7
  3088                           tblptrl	equ	0xFF6
  3089                           tablat	equ	0xFF5
  3090                           postinc0	equ	0xFEE
  3091                           wreg	equ	0xFE8
  3092                           postdec1	equ	0xFE5
  3093                           fsr1l	equ	0xFE1
  3094                           postinc2	equ	0xFDE
  3095                           postdec2	equ	0xFDD
  3096                           fsr2h	equ	0xFDA
  3097                           fsr2l	equ	0xFD9
  3098                           status	equ	0xFD8
  3099                           
  3100 ;; *************** function _util_onewire_write_bit *****************
  3101 ;; Defined at:
  3102 ;;		line 121 in file "easat2_util_onewire.c"
  3103 ;; Parameters:    Size  Location     Type
  3104 ;;  bit_in          2   17[BANK0 ] int 
  3105 ;; Auto vars:     Size  Location     Type
  3106 ;;		None
  3107 ;; Return value:  Size  Location     Type
  3108 ;;                  1    wreg      void 
  3109 ;; Registers used:
  3110 ;;		wreg, status,2, status,0
  3111 ;; Tracked objects:
  3112 ;;		On entry : 0/0
  3113 ;;		On exit  : 0/0
  3114 ;;		Unchanged: 0/0
  3115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3116 ;;      Params:         0       2       0       0       0       0       0
  3117 ;;      Locals:         0       0       0       0       0       0       0
  3118 ;;      Temps:          0       0       0       0       0       0       0
  3119 ;;      Totals:         0       2       0       0       0       0       0
  3120 ;;Total ram usage:        2 bytes
  3121 ;; Hardware stack levels used:    1
  3122 ;; Hardware stack levels required when called:    3
  3123 ;; This function calls:
  3124 ;;		Nothing
  3125 ;; This function is called by:
  3126 ;;		_util_onewire_write_byte
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130                           	psect	text7
  3131  0039F4                     __ptext7:
  3132                           	opt stack 0
  3133  0039F4                     _util_onewire_write_bit:
  3134                           	opt stack 24
  3135                           
  3136                           ;easat2_util_onewire.c: 124: TRISAbits.TRISA3 = 0;
  3137                           
  3138                           ;incstack = 0
  3139  0039F4  9692               	bcf	3986,3,c	;volatile
  3140                           
  3141                           ;easat2_util_onewire.c: 126: if (bit_in) {
  3142  0039F6  0100               	movlb	0	; () banked
  3143  0039F8  5171               	movf	util_onewire_write_bit@bit_in& (0+255),w,b
  3144  0039FA  0100               	movlb	0	; () banked
  3145  0039FC  1172               	iorwf	(util_onewire_write_bit@bit_in+1)& (0+255),w,b
  3146  0039FE  B4D8               	btfsc	status,2,c
  3147  003A00  D009               	goto	l127
  3148                           
  3149                           ; BSR set to: 0
  3150                           ;easat2_util_onewire.c: 129: (PORTAbits.RA3) = 0;
  3151  003A02  9680               	bcf	3968,3,c	;volatile
  3152                           
  3153                           ;easat2_util_onewire.c: 133: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3154  003A04  F000               	nop	
  3155  003A06  D000               	nop2		;2 cycle nop
  3156  003A08  D000               	nop2		;2 cycle nop
  3157                           
  3158                           ;easat2_util_onewire.c: 136: (PORTAbits.RA3) = 1;
  3159  003A0A  8680               	bsf	3968,3,c	;volatile
  3160                           
  3161                           ;easat2_util_onewire.c: 139: _delay((unsigned long)((55)*(2000000/4000000.0)));
  3162  003A0C  0E09               	movlw	9
  3163  003A0E                     u6357:
  3164  003A0E  2EE8               	decfsz	wreg,f,c
  3165  003A10  D7FE               	goto	u6357
  3166                           
  3167                           ;easat2_util_onewire.c: 141: } else {
  3168  003A12  0012               	return	
  3169  003A14                     l127:
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;easat2_util_onewire.c: 144: (PORTAbits.RA3) = 0;
  3173  003A14  9680               	bcf	3968,3,c	;volatile
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;easat2_util_onewire.c: 148: _delay((unsigned long)((70)*(2000000/4000000.0)));
  3177  003A16  0E0B               	movlw	11
  3178  003A18                     u6367:
  3179  003A18  2EE8               	decfsz	wreg,f,c
  3180  003A1A  D7FE               	goto	u6367
  3181  003A1C  D000               	nop2		;nop
  3182                           
  3183                           ;easat2_util_onewire.c: 151: (PORTAbits.RA3) = 1;
  3184  003A1E  8680               	bsf	3968,3,c	;volatile
  3185                           
  3186                           ;easat2_util_onewire.c: 154: _delay((unsigned long)((10)*(2000000/4000000.0)));
  3187  003A20  F000               	nop	
  3188  003A22  D000               	nop2		;2 cycle nop
  3189  003A24  D000               	nop2		;2 cycle nop
  3190  003A26  0012               	return	
  3191  003A28                     __end_of_util_onewire_write_bit:
  3192                           	opt stack 0
  3193                           tblptru	equ	0xFF8
  3194                           tblptrh	equ	0xFF7
  3195                           tblptrl	equ	0xFF6
  3196                           tablat	equ	0xFF5
  3197                           postinc0	equ	0xFEE
  3198                           wreg	equ	0xFE8
  3199                           postdec1	equ	0xFE5
  3200                           fsr1l	equ	0xFE1
  3201                           postinc2	equ	0xFDE
  3202                           postdec2	equ	0xFDD
  3203                           fsr2h	equ	0xFDA
  3204                           fsr2l	equ	0xFD9
  3205                           status	equ	0xFD8
  3206                           
  3207 ;; *************** function _util_onewire_reset *****************
  3208 ;; Defined at:
  3209 ;;		line 18 in file "easat2_util_onewire.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;		None
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;  presence        2   34[COMRAM] int 
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  2   17[BANK0 ] int 
  3216 ;; Registers used:
  3217 ;;		wreg, status,2
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3223 ;;      Params:         0       2       0       0       0       0       0
  3224 ;;      Locals:         2       0       0       0       0       0       0
  3225 ;;      Temps:          1       0       0       0       0       0       0
  3226 ;;      Totals:         3       2       0       0       0       0       0
  3227 ;;Total ram usage:        5 bytes
  3228 ;; Hardware stack levels used:    1
  3229 ;; Hardware stack levels required when called:    3
  3230 ;; This function calls:
  3231 ;;		Nothing
  3232 ;; This function is called by:
  3233 ;;		_util_getTemperature
  3234 ;; This function uses a non-reentrant model
  3235 ;;
  3236                           
  3237                           	psect	text8
  3238  00393C                     __ptext8:
  3239                           	opt stack 0
  3240  00393C                     _util_onewire_reset:
  3241                           	opt stack 25
  3242                           
  3243                           ;easat2_util_onewire.c: 20: int presence = 1;
  3244                           
  3245                           ;incstack = 0
  3246  00393C  0E00               	movlw	0
  3247  00393E  6E24               	movwf	util_onewire_reset@presence+1,c
  3248  003940  0E01               	movlw	1
  3249  003942  6E23               	movwf	util_onewire_reset@presence,c
  3250                           
  3251                           ;easat2_util_onewire.c: 23: TRISAbits.TRISA3 = 0;
  3252  003944  9692               	bcf	3986,3,c	;volatile
  3253                           
  3254                           ;easat2_util_onewire.c: 25: (PORTAbits.RA3) = 0;
  3255  003946  9680               	bcf	3968,3,c	;volatile
  3256                           
  3257                           ;easat2_util_onewire.c: 29: _delay((unsigned long)((560)*(2000000/4000000.0)));
  3258  003948  0E5D               	movlw	93
  3259  00394A                     u6377:
  3260  00394A  2EE8               	decfsz	wreg,f,c
  3261  00394C  D7FE               	goto	u6377
  3262  00394E  F000               	nop	
  3263                           
  3264                           ;easat2_util_onewire.c: 32: (PORTAbits.RA3) = 1;
  3265  003950  8680               	bsf	3968,3,c	;volatile
  3266                           
  3267                           ;easat2_util_onewire.c: 39: _delay((unsigned long)((70)*(2000000/4000000.0)));
  3268  003952  0E0B               	movlw	11
  3269  003954                     u6387:
  3270  003954  2EE8               	decfsz	wreg,f,c
  3271  003956  D7FE               	goto	u6387
  3272  003958  D000               	nop2		;nop
  3273                           
  3274                           ;easat2_util_onewire.c: 42: TRISAbits.TRISA3 = 1;
  3275  00395A  8692               	bsf	3986,3,c	;volatile
  3276                           
  3277                           ;easat2_util_onewire.c: 47: presence = (PORTAbits.RA3);
  3278  00395C  A680               	btfss	3968,3,c	;volatile
  3279  00395E  D003               	goto	u5400
  3280  003960  6A22               	clrf	??_util_onewire_reset& (0+255),c
  3281  003962  2A22               	incf	??_util_onewire_reset& (0+255),f,c
  3282  003964  D001               	goto	u5408
  3283  003966                     u5400:
  3284  003966  6A22               	clrf	??_util_onewire_reset& (0+255),c
  3285  003968                     u5408:
  3286  003968  5022               	movf	??_util_onewire_reset,w,c
  3287  00396A  6E23               	movwf	util_onewire_reset@presence,c
  3288  00396C  6A24               	clrf	util_onewire_reset@presence+1,c
  3289                           
  3290                           ;easat2_util_onewire.c: 52: _delay((unsigned long)((420)*(2000000/4000000.0)));
  3291  00396E  0E46               	movlw	70
  3292  003970                     u6397:
  3293  003970  2EE8               	decfsz	wreg,f,c
  3294  003972  D7FE               	goto	u6397
  3295                           
  3296                           ;easat2_util_onewire.c: 56: return presence;
  3297  003974  C023  F071         	movff	util_onewire_reset@presence,?_util_onewire_reset
  3298  003978  C024  F072         	movff	util_onewire_reset@presence+1,?_util_onewire_reset+1
  3299  00397C  0012               	return	
  3300  00397E                     __end_of_util_onewire_reset:
  3301                           	opt stack 0
  3302                           tblptru	equ	0xFF8
  3303                           tblptrh	equ	0xFF7
  3304                           tblptrl	equ	0xFF6
  3305                           tablat	equ	0xFF5
  3306                           postinc0	equ	0xFEE
  3307                           wreg	equ	0xFE8
  3308                           postdec1	equ	0xFE5
  3309                           fsr1l	equ	0xFE1
  3310                           postinc2	equ	0xFDE
  3311                           postdec2	equ	0xFDD
  3312                           fsr2h	equ	0xFDA
  3313                           fsr2l	equ	0xFD9
  3314                           status	equ	0xFD8
  3315                           
  3316 ;; *************** function _util_onewire_read_byte *****************
  3317 ;; Defined at:
  3318 ;;		line 96 in file "easat2_util_onewire.c"
  3319 ;; Parameters:    Size  Location     Type
  3320 ;;		None
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;  value           2   51[BANK0 ] int 
  3323 ;;  bit7            2   49[BANK0 ] int 
  3324 ;;  bit6            2   47[BANK0 ] int 
  3325 ;;  bit5            2   45[BANK0 ] int 
  3326 ;;  bit4            2   43[BANK0 ] int 
  3327 ;;  bit3            2   41[BANK0 ] int 
  3328 ;;  bit2            2   39[BANK0 ] int 
  3329 ;;  bit1            2   37[BANK0 ] int 
  3330 ;;  bit0            2   35[BANK0 ] int 
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  2   19[BANK0 ] int 
  3333 ;; Registers used:
  3334 ;;		wreg, status,2, status,0, cstack
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3340 ;;      Params:         0       2       0       0       0       0       0
  3341 ;;      Locals:         0      18       0       0       0       0       0
  3342 ;;      Temps:          0      14       0       0       0       0       0
  3343 ;;      Totals:         0      34       0       0       0       0       0
  3344 ;;Total ram usage:       34 bytes
  3345 ;; Hardware stack levels used:    1
  3346 ;; Hardware stack levels required when called:    4
  3347 ;; This function calls:
  3348 ;;		_util_onewire_read_bit
  3349 ;; This function is called by:
  3350 ;;		_util_getTemperature
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           	psect	text9
  3355  0023B6                     __ptext9:
  3356                           	opt stack 0
  3357  0023B6                     _util_onewire_read_byte:
  3358                           	opt stack 24
  3359                           
  3360                           ;easat2_util_onewire.c: 98: int bit0, bit1, bit2, bit3, bit4, bit5, bit6, bit7;
  3361                           ;easat2_util_onewire.c: 99: int value = 0;
  3362                           
  3363                           ;incstack = 0
  3364  0023B6  0E00               	movlw	0
  3365  0023B8  0100               	movlb	0	; () banked
  3366  0023BA  6F94               	movwf	(util_onewire_read_byte@value+1)& (0+255),b
  3367  0023BC  0E00               	movlw	0
  3368  0023BE  6F93               	movwf	util_onewire_read_byte@value& (0+255),b
  3369                           
  3370                           ; BSR set to: 0
  3371                           ;easat2_util_onewire.c: 102: TRISAbits.TRISA3 = 1;
  3372  0023C0  8692               	bsf	3986,3,c	;volatile
  3373                           
  3374                           ; BSR set to: 0
  3375                           ;easat2_util_onewire.c: 104: bit0 = util_onewire_read_bit();
  3376  0023C2  EC48  F01D         	call	_util_onewire_read_bit	;wreg free
  3377  0023C6  C071  F083         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit0
  3378  0023CA  C072  F084         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit0+1
  3379                           
  3380                           ;easat2_util_onewire.c: 105: bit1 = util_onewire_read_bit();
  3381  0023CE  EC48  F01D         	call	_util_onewire_read_bit	;wreg free
  3382  0023D2  C071  F085         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit1
  3383  0023D6  C072  F086         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit1+1
  3384                           
  3385                           ;easat2_util_onewire.c: 106: bit2 = util_onewire_read_bit();
  3386  0023DA  EC48  F01D         	call	_util_onewire_read_bit	;wreg free
  3387  0023DE  C071  F087         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit2
  3388  0023E2  C072  F088         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit2+1
  3389                           
  3390                           ;easat2_util_onewire.c: 107: bit3 = util_onewire_read_bit();
  3391  0023E6  EC48  F01D         	call	_util_onewire_read_bit	;wreg free
  3392  0023EA  C071  F089         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit3
  3393  0023EE  C072  F08A         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit3+1
  3394                           
  3395                           ;easat2_util_onewire.c: 108: bit4 = util_onewire_read_bit();
  3396  0023F2  EC48  F01D         	call	_util_onewire_read_bit	;wreg free
  3397  0023F6  C071  F08B         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit4
  3398  0023FA  C072  F08C         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit4+1
  3399                           
  3400                           ;easat2_util_onewire.c: 109: bit5 = util_onewire_read_bit();
  3401  0023FE  EC48  F01D         	call	_util_onewire_read_bit	;wreg free
  3402  002402  C071  F08D         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit5
  3403  002406  C072  F08E         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit5+1
  3404                           
  3405                           ;easat2_util_onewire.c: 110: bit6 = util_onewire_read_bit();
  3406  00240A  EC48  F01D         	call	_util_onewire_read_bit	;wreg free
  3407  00240E  C071  F08F         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit6
  3408  002412  C072  F090         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit6+1
  3409                           
  3410                           ;easat2_util_onewire.c: 111: bit7 = util_onewire_read_bit();
  3411  002416  EC48  F01D         	call	_util_onewire_read_bit	;wreg free
  3412  00241A  C071  F091         	movff	?_util_onewire_read_bit,util_onewire_read_byte@bit7
  3413  00241E  C072  F092         	movff	?_util_onewire_read_bit+1,util_onewire_read_byte@bit7+1
  3414                           
  3415                           ;easat2_util_onewire.c: 113: value = bit0 + (bit1 << 1) + (bit2 << 2) + (bit3 << 3) + (b
      +                          it4 << 4)
  3416                           ;easat2_util_onewire.c: 114: + (bit5 << 5) + (bit6 << 6) + (bit7 << 7);
  3417  002422  C091  F075         	movff	util_onewire_read_byte@bit7,??_util_onewire_read_byte
  3418  002426  C092  F076         	movff	util_onewire_read_byte@bit7+1,??_util_onewire_read_byte+1
  3419  00242A  0E07               	movlw	7
  3420  00242C                     u5455:
  3421  00242C  90D8               	bcf	status,0,c
  3422  00242E  0100               	movlb	0	; () banked
  3423  002430  3775               	rlcf	??_util_onewire_read_byte& (0+255),f,b
  3424  002432  3776               	rlcf	(??_util_onewire_read_byte+1)& (0+255),f,b
  3425  002434  2EE8               	decfsz	wreg,f,c
  3426  002436  D7FA               	goto	u5455
  3427  002438  C08F  F077         	movff	util_onewire_read_byte@bit6,??_util_onewire_read_byte+2
  3428  00243C  C090  F078         	movff	util_onewire_read_byte@bit6+1,??_util_onewire_read_byte+3
  3429  002440  0E06               	movlw	6
  3430  002442                     u5465:
  3431  002442  90D8               	bcf	status,0,c
  3432  002444  0100               	movlb	0	; () banked
  3433  002446  3777               	rlcf	(??_util_onewire_read_byte+2)& (0+255),f,b
  3434  002448  3778               	rlcf	(??_util_onewire_read_byte+3)& (0+255),f,b
  3435  00244A  2EE8               	decfsz	wreg,f,c
  3436  00244C  D7FA               	goto	u5465
  3437  00244E  C08D  F079         	movff	util_onewire_read_byte@bit5,??_util_onewire_read_byte+4
  3438  002452  C08E  F07A         	movff	util_onewire_read_byte@bit5+1,??_util_onewire_read_byte+5
  3439  002456  0E05               	movlw	5
  3440  002458                     u5475:
  3441  002458  90D8               	bcf	status,0,c
  3442  00245A  0100               	movlb	0	; () banked
  3443  00245C  3779               	rlcf	(??_util_onewire_read_byte+4)& (0+255),f,b
  3444  00245E  377A               	rlcf	(??_util_onewire_read_byte+5)& (0+255),f,b
  3445  002460  2EE8               	decfsz	wreg,f,c
  3446  002462  D7FA               	goto	u5475
  3447  002464  C08B  F07B         	movff	util_onewire_read_byte@bit4,??_util_onewire_read_byte+6
  3448  002468  C08C  F07C         	movff	util_onewire_read_byte@bit4+1,??_util_onewire_read_byte+7
  3449  00246C  0100               	movlb	0	; () banked
  3450  00246E  3B7B               	swapf	(??_util_onewire_read_byte+6)& (0+255),f,b
  3451  002470  3B7C               	swapf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3452  002472  0EF0               	movlw	240
  3453  002474  177C               	andwf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3454  002476  517B               	movf	(??_util_onewire_read_byte+6)& (0+255),w,b
  3455  002478  0B0F               	andlw	15
  3456  00247A  137C               	iorwf	(??_util_onewire_read_byte+7)& (0+255),f,b
  3457  00247C  0EF0               	movlw	240
  3458  00247E  177B               	andwf	(??_util_onewire_read_byte+6)& (0+255),f,b
  3459  002480  C089  F07D         	movff	util_onewire_read_byte@bit3,??_util_onewire_read_byte+8
  3460  002484  C08A  F07E         	movff	util_onewire_read_byte@bit3+1,??_util_onewire_read_byte+9
  3461  002488  0100               	movlb	0	; () banked
  3462  00248A  90D8               	bcf	status,0,c
  3463  00248C  377D               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3464  00248E  377E               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3465  002490  0100               	movlb	0	; () banked
  3466  002492  90D8               	bcf	status,0,c
  3467  002494  377D               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3468  002496  377E               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3469  002498  0100               	movlb	0	; () banked
  3470  00249A  90D8               	bcf	status,0,c
  3471  00249C  377D               	rlcf	(??_util_onewire_read_byte+8)& (0+255),f,b
  3472  00249E  377E               	rlcf	(??_util_onewire_read_byte+9)& (0+255),f,b
  3473  0024A0  C087  F07F         	movff	util_onewire_read_byte@bit2,??_util_onewire_read_byte+10
  3474  0024A4  C088  F080         	movff	util_onewire_read_byte@bit2+1,??_util_onewire_read_byte+11
  3475  0024A8  0100               	movlb	0	; () banked
  3476  0024AA  90D8               	bcf	status,0,c
  3477  0024AC  377F               	rlcf	(??_util_onewire_read_byte+10)& (0+255),f,b
  3478  0024AE  3780               	rlcf	(??_util_onewire_read_byte+11)& (0+255),f,b
  3479  0024B0  0100               	movlb	0	; () banked
  3480  0024B2  90D8               	bcf	status,0,c
  3481  0024B4  377F               	rlcf	(??_util_onewire_read_byte+10)& (0+255),f,b
  3482  0024B6  3780               	rlcf	(??_util_onewire_read_byte+11)& (0+255),f,b
  3483  0024B8  C085  F081         	movff	util_onewire_read_byte@bit1,??_util_onewire_read_byte+12
  3484  0024BC  C086  F082         	movff	util_onewire_read_byte@bit1+1,??_util_onewire_read_byte+13
  3485  0024C0  90D8               	bcf	status,0,c
  3486  0024C2  0100               	movlb	0	; () banked
  3487  0024C4  3781               	rlcf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3488  0024C6  3782               	rlcf	(??_util_onewire_read_byte+13)& (0+255),f,b
  3489  0024C8  0100               	movlb	0	; () banked
  3490  0024CA  517F               	movf	(??_util_onewire_read_byte+10)& (0+255),w,b
  3491  0024CC  0100               	movlb	0	; () banked
  3492  0024CE  2781               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3493  0024D0  0100               	movlb	0	; () banked
  3494  0024D2  5180               	movf	(??_util_onewire_read_byte+11)& (0+255),w,b
  3495  0024D4  0100               	movlb	0	; () banked
  3496  0024D6  2382               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3497  0024D8  0100               	movlb	0	; () banked
  3498  0024DA  517D               	movf	(??_util_onewire_read_byte+8)& (0+255),w,b
  3499  0024DC  0100               	movlb	0	; () banked
  3500  0024DE  2781               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3501  0024E0  0100               	movlb	0	; () banked
  3502  0024E2  517E               	movf	(??_util_onewire_read_byte+9)& (0+255),w,b
  3503  0024E4  0100               	movlb	0	; () banked
  3504  0024E6  2382               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3505  0024E8  0100               	movlb	0	; () banked
  3506  0024EA  517B               	movf	(??_util_onewire_read_byte+6)& (0+255),w,b
  3507  0024EC  0100               	movlb	0	; () banked
  3508  0024EE  2781               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3509  0024F0  0100               	movlb	0	; () banked
  3510  0024F2  517C               	movf	(??_util_onewire_read_byte+7)& (0+255),w,b
  3511  0024F4  0100               	movlb	0	; () banked
  3512  0024F6  2382               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3513  0024F8  0100               	movlb	0	; () banked
  3514  0024FA  5179               	movf	(??_util_onewire_read_byte+4)& (0+255),w,b
  3515  0024FC  0100               	movlb	0	; () banked
  3516  0024FE  2781               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3517  002500  0100               	movlb	0	; () banked
  3518  002502  517A               	movf	(??_util_onewire_read_byte+5)& (0+255),w,b
  3519  002504  0100               	movlb	0	; () banked
  3520  002506  2382               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3521  002508  0100               	movlb	0	; () banked
  3522  00250A  5177               	movf	(??_util_onewire_read_byte+2)& (0+255),w,b
  3523  00250C  0100               	movlb	0	; () banked
  3524  00250E  2781               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3525  002510  0100               	movlb	0	; () banked
  3526  002512  5178               	movf	(??_util_onewire_read_byte+3)& (0+255),w,b
  3527  002514  0100               	movlb	0	; () banked
  3528  002516  2382               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3529  002518  0100               	movlb	0	; () banked
  3530  00251A  5175               	movf	??_util_onewire_read_byte& (0+255),w,b
  3531  00251C  0100               	movlb	0	; () banked
  3532  00251E  2781               	addwf	(??_util_onewire_read_byte+12)& (0+255),f,b
  3533  002520  0100               	movlb	0	; () banked
  3534  002522  5176               	movf	(??_util_onewire_read_byte+1)& (0+255),w,b
  3535  002524  0100               	movlb	0	; () banked
  3536  002526  2382               	addwfc	(??_util_onewire_read_byte+13)& (0+255),f,b
  3537  002528  0100               	movlb	0	; () banked
  3538  00252A  5183               	movf	util_onewire_read_byte@bit0& (0+255),w,b
  3539  00252C  0100               	movlb	0	; () banked
  3540  00252E  2581               	addwf	(??_util_onewire_read_byte+12)& (0+255),w,b
  3541  002530  0100               	movlb	0	; () banked
  3542  002532  6F93               	movwf	util_onewire_read_byte@value& (0+255),b
  3543  002534  0100               	movlb	0	; () banked
  3544  002536  5184               	movf	(util_onewire_read_byte@bit0+1)& (0+255),w,b
  3545  002538  0100               	movlb	0	; () banked
  3546  00253A  2182               	addwfc	(??_util_onewire_read_byte+13)& (0+255),w,b
  3547  00253C  0100               	movlb	0	; () banked
  3548  00253E  6F94               	movwf	(util_onewire_read_byte@value+1)& (0+255),b
  3549                           
  3550                           ; BSR set to: 0
  3551                           ;easat2_util_onewire.c: 116: return value;
  3552  002540  C093  F073         	movff	util_onewire_read_byte@value,?_util_onewire_read_byte
  3553  002544  C094  F074         	movff	util_onewire_read_byte@value+1,?_util_onewire_read_byte+1
  3554  002548  0012               	return	
  3555  00254A                     __end_of_util_onewire_read_byte:
  3556                           	opt stack 0
  3557                           tblptru	equ	0xFF8
  3558                           tblptrh	equ	0xFF7
  3559                           tblptrl	equ	0xFF6
  3560                           tablat	equ	0xFF5
  3561                           postinc0	equ	0xFEE
  3562                           wreg	equ	0xFE8
  3563                           postdec1	equ	0xFE5
  3564                           fsr1l	equ	0xFE1
  3565                           postinc2	equ	0xFDE
  3566                           postdec2	equ	0xFDD
  3567                           fsr2h	equ	0xFDA
  3568                           fsr2l	equ	0xFD9
  3569                           status	equ	0xFD8
  3570                           
  3571 ;; *************** function _util_onewire_read_bit *****************
  3572 ;; Defined at:
  3573 ;;		line 162 in file "easat2_util_onewire.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;		None
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;  value           2   34[COMRAM] int 
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  2   17[BANK0 ] int 
  3580 ;; Registers used:
  3581 ;;		wreg, status,2
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3587 ;;      Params:         0       2       0       0       0       0       0
  3588 ;;      Locals:         2       0       0       0       0       0       0
  3589 ;;      Temps:          1       0       0       0       0       0       0
  3590 ;;      Totals:         3       2       0       0       0       0       0
  3591 ;;Total ram usage:        5 bytes
  3592 ;; Hardware stack levels used:    1
  3593 ;; Hardware stack levels required when called:    3
  3594 ;; This function calls:
  3595 ;;		Nothing
  3596 ;; This function is called by:
  3597 ;;		_util_onewire_read_byte
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           
  3601                           	psect	text10
  3602  003A90                     __ptext10:
  3603                           	opt stack 0
  3604  003A90                     _util_onewire_read_bit:
  3605                           	opt stack 24
  3606                           
  3607                           ;easat2_util_onewire.c: 164: int value = 0;
  3608                           
  3609                           ; BSR set to: 0
  3610                           ;incstack = 0
  3611  003A90  0E00               	movlw	0
  3612  003A92  6E24               	movwf	util_onewire_read_bit@value+1,c
  3613  003A94  0E00               	movlw	0
  3614  003A96  6E23               	movwf	util_onewire_read_bit@value,c
  3615                           
  3616                           ;easat2_util_onewire.c: 167: TRISAbits.TRISA3 = 0;
  3617  003A98  9692               	bcf	3986,3,c	;volatile
  3618                           
  3619                           ;easat2_util_onewire.c: 170: (PORTAbits.RA3) = 0;
  3620  003A9A  9680               	bcf	3968,3,c	;volatile
  3621                           
  3622                           ;easat2_util_onewire.c: 176: (PORTAbits.RA3) = 1;
  3623                           
  3624                           ;easat2_util_onewire.c: 173: _delay((unsigned long)((1)*(2000000/4000000.0)));
  3625  003A9C  8680               	bsf	3968,3,c	;volatile
  3626                           
  3627                           ;easat2_util_onewire.c: 179: _delay((unsigned long)((5)*(2000000/4000000.0)));
  3628  003A9E  D000               	nop2		;2 cycle nop
  3629                           
  3630                           ;easat2_util_onewire.c: 182: value = (PORTAbits.RA3);
  3631  003AA0  A680               	btfss	3968,3,c	;volatile
  3632  003AA2  D003               	goto	u5000
  3633  003AA4  6A22               	clrf	??_util_onewire_read_bit& (0+255),c
  3634  003AA6  2A22               	incf	??_util_onewire_read_bit& (0+255),f,c
  3635  003AA8  D001               	goto	u5008
  3636  003AAA                     u5000:
  3637  003AAA  6A22               	clrf	??_util_onewire_read_bit& (0+255),c
  3638  003AAC                     u5008:
  3639  003AAC  5022               	movf	??_util_onewire_read_bit,w,c
  3640  003AAE  6E23               	movwf	util_onewire_read_bit@value,c
  3641  003AB0  6A24               	clrf	util_onewire_read_bit@value+1,c
  3642                           
  3643                           ;easat2_util_onewire.c: 185: _delay((unsigned long)((60)*(2000000/4000000.0)));
  3644  003AB2  0E0A               	movlw	10
  3645  003AB4                     u6407:
  3646  003AB4  2EE8               	decfsz	wreg,f,c
  3647  003AB6  D7FE               	goto	u6407
  3648                           
  3649                           ;easat2_util_onewire.c: 187: return value;
  3650  003AB8  C023  F071         	movff	util_onewire_read_bit@value,?_util_onewire_read_bit
  3651  003ABC  C024  F072         	movff	util_onewire_read_bit@value+1,?_util_onewire_read_bit+1
  3652  003AC0  0012               	return	
  3653  003AC2                     __end_of_util_onewire_read_bit:
  3654                           	opt stack 0
  3655                           tblptru	equ	0xFF8
  3656                           tblptrh	equ	0xFF7
  3657                           tblptrl	equ	0xFF6
  3658                           tablat	equ	0xFF5
  3659                           postinc0	equ	0xFEE
  3660                           wreg	equ	0xFE8
  3661                           postdec1	equ	0xFE5
  3662                           fsr1l	equ	0xFE1
  3663                           postinc2	equ	0xFDE
  3664                           postdec2	equ	0xFDD
  3665                           fsr2h	equ	0xFDA
  3666                           fsr2l	equ	0xFD9
  3667                           status	equ	0xFD8
  3668                           
  3669 ;; *************** function ___ftdiv *****************
  3670 ;; Defined at:
  3671 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;  f1              3   25[BANK0 ] float 
  3674 ;;  f2              3   28[BANK0 ] float 
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;  f3              3   32[BANK0 ] float 
  3677 ;;  sign            1   36[BANK0 ] unsigned char 
  3678 ;;  exp             1   35[BANK0 ] unsigned char 
  3679 ;;  cntr            1   31[BANK0 ] unsigned char 
  3680 ;; Return value:  Size  Location     Type
  3681 ;;                  3   25[BANK0 ] float 
  3682 ;; Registers used:
  3683 ;;		wreg, status,2, status,0, cstack
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3689 ;;      Params:         0       6       0       0       0       0       0
  3690 ;;      Locals:         0       6       0       0       0       0       0
  3691 ;;      Temps:          3       0       0       0       0       0       0
  3692 ;;      Totals:         3      12       0       0       0       0       0
  3693 ;;Total ram usage:       15 bytes
  3694 ;; Hardware stack levels used:    1
  3695 ;; Hardware stack levels required when called:    4
  3696 ;; This function calls:
  3697 ;;		___ftpack
  3698 ;; This function is called by:
  3699 ;;		_util_getTemperature
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           	psect	text11
  3704  002C2E                     __ptext11:
  3705                           	opt stack 0
  3706  002C2E                     ___ftdiv:
  3707                           	opt stack 24
  3708                           
  3709                           ;incstack = 0
  3710  002C2E  C07B  F026         	movff	___ftdiv@f1+2,??___ftdiv
  3711  002C32  6A27               	clrf	(??___ftdiv+1)& (0+255),c
  3712  002C34  6A28               	clrf	(??___ftdiv+2)& (0+255),c
  3713  002C36  0100               	movlb	0	; () banked
  3714  002C38  357A               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  3715  002C3A  3626               	rlcf	??___ftdiv& (0+255),f,c
  3716  002C3C  E301               	bnc	u6021
  3717  002C3E  8027               	bsf	(??___ftdiv+1)& (0+255),0,c
  3718  002C40                     u6021:
  3719  002C40  5026               	movf	??___ftdiv,w,c
  3720  002C42  0100               	movlb	0	; () banked
  3721  002C44  6F83               	movwf	___ftdiv@exp& (0+255),b
  3722  002C46  0100               	movlb	0	; () banked
  3723  002C48  5183               	movf	___ftdiv@exp& (0+255),w,b
  3724  002C4A  A4D8               	btfss	status,2,c
  3725  002C4C  D00A               	goto	l5858
  3726                           
  3727                           ; BSR set to: 0
  3728  002C4E  0E00               	movlw	0
  3729  002C50  0100               	movlb	0	; () banked
  3730  002C52  6F79               	movwf	?___ftdiv& (0+255),b
  3731  002C54  0E00               	movlw	0
  3732  002C56  0100               	movlb	0	; () banked
  3733  002C58  6F7A               	movwf	(?___ftdiv+1)& (0+255),b
  3734  002C5A  0E00               	movlw	0
  3735  002C5C  0100               	movlb	0	; () banked
  3736  002C5E  6F7B               	movwf	(?___ftdiv+2)& (0+255),b
  3737                           
  3738                           ; BSR set to: 0
  3739  002C60  0012               	return	
  3740  002C62                     l5858:
  3741                           
  3742                           ; BSR set to: 0
  3743  002C62  C07E  F026         	movff	___ftdiv@f2+2,??___ftdiv
  3744  002C66  6A27               	clrf	(??___ftdiv+1)& (0+255),c
  3745  002C68  6A28               	clrf	(??___ftdiv+2)& (0+255),c
  3746  002C6A  0100               	movlb	0	; () banked
  3747  002C6C  357D               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  3748  002C6E  3626               	rlcf	??___ftdiv& (0+255),f,c
  3749  002C70  E301               	bnc	u6041
  3750  002C72  8027               	bsf	(??___ftdiv+1)& (0+255),0,c
  3751  002C74                     u6041:
  3752  002C74  5026               	movf	??___ftdiv,w,c
  3753  002C76  0100               	movlb	0	; () banked
  3754  002C78  6F84               	movwf	___ftdiv@sign& (0+255),b
  3755  002C7A  0100               	movlb	0	; () banked
  3756  002C7C  5184               	movf	___ftdiv@sign& (0+255),w,b
  3757  002C7E  A4D8               	btfss	status,2,c
  3758  002C80  D00A               	goto	l5864
  3759                           
  3760                           ; BSR set to: 0
  3761  002C82  0E00               	movlw	0
  3762  002C84  0100               	movlb	0	; () banked
  3763  002C86  6F79               	movwf	?___ftdiv& (0+255),b
  3764  002C88  0E00               	movlw	0
  3765  002C8A  0100               	movlb	0	; () banked
  3766  002C8C  6F7A               	movwf	(?___ftdiv+1)& (0+255),b
  3767  002C8E  0E00               	movlw	0
  3768  002C90  0100               	movlb	0	; () banked
  3769  002C92  6F7B               	movwf	(?___ftdiv+2)& (0+255),b
  3770                           
  3771                           ; BSR set to: 0
  3772  002C94  0012               	return	
  3773  002C96                     l5864:
  3774                           
  3775                           ; BSR set to: 0
  3776  002C96  0E00               	movlw	0
  3777  002C98  0100               	movlb	0	; () banked
  3778  002C9A  6F80               	movwf	___ftdiv@f3& (0+255),b
  3779  002C9C  0E00               	movlw	0
  3780  002C9E  0100               	movlb	0	; () banked
  3781  002CA0  6F81               	movwf	(___ftdiv@f3+1)& (0+255),b
  3782  002CA2  0E00               	movlw	0
  3783  002CA4  0100               	movlb	0	; () banked
  3784  002CA6  6F82               	movwf	(___ftdiv@f3+2)& (0+255),b
  3785                           
  3786                           ; BSR set to: 0
  3787  002CA8  0100               	movlb	0	; () banked
  3788  002CAA  5184               	movf	___ftdiv@sign& (0+255),w,b
  3789  002CAC  0F89               	addlw	137
  3790  002CAE  0100               	movlb	0	; () banked
  3791  002CB0  5F83               	subwf	___ftdiv@exp& (0+255),f,b
  3792                           
  3793                           ; BSR set to: 0
  3794  002CB2  C07B  F084         	movff	___ftdiv@f1+2,___ftdiv@sign
  3795                           
  3796                           ; BSR set to: 0
  3797  002CB6  0100               	movlb	0	; () banked
  3798  002CB8  517E               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3799  002CBA  0100               	movlb	0	; () banked
  3800  002CBC  1B84               	xorwf	___ftdiv@sign& (0+255),f,b
  3801                           
  3802                           ; BSR set to: 0
  3803  002CBE  0E80               	movlw	128
  3804  002CC0  0100               	movlb	0	; () banked
  3805  002CC2  1784               	andwf	___ftdiv@sign& (0+255),f,b
  3806                           
  3807                           ; BSR set to: 0
  3808  002CC4  0100               	movlb	0	; () banked
  3809  002CC6  8F7A               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  3810                           
  3811                           ; BSR set to: 0
  3812  002CC8  0EFF               	movlw	255
  3813  002CCA  0100               	movlb	0	; () banked
  3814  002CCC  1779               	andwf	___ftdiv@f1& (0+255),f,b
  3815  002CCE  0EFF               	movlw	255
  3816  002CD0  0100               	movlb	0	; () banked
  3817  002CD2  177A               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  3818  002CD4  0E00               	movlw	0
  3819  002CD6  0100               	movlb	0	; () banked
  3820  002CD8  177B               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  3821                           
  3822                           ; BSR set to: 0
  3823  002CDA  0100               	movlb	0	; () banked
  3824  002CDC  8F7D               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  3825                           
  3826                           ; BSR set to: 0
  3827  002CDE  0EFF               	movlw	255
  3828  002CE0  0100               	movlb	0	; () banked
  3829  002CE2  177C               	andwf	___ftdiv@f2& (0+255),f,b
  3830  002CE4  0EFF               	movlw	255
  3831  002CE6  0100               	movlb	0	; () banked
  3832  002CE8  177D               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  3833  002CEA  0E00               	movlw	0
  3834  002CEC  0100               	movlb	0	; () banked
  3835  002CEE  177E               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  3836                           
  3837                           ; BSR set to: 0
  3838  002CF0  0E18               	movlw	24
  3839  002CF2  0100               	movlb	0	; () banked
  3840  002CF4  6F7F               	movwf	___ftdiv@cntr& (0+255),b
  3841  002CF6                     l5884:
  3842                           
  3843                           ; BSR set to: 0
  3844  002CF6  0100               	movlb	0	; () banked
  3845  002CF8  90D8               	bcf	status,0,c
  3846  002CFA  3780               	rlcf	___ftdiv@f3& (0+255),f,b
  3847  002CFC  3781               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  3848  002CFE  3782               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  3849                           
  3850                           ; BSR set to: 0
  3851  002D00  0100               	movlb	0	; () banked
  3852  002D02  517C               	movf	___ftdiv@f2& (0+255),w,b
  3853  002D04  0100               	movlb	0	; () banked
  3854  002D06  5D79               	subwf	___ftdiv@f1& (0+255),w,b
  3855  002D08  0100               	movlb	0	; () banked
  3856  002D0A  517D               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3857  002D0C  0100               	movlb	0	; () banked
  3858  002D0E  597A               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  3859  002D10  0100               	movlb	0	; () banked
  3860  002D12  517E               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3861  002D14  0100               	movlb	0	; () banked
  3862  002D16  597B               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  3863  002D18  A0D8               	btfss	status,0,c
  3864  002D1A  D00E               	goto	l844
  3865                           
  3866                           ; BSR set to: 0
  3867  002D1C  0100               	movlb	0	; () banked
  3868  002D1E  517C               	movf	___ftdiv@f2& (0+255),w,b
  3869  002D20  0100               	movlb	0	; () banked
  3870  002D22  5F79               	subwf	___ftdiv@f1& (0+255),f,b
  3871  002D24  0100               	movlb	0	; () banked
  3872  002D26  517D               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3873  002D28  0100               	movlb	0	; () banked
  3874  002D2A  5B7A               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  3875  002D2C  0100               	movlb	0	; () banked
  3876  002D2E  517E               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3877  002D30  0100               	movlb	0	; () banked
  3878  002D32  5B7B               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  3879                           
  3880                           ; BSR set to: 0
  3881  002D34  0100               	movlb	0	; () banked
  3882  002D36  8180               	bsf	___ftdiv@f3& (0+255),0,b
  3883  002D38                     l844:
  3884                           
  3885                           ; BSR set to: 0
  3886  002D38  0100               	movlb	0	; () banked
  3887  002D3A  90D8               	bcf	status,0,c
  3888  002D3C  3779               	rlcf	___ftdiv@f1& (0+255),f,b
  3889  002D3E  377A               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  3890  002D40  377B               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  3891                           
  3892                           ; BSR set to: 0
  3893  002D42  0100               	movlb	0	; () banked
  3894  002D44  2F7F               	decfsz	___ftdiv@cntr& (0+255),f,b
  3895  002D46  D7D7               	goto	l5884
  3896                           
  3897                           ; BSR set to: 0
  3898                           
  3899                           ; BSR set to: 0
  3900  002D48  C080  F071         	movff	___ftdiv@f3,___ftpack@arg
  3901  002D4C  C081  F072         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3902  002D50  C082  F073         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3903  002D54  C083  F074         	movff	___ftdiv@exp,___ftpack@exp
  3904  002D58  C084  F075         	movff	___ftdiv@sign,___ftpack@sign
  3905  002D5C  EC40  F017         	call	___ftpack	;wreg free
  3906  002D60  C071  F079         	movff	?___ftpack,?___ftdiv
  3907  002D64  C072  F07A         	movff	?___ftpack+1,?___ftdiv+1
  3908  002D68  C073  F07B         	movff	?___ftpack+2,?___ftdiv+2
  3909  002D6C  0012               	return	
  3910  002D6E                     __end_of___ftdiv:
  3911                           	opt stack 0
  3912                           tblptru	equ	0xFF8
  3913                           tblptrh	equ	0xFF7
  3914                           tblptrl	equ	0xFF6
  3915                           tablat	equ	0xFF5
  3916                           postinc0	equ	0xFEE
  3917                           wreg	equ	0xFE8
  3918                           postdec1	equ	0xFE5
  3919                           fsr1l	equ	0xFE1
  3920                           postinc2	equ	0xFDE
  3921                           postdec2	equ	0xFDD
  3922                           fsr2h	equ	0xFDA
  3923                           fsr2l	equ	0xFD9
  3924                           status	equ	0xFD8
  3925                           
  3926 ;; *************** function ___awtoft *****************
  3927 ;; Defined at:
  3928 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;  c               2   22[BANK0 ] int 
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;  sign            1   36[COMRAM] unsigned char 
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  3   22[BANK0 ] float 
  3935 ;; Registers used:
  3936 ;;		wreg, status,2, status,0, cstack
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3942 ;;      Params:         0       3       0       0       0       0       0
  3943 ;;      Locals:         1       0       0       0       0       0       0
  3944 ;;      Temps:          0       0       0       0       0       0       0
  3945 ;;      Totals:         1       3       0       0       0       0       0
  3946 ;;Total ram usage:        4 bytes
  3947 ;; Hardware stack levels used:    1
  3948 ;; Hardware stack levels required when called:    4
  3949 ;; This function calls:
  3950 ;;		___ftpack
  3951 ;; This function is called by:
  3952 ;;		_util_getTemperature
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           	psect	text12
  3957  00397E                     __ptext12:
  3958                           	opt stack 0
  3959  00397E                     ___awtoft:
  3960                           	opt stack 24
  3961                           
  3962                           ;incstack = 0
  3963  00397E  0E00               	movlw	0
  3964  003980  6E25               	movwf	___awtoft@sign,c
  3965  003982  0100               	movlb	0	; () banked
  3966  003984  AF77               	btfss	(___awtoft@c+1)& (0+255),7,b
  3967  003986  D007               	goto	l5906
  3968                           
  3969                           ; BSR set to: 0
  3970  003988  0100               	movlb	0	; () banked
  3971  00398A  6D76               	negf	___awtoft@c& (0+255),b
  3972  00398C  1F77               	comf	(___awtoft@c+1)& (0+255),f,b
  3973  00398E  B0D8               	btfsc	status,0,c
  3974  003990  2B77               	incf	(___awtoft@c+1)& (0+255),f,b
  3975                           
  3976                           ; BSR set to: 0
  3977  003992  0E01               	movlw	1
  3978  003994  6E25               	movwf	___awtoft@sign,c
  3979  003996                     l5906:
  3980                           
  3981                           ; BSR set to: 0
  3982  003996  C076  F071         	movff	___awtoft@c,___ftpack@arg
  3983  00399A  C077  F072         	movff	___awtoft@c+1,___ftpack@arg+1
  3984  00399E  0100               	movlb	0	; () banked
  3985  0039A0  6B73               	clrf	(___ftpack@arg+2)& (0+255),b
  3986  0039A2  0E8E               	movlw	142
  3987  0039A4  0100               	movlb	0	; () banked
  3988  0039A6  6F74               	movwf	___ftpack@exp& (0+255),b
  3989  0039A8  C025  F075         	movff	___awtoft@sign,___ftpack@sign
  3990  0039AC  EC40  F017         	call	___ftpack	;wreg free
  3991  0039B0  C071  F076         	movff	?___ftpack,?___awtoft
  3992  0039B4  C072  F077         	movff	?___ftpack+1,?___awtoft+1
  3993  0039B8  C073  F078         	movff	?___ftpack+2,?___awtoft+2
  3994  0039BC  0012               	return	
  3995  0039BE                     __end_of___awtoft:
  3996                           	opt stack 0
  3997                           tblptru	equ	0xFF8
  3998                           tblptrh	equ	0xFF7
  3999                           tblptrl	equ	0xFF6
  4000                           tablat	equ	0xFF5
  4001                           postinc0	equ	0xFEE
  4002                           wreg	equ	0xFE8
  4003                           postdec1	equ	0xFE5
  4004                           fsr1l	equ	0xFE1
  4005                           postinc2	equ	0xFDE
  4006                           postdec2	equ	0xFDD
  4007                           fsr2h	equ	0xFDA
  4008                           fsr2l	equ	0xFD9
  4009                           status	equ	0xFD8
  4010                           
  4011 ;; *************** function _util_getSolarCurrent *****************
  4012 ;; Defined at:
  4013 ;;		line 52 in file "easat2_util_inputs.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;		None
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;  solarCurrent    3   68[BANK0 ] float 
  4018 ;;  value           3   65[BANK0 ] float 
  4019 ;; Return value:  Size  Location     Type
  4020 ;;                  2   63[BANK0 ] int 
  4021 ;; Registers used:
  4022 ;;		wreg, status,2, status,0, cstack
  4023 ;; Tracked objects:
  4024 ;;		On entry : 0/0
  4025 ;;		On exit  : 0/0
  4026 ;;		Unchanged: 0/0
  4027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4028 ;;      Params:         0       2       0       0       0       0       0
  4029 ;;      Locals:         0       6       0       0       0       0       0
  4030 ;;      Temps:          0       0       0       0       0       0       0
  4031 ;;      Totals:         0       8       0       0       0       0       0
  4032 ;;Total ram usage:        8 bytes
  4033 ;; Hardware stack levels used:    1
  4034 ;; Hardware stack levels required when called:    5
  4035 ;; This function calls:
  4036 ;;		___ftmul
  4037 ;;		___fttol
  4038 ;;		___lwtoft
  4039 ;; This function is called by:
  4040 ;;		_main_loop
  4041 ;; This function uses a non-reentrant model
  4042 ;;
  4043                           
  4044                           	psect	text13
  4045  002F74                     __ptext13:
  4046                           	opt stack 0
  4047  002F74                     _util_getSolarCurrent:
  4048                           	opt stack 24
  4049                           
  4050                           ;easat2_util_inputs.c: 54: float value = 0.0, solarCurrent = 0.0;
  4051                           
  4052                           ;incstack = 0
  4053  002F74  0E00               	movlw	0
  4054  002F76  0100               	movlb	0	; () banked
  4055  002F78  6FA1               	movwf	util_getSolarCurrent@value& (0+255),b
  4056  002F7A  0E00               	movlw	0
  4057  002F7C  0100               	movlb	0	; () banked
  4058  002F7E  6FA2               	movwf	(util_getSolarCurrent@value+1)& (0+255),b
  4059  002F80  0E00               	movlw	0
  4060  002F82  0100               	movlb	0	; () banked
  4061  002F84  6FA3               	movwf	(util_getSolarCurrent@value+2)& (0+255),b
  4062  002F86  0E00               	movlw	0
  4063  002F88  0100               	movlb	0	; () banked
  4064  002F8A  6FA4               	movwf	util_getSolarCurrent@solarCurrent& (0+255),b
  4065  002F8C  0E00               	movlw	0
  4066  002F8E  0100               	movlb	0	; () banked
  4067  002F90  6FA5               	movwf	(util_getSolarCurrent@solarCurrent+1)& (0+255),b
  4068  002F92  0E00               	movlw	0
  4069  002F94  0100               	movlb	0	; () banked
  4070  002F96  6FA6               	movwf	(util_getSolarCurrent@solarCurrent+2)& (0+255),b
  4071                           
  4072                           ; BSR set to: 0
  4073                           ;easat2_util_inputs.c: 56: ADCON0bits.CHS = 1;
  4074  002F98  84C2               	bsf	4034,2,c	;volatile
  4075  002F9A  96C2               	bcf	4034,3,c	;volatile
  4076  002F9C  98C2               	bcf	4034,4,c	;volatile
  4077  002F9E  9AC2               	bcf	4034,5,c	;volatile
  4078  002FA0  9CC2               	bcf	4034,6,c	;volatile
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;easat2_util_inputs.c: 57: ADCON0bits.ADON = 1;
  4082  002FA2  80C2               	bsf	4034,0,c	;volatile
  4083                           
  4084                           ; BSR set to: 0
  4085                           ;easat2_util_inputs.c: 58: PIR1bits.ADIF = 0;
  4086  002FA4  9C9E               	bcf	3998,6,c	;volatile
  4087                           
  4088                           ; BSR set to: 0
  4089                           ;easat2_util_inputs.c: 60: ADCON0bits.GO = 1;
  4090  002FA6  82C2               	bsf	4034,1,c	;volatile
  4091  002FA8                     l70:
  4092  002FA8  AC9E               	btfss	3998,6,c	;volatile
  4093  002FAA  D7FE               	goto	l70
  4094                           
  4095                           ;easat2_util_inputs.c: 63: value = ADRES;
  4096  002FAC  CFC3 F076          	movff	4035,___lwtoft@c	;volatile
  4097  002FB0  CFC4 F077          	movff	4036,___lwtoft@c+1	;volatile
  4098  002FB4  ECF4  F01D         	call	___lwtoft	;wreg free
  4099  002FB8  C076  F0A1         	movff	?___lwtoft,util_getSolarCurrent@value
  4100  002FBC  C077  F0A2         	movff	?___lwtoft+1,util_getSolarCurrent@value+1
  4101  002FC0  C078  F0A3         	movff	?___lwtoft+2,util_getSolarCurrent@value+2
  4102                           
  4103                           ;easat2_util_inputs.c: 64: PIR1bits.ADIF = 0;
  4104  002FC4  9C9E               	bcf	3998,6,c	;volatile
  4105                           
  4106                           ;easat2_util_inputs.c: 66: ADCON0bits.ADON = 0;
  4107  002FC6  90C2               	bcf	4034,0,c	;volatile
  4108                           
  4109                           ;easat2_util_inputs.c: 73: solarCurrent = (2.048 / 1023.0) * value;
  4110  002FC8  C0A1  F07D         	movff	util_getSolarCurrent@value,___ftmul@f1
  4111  002FCC  C0A2  F07E         	movff	util_getSolarCurrent@value+1,___ftmul@f1+1
  4112  002FD0  C0A3  F07F         	movff	util_getSolarCurrent@value+2,___ftmul@f1+2
  4113  002FD4  0E33               	movlw	51
  4114  002FD6  0100               	movlb	0	; () banked
  4115  002FD8  6F80               	movwf	___ftmul@f2& (0+255),b
  4116  002FDA  0E03               	movlw	3
  4117  002FDC  0100               	movlb	0	; () banked
  4118  002FDE  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4119  002FE0  0E3B               	movlw	59
  4120  002FE2  0100               	movlb	0	; () banked
  4121  002FE4  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4122  002FE6  ECCC  F014         	call	___ftmul	;wreg free
  4123  002FEA  C07D  F0A4         	movff	?___ftmul,util_getSolarCurrent@solarCurrent
  4124  002FEE  C07E  F0A5         	movff	?___ftmul+1,util_getSolarCurrent@solarCurrent+1
  4125  002FF2  C07F  F0A6         	movff	?___ftmul+2,util_getSolarCurrent@solarCurrent+2
  4126                           
  4127                           ;easat2_util_inputs.c: 77: solarCurrent = solarCurrent * 1.0;
  4128  002FF6  C0A4  F07D         	movff	util_getSolarCurrent@solarCurrent,___ftmul@f1
  4129  002FFA  C0A5  F07E         	movff	util_getSolarCurrent@solarCurrent+1,___ftmul@f1+1
  4130  002FFE  C0A6  F07F         	movff	util_getSolarCurrent@solarCurrent+2,___ftmul@f1+2
  4131  003002  0E00               	movlw	0
  4132  003004  0100               	movlb	0	; () banked
  4133  003006  6F80               	movwf	___ftmul@f2& (0+255),b
  4134  003008  0E80               	movlw	128
  4135  00300A  0100               	movlb	0	; () banked
  4136  00300C  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4137  00300E  0E3F               	movlw	63
  4138  003010  0100               	movlb	0	; () banked
  4139  003012  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4140  003014  ECCC  F014         	call	___ftmul	;wreg free
  4141  003018  C07D  F0A4         	movff	?___ftmul,util_getSolarCurrent@solarCurrent
  4142  00301C  C07E  F0A5         	movff	?___ftmul+1,util_getSolarCurrent@solarCurrent+1
  4143  003020  C07F  F0A6         	movff	?___ftmul+2,util_getSolarCurrent@solarCurrent+2
  4144                           
  4145                           ;easat2_util_inputs.c: 79: return (int)solarCurrent;
  4146  003024  C0A4  F090         	movff	util_getSolarCurrent@solarCurrent,___fttol@f1
  4147  003028  C0A5  F091         	movff	util_getSolarCurrent@solarCurrent+1,___fttol@f1+1
  4148  00302C  C0A6  F092         	movff	util_getSolarCurrent@solarCurrent+2,___fttol@f1+2
  4149  003030  EC75  F015         	call	___fttol	;wreg free
  4150  003034  C090  F09F         	movff	?___fttol,?_util_getSolarCurrent
  4151  003038  C091  F0A0         	movff	?___fttol+1,?_util_getSolarCurrent+1
  4152  00303C  0012               	return	
  4153  00303E                     __end_of_util_getSolarCurrent:
  4154                           	opt stack 0
  4155                           tblptru	equ	0xFF8
  4156                           tblptrh	equ	0xFF7
  4157                           tblptrl	equ	0xFF6
  4158                           tablat	equ	0xFF5
  4159                           postinc0	equ	0xFEE
  4160                           wreg	equ	0xFE8
  4161                           postdec1	equ	0xFE5
  4162                           fsr1l	equ	0xFE1
  4163                           postinc2	equ	0xFDE
  4164                           postdec2	equ	0xFDD
  4165                           fsr2h	equ	0xFDA
  4166                           fsr2l	equ	0xFD9
  4167                           status	equ	0xFD8
  4168                           
  4169 ;; *************** function _util_getBatteryVoltage *****************
  4170 ;; Defined at:
  4171 ;;		line 19 in file "easat2_util_inputs.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;		None
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;  voltage         3   47[BANK0 ] float 
  4176 ;;  value           3   44[BANK0 ] float 
  4177 ;; Return value:  Size  Location     Type
  4178 ;;                  3   41[BANK0 ] float 
  4179 ;; Registers used:
  4180 ;;		wreg, status,2, status,0, cstack
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4186 ;;      Params:         0       3       0       0       0       0       0
  4187 ;;      Locals:         0       6       0       0       0       0       0
  4188 ;;      Temps:          0       0       0       0       0       0       0
  4189 ;;      Totals:         0       9       0       0       0       0       0
  4190 ;;Total ram usage:        9 bytes
  4191 ;; Hardware stack levels used:    1
  4192 ;; Hardware stack levels required when called:    5
  4193 ;; This function calls:
  4194 ;;		___ftmul
  4195 ;;		___lwtoft
  4196 ;; This function is called by:
  4197 ;;		_main_loop
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           	psect	text14
  4202  003108                     __ptext14:
  4203                           	opt stack 0
  4204  003108                     _util_getBatteryVoltage:
  4205                           	opt stack 24
  4206                           
  4207                           ;easat2_util_inputs.c: 21: float value = 0.0, voltage = 0.0;
  4208                           
  4209                           ;incstack = 0
  4210  003108  0E00               	movlw	0
  4211  00310A  0100               	movlb	0	; () banked
  4212  00310C  6F8C               	movwf	util_getBatteryVoltage@value& (0+255),b
  4213  00310E  0E00               	movlw	0
  4214  003110  0100               	movlb	0	; () banked
  4215  003112  6F8D               	movwf	(util_getBatteryVoltage@value+1)& (0+255),b
  4216  003114  0E00               	movlw	0
  4217  003116  0100               	movlb	0	; () banked
  4218  003118  6F8E               	movwf	(util_getBatteryVoltage@value+2)& (0+255),b
  4219  00311A  0E00               	movlw	0
  4220  00311C  0100               	movlb	0	; () banked
  4221  00311E  6F8F               	movwf	util_getBatteryVoltage@voltage& (0+255),b
  4222  003120  0E00               	movlw	0
  4223  003122  0100               	movlb	0	; () banked
  4224  003124  6F90               	movwf	(util_getBatteryVoltage@voltage+1)& (0+255),b
  4225  003126  0E00               	movlw	0
  4226  003128  0100               	movlb	0	; () banked
  4227  00312A  6F91               	movwf	(util_getBatteryVoltage@voltage+2)& (0+255),b
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;easat2_util_inputs.c: 23: ADCON0bits.CHS = 0;
  4231  00312C  94C2               	bcf	4034,2,c	;volatile
  4232  00312E  96C2               	bcf	4034,3,c	;volatile
  4233  003130  98C2               	bcf	4034,4,c	;volatile
  4234  003132  9AC2               	bcf	4034,5,c	;volatile
  4235  003134  9CC2               	bcf	4034,6,c	;volatile
  4236                           
  4237                           ; BSR set to: 0
  4238                           ;easat2_util_inputs.c: 24: ADCON0bits.ADON = 1;
  4239  003136  80C2               	bsf	4034,0,c	;volatile
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;easat2_util_inputs.c: 25: PIR1bits.ADIF = 0;
  4243  003138  9C9E               	bcf	3998,6,c	;volatile
  4244                           
  4245                           ; BSR set to: 0
  4246                           ;easat2_util_inputs.c: 27: ADCON0bits.GO = 1;
  4247  00313A  82C2               	bsf	4034,1,c	;volatile
  4248  00313C                     l64:
  4249  00313C  AC9E               	btfss	3998,6,c	;volatile
  4250  00313E  D7FE               	goto	l64
  4251                           
  4252                           ;easat2_util_inputs.c: 30: value = ADRES;
  4253  003140  CFC3 F076          	movff	4035,___lwtoft@c	;volatile
  4254  003144  CFC4 F077          	movff	4036,___lwtoft@c+1	;volatile
  4255  003148  ECF4  F01D         	call	___lwtoft	;wreg free
  4256  00314C  C076  F08C         	movff	?___lwtoft,util_getBatteryVoltage@value
  4257  003150  C077  F08D         	movff	?___lwtoft+1,util_getBatteryVoltage@value+1
  4258  003154  C078  F08E         	movff	?___lwtoft+2,util_getBatteryVoltage@value+2
  4259                           
  4260                           ;easat2_util_inputs.c: 31: PIR1bits.ADIF = 0;
  4261  003158  9C9E               	bcf	3998,6,c	;volatile
  4262                           
  4263                           ;easat2_util_inputs.c: 33: ADCON0bits.ADON = 0;
  4264  00315A  90C2               	bcf	4034,0,c	;volatile
  4265                           
  4266                           ;easat2_util_inputs.c: 40: voltage = (2.048 / 1023.0) * value;
  4267  00315C  C08C  F07D         	movff	util_getBatteryVoltage@value,___ftmul@f1
  4268  003160  C08D  F07E         	movff	util_getBatteryVoltage@value+1,___ftmul@f1+1
  4269  003164  C08E  F07F         	movff	util_getBatteryVoltage@value+2,___ftmul@f1+2
  4270  003168  0E33               	movlw	51
  4271  00316A  0100               	movlb	0	; () banked
  4272  00316C  6F80               	movwf	___ftmul@f2& (0+255),b
  4273  00316E  0E03               	movlw	3
  4274  003170  0100               	movlb	0	; () banked
  4275  003172  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4276  003174  0E3B               	movlw	59
  4277  003176  0100               	movlb	0	; () banked
  4278  003178  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4279  00317A  ECCC  F014         	call	___ftmul	;wreg free
  4280  00317E  C07D  F08F         	movff	?___ftmul,util_getBatteryVoltage@voltage
  4281  003182  C07E  F090         	movff	?___ftmul+1,util_getBatteryVoltage@voltage+1
  4282  003186  C07F  F091         	movff	?___ftmul+2,util_getBatteryVoltage@voltage+2
  4283                           
  4284                           ;easat2_util_inputs.c: 44: voltage = voltage * 5.7;
  4285  00318A  C08F  F07D         	movff	util_getBatteryVoltage@voltage,___ftmul@f1
  4286  00318E  C090  F07E         	movff	util_getBatteryVoltage@voltage+1,___ftmul@f1+1
  4287  003192  C091  F07F         	movff	util_getBatteryVoltage@voltage+2,___ftmul@f1+2
  4288  003196  0E66               	movlw	102
  4289  003198  0100               	movlb	0	; () banked
  4290  00319A  6F80               	movwf	___ftmul@f2& (0+255),b
  4291  00319C  0EB6               	movlw	182
  4292  00319E  0100               	movlb	0	; () banked
  4293  0031A0  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4294  0031A2  0E40               	movlw	64
  4295  0031A4  0100               	movlb	0	; () banked
  4296  0031A6  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4297  0031A8  ECCC  F014         	call	___ftmul	;wreg free
  4298  0031AC  C07D  F08F         	movff	?___ftmul,util_getBatteryVoltage@voltage
  4299  0031B0  C07E  F090         	movff	?___ftmul+1,util_getBatteryVoltage@voltage+1
  4300  0031B4  C07F  F091         	movff	?___ftmul+2,util_getBatteryVoltage@voltage+2
  4301                           
  4302                           ;easat2_util_inputs.c: 46: return voltage;
  4303  0031B8  C08F  F089         	movff	util_getBatteryVoltage@voltage,?_util_getBatteryVoltage
  4304  0031BC  C090  F08A         	movff	util_getBatteryVoltage@voltage+1,?_util_getBatteryVoltage+1
  4305  0031C0  C091  F08B         	movff	util_getBatteryVoltage@voltage+2,?_util_getBatteryVoltage+2
  4306  0031C4  0012               	return	
  4307  0031C6                     __end_of_util_getBatteryVoltage:
  4308                           	opt stack 0
  4309                           tblptru	equ	0xFF8
  4310                           tblptrh	equ	0xFF7
  4311                           tblptrl	equ	0xFF6
  4312                           tablat	equ	0xFF5
  4313                           postinc0	equ	0xFEE
  4314                           wreg	equ	0xFE8
  4315                           postdec1	equ	0xFE5
  4316                           fsr1l	equ	0xFE1
  4317                           postinc2	equ	0xFDE
  4318                           postdec2	equ	0xFDD
  4319                           fsr2h	equ	0xFDA
  4320                           fsr2l	equ	0xFD9
  4321                           status	equ	0xFD8
  4322                           
  4323 ;; *************** function _util_getBatteryCurrent *****************
  4324 ;; Defined at:
  4325 ;;		line 85 in file "easat2_util_inputs.c"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;		None
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;  batteryCurre    3   68[BANK0 ] float 
  4330 ;;  value           3   65[BANK0 ] float 
  4331 ;; Return value:  Size  Location     Type
  4332 ;;                  2   63[BANK0 ] int 
  4333 ;; Registers used:
  4334 ;;		wreg, status,2, status,0, cstack
  4335 ;; Tracked objects:
  4336 ;;		On entry : 0/0
  4337 ;;		On exit  : 0/0
  4338 ;;		Unchanged: 0/0
  4339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4340 ;;      Params:         0       2       0       0       0       0       0
  4341 ;;      Locals:         0       6       0       0       0       0       0
  4342 ;;      Temps:          0       0       0       0       0       0       0
  4343 ;;      Totals:         0       8       0       0       0       0       0
  4344 ;;Total ram usage:        8 bytes
  4345 ;; Hardware stack levels used:    1
  4346 ;; Hardware stack levels required when called:    5
  4347 ;; This function calls:
  4348 ;;		___ftmul
  4349 ;;		___fttol
  4350 ;;		___lwtoft
  4351 ;; This function is called by:
  4352 ;;		_main_loop
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356                           	psect	text15
  4357  00303E                     __ptext15:
  4358                           	opt stack 0
  4359  00303E                     _util_getBatteryCurrent:
  4360                           	opt stack 24
  4361                           
  4362                           ;easat2_util_inputs.c: 87: float value = 0.0, batteryCurrent = 0.0;
  4363                           
  4364                           ;incstack = 0
  4365  00303E  0E00               	movlw	0
  4366  003040  0100               	movlb	0	; () banked
  4367  003042  6FA1               	movwf	util_getBatteryCurrent@value& (0+255),b
  4368  003044  0E00               	movlw	0
  4369  003046  0100               	movlb	0	; () banked
  4370  003048  6FA2               	movwf	(util_getBatteryCurrent@value+1)& (0+255),b
  4371  00304A  0E00               	movlw	0
  4372  00304C  0100               	movlb	0	; () banked
  4373  00304E  6FA3               	movwf	(util_getBatteryCurrent@value+2)& (0+255),b
  4374  003050  0E00               	movlw	0
  4375  003052  0100               	movlb	0	; () banked
  4376  003054  6FA4               	movwf	util_getBatteryCurrent@batteryCurrent& (0+255),b
  4377  003056  0E00               	movlw	0
  4378  003058  0100               	movlb	0	; () banked
  4379  00305A  6FA5               	movwf	(util_getBatteryCurrent@batteryCurrent+1)& (0+255),b
  4380  00305C  0E00               	movlw	0
  4381  00305E  0100               	movlb	0	; () banked
  4382  003060  6FA6               	movwf	(util_getBatteryCurrent@batteryCurrent+2)& (0+255),b
  4383                           
  4384                           ; BSR set to: 0
  4385                           ;easat2_util_inputs.c: 89: ADCON0bits.CHS = 12;
  4386  003062  94C2               	bcf	4034,2,c	;volatile
  4387  003064  96C2               	bcf	4034,3,c	;volatile
  4388  003066  88C2               	bsf	4034,4,c	;volatile
  4389  003068  8AC2               	bsf	4034,5,c	;volatile
  4390  00306A  9CC2               	bcf	4034,6,c	;volatile
  4391                           
  4392                           ; BSR set to: 0
  4393                           ;easat2_util_inputs.c: 90: ADCON0bits.ADON = 1;
  4394  00306C  80C2               	bsf	4034,0,c	;volatile
  4395                           
  4396                           ; BSR set to: 0
  4397                           ;easat2_util_inputs.c: 91: PIR1bits.ADIF = 0;
  4398  00306E  9C9E               	bcf	3998,6,c	;volatile
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;easat2_util_inputs.c: 93: ADCON0bits.GO = 1;
  4402  003070  82C2               	bsf	4034,1,c	;volatile
  4403  003072                     l76:
  4404  003072  AC9E               	btfss	3998,6,c	;volatile
  4405  003074  D7FE               	goto	l76
  4406                           
  4407                           ;easat2_util_inputs.c: 96: value = ADRES;
  4408  003076  CFC3 F076          	movff	4035,___lwtoft@c	;volatile
  4409  00307A  CFC4 F077          	movff	4036,___lwtoft@c+1	;volatile
  4410  00307E  ECF4  F01D         	call	___lwtoft	;wreg free
  4411  003082  C076  F0A1         	movff	?___lwtoft,util_getBatteryCurrent@value
  4412  003086  C077  F0A2         	movff	?___lwtoft+1,util_getBatteryCurrent@value+1
  4413  00308A  C078  F0A3         	movff	?___lwtoft+2,util_getBatteryCurrent@value+2
  4414                           
  4415                           ;easat2_util_inputs.c: 97: PIR1bits.ADIF = 0;
  4416  00308E  9C9E               	bcf	3998,6,c	;volatile
  4417                           
  4418                           ;easat2_util_inputs.c: 99: ADCON0bits.ADON = 0;
  4419  003090  90C2               	bcf	4034,0,c	;volatile
  4420                           
  4421                           ;easat2_util_inputs.c: 106: batteryCurrent = (2.048 / 1023.0) * value;
  4422  003092  C0A1  F07D         	movff	util_getBatteryCurrent@value,___ftmul@f1
  4423  003096  C0A2  F07E         	movff	util_getBatteryCurrent@value+1,___ftmul@f1+1
  4424  00309A  C0A3  F07F         	movff	util_getBatteryCurrent@value+2,___ftmul@f1+2
  4425  00309E  0E33               	movlw	51
  4426  0030A0  0100               	movlb	0	; () banked
  4427  0030A2  6F80               	movwf	___ftmul@f2& (0+255),b
  4428  0030A4  0E03               	movlw	3
  4429  0030A6  0100               	movlb	0	; () banked
  4430  0030A8  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4431  0030AA  0E3B               	movlw	59
  4432  0030AC  0100               	movlb	0	; () banked
  4433  0030AE  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4434  0030B0  ECCC  F014         	call	___ftmul	;wreg free
  4435  0030B4  C07D  F0A4         	movff	?___ftmul,util_getBatteryCurrent@batteryCurrent
  4436  0030B8  C07E  F0A5         	movff	?___ftmul+1,util_getBatteryCurrent@batteryCurrent+1
  4437  0030BC  C07F  F0A6         	movff	?___ftmul+2,util_getBatteryCurrent@batteryCurrent+2
  4438                           
  4439                           ;easat2_util_inputs.c: 110: batteryCurrent = batteryCurrent * 1.0;
  4440  0030C0  C0A4  F07D         	movff	util_getBatteryCurrent@batteryCurrent,___ftmul@f1
  4441  0030C4  C0A5  F07E         	movff	util_getBatteryCurrent@batteryCurrent+1,___ftmul@f1+1
  4442  0030C8  C0A6  F07F         	movff	util_getBatteryCurrent@batteryCurrent+2,___ftmul@f1+2
  4443  0030CC  0E00               	movlw	0
  4444  0030CE  0100               	movlb	0	; () banked
  4445  0030D0  6F80               	movwf	___ftmul@f2& (0+255),b
  4446  0030D2  0E80               	movlw	128
  4447  0030D4  0100               	movlb	0	; () banked
  4448  0030D6  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  4449  0030D8  0E3F               	movlw	63
  4450  0030DA  0100               	movlb	0	; () banked
  4451  0030DC  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  4452  0030DE  ECCC  F014         	call	___ftmul	;wreg free
  4453  0030E2  C07D  F0A4         	movff	?___ftmul,util_getBatteryCurrent@batteryCurrent
  4454  0030E6  C07E  F0A5         	movff	?___ftmul+1,util_getBatteryCurrent@batteryCurrent+1
  4455  0030EA  C07F  F0A6         	movff	?___ftmul+2,util_getBatteryCurrent@batteryCurrent+2
  4456                           
  4457                           ;easat2_util_inputs.c: 112: return (int)batteryCurrent;
  4458  0030EE  C0A4  F090         	movff	util_getBatteryCurrent@batteryCurrent,___fttol@f1
  4459  0030F2  C0A5  F091         	movff	util_getBatteryCurrent@batteryCurrent+1,___fttol@f1+1
  4460  0030F6  C0A6  F092         	movff	util_getBatteryCurrent@batteryCurrent+2,___fttol@f1+2
  4461  0030FA  EC75  F015         	call	___fttol	;wreg free
  4462  0030FE  C090  F09F         	movff	?___fttol,?_util_getBatteryCurrent
  4463  003102  C091  F0A0         	movff	?___fttol+1,?_util_getBatteryCurrent+1
  4464  003106  0012               	return	
  4465  003108                     __end_of_util_getBatteryCurrent:
  4466                           	opt stack 0
  4467                           tblptru	equ	0xFF8
  4468                           tblptrh	equ	0xFF7
  4469                           tblptrl	equ	0xFF6
  4470                           tablat	equ	0xFF5
  4471                           postinc0	equ	0xFEE
  4472                           wreg	equ	0xFE8
  4473                           postdec1	equ	0xFE5
  4474                           fsr1l	equ	0xFE1
  4475                           postinc2	equ	0xFDE
  4476                           postdec2	equ	0xFDD
  4477                           fsr2h	equ	0xFDA
  4478                           fsr2l	equ	0xFD9
  4479                           status	equ	0xFD8
  4480                           
  4481 ;; *************** function ___lwtoft *****************
  4482 ;; Defined at:
  4483 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;  c               2   22[BANK0 ] unsigned int 
  4486 ;; Auto vars:     Size  Location     Type
  4487 ;;		None
  4488 ;; Return value:  Size  Location     Type
  4489 ;;                  3   22[BANK0 ] float 
  4490 ;; Registers used:
  4491 ;;		wreg, status,2, status,0, cstack
  4492 ;; Tracked objects:
  4493 ;;		On entry : 0/0
  4494 ;;		On exit  : 0/0
  4495 ;;		Unchanged: 0/0
  4496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4497 ;;      Params:         0       3       0       0       0       0       0
  4498 ;;      Locals:         0       0       0       0       0       0       0
  4499 ;;      Temps:          0       0       0       0       0       0       0
  4500 ;;      Totals:         0       3       0       0       0       0       0
  4501 ;;Total ram usage:        3 bytes
  4502 ;; Hardware stack levels used:    1
  4503 ;; Hardware stack levels required when called:    4
  4504 ;; This function calls:
  4505 ;;		___ftpack
  4506 ;; This function is called by:
  4507 ;;		_util_getBatteryVoltage
  4508 ;;		_util_getSolarCurrent
  4509 ;;		_util_getBatteryCurrent
  4510 ;; This function uses a non-reentrant model
  4511 ;;
  4512                           
  4513                           	psect	text16
  4514  003BE8                     __ptext16:
  4515                           	opt stack 0
  4516  003BE8                     ___lwtoft:
  4517                           	opt stack 24
  4518                           
  4519                           ;incstack = 0
  4520  003BE8  C076  F071         	movff	___lwtoft@c,___ftpack@arg
  4521  003BEC  C077  F072         	movff	___lwtoft@c+1,___ftpack@arg+1
  4522  003BF0  0100               	movlb	0	; () banked
  4523  003BF2  6B73               	clrf	(___ftpack@arg+2)& (0+255),b
  4524  003BF4  0E8E               	movlw	142
  4525  003BF6  0100               	movlb	0	; () banked
  4526  003BF8  6F74               	movwf	___ftpack@exp& (0+255),b
  4527  003BFA  0E00               	movlw	0
  4528  003BFC  0100               	movlb	0	; () banked
  4529  003BFE  6F75               	movwf	___ftpack@sign& (0+255),b
  4530  003C00  EC40  F017         	call	___ftpack	;wreg free
  4531  003C04  C071  F076         	movff	?___ftpack,?___lwtoft
  4532  003C08  C072  F077         	movff	?___ftpack+1,?___lwtoft+1
  4533  003C0C  C073  F078         	movff	?___ftpack+2,?___lwtoft+2
  4534  003C10  0012               	return	
  4535  003C12                     __end_of___lwtoft:
  4536                           	opt stack 0
  4537                           tblptru	equ	0xFF8
  4538                           tblptrh	equ	0xFF7
  4539                           tblptrl	equ	0xFF6
  4540                           tablat	equ	0xFF5
  4541                           postinc0	equ	0xFEE
  4542                           wreg	equ	0xFE8
  4543                           postdec1	equ	0xFE5
  4544                           fsr1l	equ	0xFE1
  4545                           postinc2	equ	0xFDE
  4546                           postdec2	equ	0xFDD
  4547                           fsr2h	equ	0xFDA
  4548                           fsr2l	equ	0xFD9
  4549                           status	equ	0xFD8
  4550                           
  4551 ;; *************** function _util_beacon_transmission *****************
  4552 ;; Defined at:
  4553 ;;		line 21 in file "easat2_util_transmission.c"
  4554 ;; Parameters:    Size  Location     Type
  4555 ;;  battery_volt    3  114[BANK0 ] float 
  4556 ;;  solar_curren    2  117[BANK0 ] int 
  4557 ;;  battery_curr    2  119[BANK0 ] int 
  4558 ;;  temperature     3  121[BANK0 ] float 
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;  i               2  192[BANK1 ] int 
  4561 ;;  BEACON_MESSA  128    0[BANK1 ] unsigned char [128]
  4562 ;;  BEACON_BUFFE   64  128[BANK1 ] unsigned char [64]
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  1    wreg      void 
  4565 ;; Registers used:
  4566 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4572 ;;      Params:         0      10       0       0       0       0       0
  4573 ;;      Locals:         0       0     194       0       0       0       0
  4574 ;;      Temps:          0       0       0       0       0       0       0
  4575 ;;      Totals:         0      10     194       0       0       0       0
  4576 ;;Total ram usage:      204 bytes
  4577 ;; Hardware stack levels used:    1
  4578 ;; Hardware stack levels required when called:    8
  4579 ;; This function calls:
  4580 ;;		_memset
  4581 ;;		_sprintf
  4582 ;;		_strcat
  4583 ;;		_strcpy
  4584 ;;		_strlen
  4585 ;;		_util_transmit_letter
  4586 ;; This function is called by:
  4587 ;;		_main_loop
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591                           	psect	text17
  4592  002D6E                     __ptext17:
  4593                           	opt stack 0
  4594  002D6E                     _util_beacon_transmission:
  4595                           	opt stack 21
  4596                           
  4597                           ;easat2_util_transmission.c: 24: char BEACON_MESSAGE[128];
  4598                           ;easat2_util_transmission.c: 25: char BEACON_BUFFER[64];
  4599                           ;easat2_util_transmission.c: 29: memset(BEACON_MESSAGE, 0, sizeof(BEACON_MESSAGE));
  4600                           
  4601                           ;incstack = 0
  4602  002D6E  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4603  002D70  0100               	movlb	0	; () banked
  4604  002D72  6F71               	movwf	memset@p1& (0+255),b
  4605  002D74  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4606  002D76  0100               	movlb	0	; () banked
  4607  002D78  6F72               	movwf	(memset@p1+1)& (0+255),b
  4608  002D7A  0E00               	movlw	0
  4609  002D7C  0100               	movlb	0	; () banked
  4610  002D7E  6F74               	movwf	(memset@c+1)& (0+255),b
  4611  002D80  0E00               	movlw	0
  4612  002D82  6F73               	movwf	memset@c& (0+255),b
  4613  002D84  0E00               	movlw	0
  4614  002D86  0100               	movlb	0	; () banked
  4615  002D88  6F76               	movwf	(memset@n+1)& (0+255),b
  4616  002D8A  0E80               	movlw	128
  4617  002D8C  6F75               	movwf	memset@n& (0+255),b
  4618  002D8E  EC93  F01D         	call	_memset	;wreg free
  4619                           
  4620                           ;easat2_util_transmission.c: 30: strcpy(BEACON_MESSAGE, "EASAT2");
  4621  002D92  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4622  002D94  0100               	movlb	0	; () banked
  4623  002D96  6F71               	movwf	strcpy@to& (0+255),b
  4624  002D98  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4625  002D9A  0100               	movlb	0	; () banked
  4626  002D9C  6F72               	movwf	(strcpy@to+1)& (0+255),b
  4627  002D9E  0E9E               	movlw	low STR_1
  4628  002DA0  0100               	movlb	0	; () banked
  4629  002DA2  6F73               	movwf	strcpy@from& (0+255),b
  4630  002DA4  0E7F               	movlw	high STR_1
  4631  002DA6  0100               	movlb	0	; () banked
  4632  002DA8  6F74               	movwf	(strcpy@from+1)& (0+255),b
  4633  002DAA  EC61  F01D         	call	_strcpy	;wreg free
  4634                           
  4635                           ;easat2_util_transmission.c: 32: memset(BEACON_BUFFER, 0, sizeof(BEACON_BUFFER));
  4636  002DAE  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4637  002DB0  0100               	movlb	0	; () banked
  4638  002DB2  6F71               	movwf	memset@p1& (0+255),b
  4639  002DB4  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4640  002DB6  0100               	movlb	0	; () banked
  4641  002DB8  6F72               	movwf	(memset@p1+1)& (0+255),b
  4642  002DBA  0E00               	movlw	0
  4643  002DBC  0100               	movlb	0	; () banked
  4644  002DBE  6F74               	movwf	(memset@c+1)& (0+255),b
  4645  002DC0  0E00               	movlw	0
  4646  002DC2  6F73               	movwf	memset@c& (0+255),b
  4647  002DC4  0E00               	movlw	0
  4648  002DC6  0100               	movlb	0	; () banked
  4649  002DC8  6F76               	movwf	(memset@n+1)& (0+255),b
  4650  002DCA  0E40               	movlw	64
  4651  002DCC  6F75               	movwf	memset@n& (0+255),b
  4652  002DCE  EC93  F01D         	call	_memset	;wreg free
  4653                           
  4654                           ;easat2_util_transmission.c: 33: sprintf(BEACON_BUFFER, " %.1f %.1f %3.0d %3.0d", temper
      +                          ature, battery_voltage,
  4655                           ;easat2_util_transmission.c: 34: solar_current, battery_current);
  4656  002DD2  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4657  002DD4  0100               	movlb	0	; () banked
  4658  002DD6  6FA5               	movwf	sprintf@sp& (0+255),b
  4659  002DD8  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4660  002DDA  0100               	movlb	0	; () banked
  4661  002DDC  6FA6               	movwf	(sprintf@sp+1)& (0+255),b
  4662  002DDE  0E6B               	movlw	low STR_2
  4663  002DE0  0100               	movlb	0	; () banked
  4664  002DE2  6FA7               	movwf	sprintf@f& (0+255),b
  4665  002DE4  0E7F               	movlw	high STR_2
  4666  002DE6  0100               	movlb	0	; () banked
  4667  002DE8  6FA8               	movwf	(sprintf@f+1)& (0+255),b
  4668  002DEA  C0D9  F0A9         	movff	util_beacon_transmission@temperature,?_sprintf+4
  4669  002DEE  C0DA  F0AA         	movff	util_beacon_transmission@temperature+1,?_sprintf+5
  4670  002DF2  C0DB  F0AB         	movff	util_beacon_transmission@temperature+2,?_sprintf+6
  4671  002DF6  C0D2  F0AC         	movff	util_beacon_transmission@battery_voltage,?_sprintf+7
  4672  002DFA  C0D3  F0AD         	movff	util_beacon_transmission@battery_voltage+1,?_sprintf+8
  4673  002DFE  C0D4  F0AE         	movff	util_beacon_transmission@battery_voltage+2,?_sprintf+9
  4674  002E02  C0D5  F0AF         	movff	util_beacon_transmission@solar_current,?_sprintf+10
  4675  002E06  C0D6  F0B0         	movff	util_beacon_transmission@solar_current+1,?_sprintf+11
  4676  002E0A  C0D7  F0B1         	movff	util_beacon_transmission@battery_current,?_sprintf+12
  4677  002E0E  C0D8  F0B2         	movff	util_beacon_transmission@battery_current+1,?_sprintf+13
  4678  002E12  EC55  F000         	call	_sprintf	;wreg free
  4679                           
  4680                           ;easat2_util_transmission.c: 36: strcat(BEACON_MESSAGE, BEACON_BUFFER);
  4681  002E16  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4682  002E18  0100               	movlb	0	; () banked
  4683  002E1A  6F71               	movwf	strcat@to& (0+255),b
  4684  002E1C  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4685  002E1E  0100               	movlb	0	; () banked
  4686  002E20  6F72               	movwf	(strcat@to+1)& (0+255),b
  4687  002E22  0E80               	movlw	low util_beacon_transmission@BEACON_BUFFER
  4688  002E24  0100               	movlb	0	; () banked
  4689  002E26  6F73               	movwf	strcat@from& (0+255),b
  4690  002E28  0E01               	movlw	high util_beacon_transmission@BEACON_BUFFER
  4691  002E2A  0100               	movlb	0	; () banked
  4692  002E2C  6F74               	movwf	(strcat@from+1)& (0+255),b
  4693  002E2E  EC5B  F01C         	call	_strcat	;wreg free
  4694                           
  4695                           ;easat2_util_transmission.c: 41: for (int i = 0; i < strlen(BEACON_MESSAGE); i++) {
  4696  002E32  0E00               	movlw	0
  4697  002E34  0101               	movlb	1	; () banked
  4698  002E36  6FC1               	movwf	(util_beacon_transmission@i+1)& (0+255),b
  4699  002E38  0E00               	movlw	0
  4700  002E3A  6FC0               	movwf	util_beacon_transmission@i& (0+255),b
  4701  002E3C  D00E               	goto	l6126
  4702  002E3E                     l6122:
  4703                           
  4704                           ; BSR set to: 1
  4705                           ;easat2_util_transmission.c: 42: util_transmit_letter(BEACON_MESSAGE[i]);
  4706  002E3E  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4707  002E40  0101               	movlb	1	; () banked
  4708  002E42  25C0               	addwf	util_beacon_transmission@i& (0+255),w,b
  4709  002E44  6ED9               	movwf	fsr2l,c
  4710  002E46  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4711  002E48  0101               	movlb	1	; () banked
  4712  002E4A  21C1               	addwfc	(util_beacon_transmission@i+1)& (0+255),w,b
  4713  002E4C  6EDA               	movwf	fsr2h,c
  4714  002E4E  50DF               	movf	indf2,w,c
  4715  002E50  EC4C  F00C         	call	_util_transmit_letter
  4716  002E54  0101               	movlb	1	; () banked
  4717  002E56  4BC0               	infsnz	util_beacon_transmission@i& (0+255),f,b
  4718  002E58  2BC1               	incf	(util_beacon_transmission@i+1)& (0+255),f,b
  4719  002E5A                     l6126:
  4720                           
  4721                           ; BSR set to: 1
  4722  002E5A  0E00               	movlw	low util_beacon_transmission@BEACON_MESSAGE
  4723  002E5C  0100               	movlb	0	; () banked
  4724  002E5E  6F71               	movwf	strlen@s& (0+255),b
  4725  002E60  0E01               	movlw	high util_beacon_transmission@BEACON_MESSAGE
  4726  002E62  0100               	movlb	0	; () banked
  4727  002E64  6F72               	movwf	(strlen@s+1)& (0+255),b
  4728  002E66  ECBD  F01B         	call	_strlen	;wreg free
  4729  002E6A  0100               	movlb	0	; () banked
  4730  002E6C  5171               	movf	?_strlen& (0+255),w,b
  4731  002E6E  0101               	movlb	1	; () banked
  4732  002E70  5DC0               	subwf	util_beacon_transmission@i& (0+255),w,b
  4733  002E72  0100               	movlb	0	; () banked
  4734  002E74  5172               	movf	(?_strlen+1)& (0+255),w,b
  4735  002E76  0101               	movlb	1	; () banked
  4736  002E78  59C1               	subwfb	(util_beacon_transmission@i+1)& (0+255),w,b
  4737  002E7A  B0D8               	btfsc	status,0,c
  4738  002E7C  0012               	return	
  4739  002E7E  D7DF               	goto	l6122
  4740  002E80                     __end_of_util_beacon_transmission:
  4741                           	opt stack 0
  4742                           tblptru	equ	0xFF8
  4743                           tblptrh	equ	0xFF7
  4744                           tblptrl	equ	0xFF6
  4745                           tablat	equ	0xFF5
  4746                           postinc0	equ	0xFEE
  4747                           wreg	equ	0xFE8
  4748                           postdec1	equ	0xFE5
  4749                           fsr1l	equ	0xFE1
  4750                           indf2	equ	0xFDF
  4751                           postinc2	equ	0xFDE
  4752                           postdec2	equ	0xFDD
  4753                           fsr2h	equ	0xFDA
  4754                           fsr2l	equ	0xFD9
  4755                           status	equ	0xFD8
  4756                           
  4757 ;; *************** function _util_transmit_letter *****************
  4758 ;; Defined at:
  4759 ;;		line 52 in file "easat2_util_transmission.c"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;  letter          1    wreg     unsigned char 
  4762 ;; Auto vars:     Size  Location     Type
  4763 ;;  letter          1   42[COMRAM] unsigned char 
  4764 ;; Return value:  Size  Location     Type
  4765 ;;                  1    wreg      void 
  4766 ;; Registers used:
  4767 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4768 ;; Tracked objects:
  4769 ;;		On entry : 0/0
  4770 ;;		On exit  : 0/0
  4771 ;;		Unchanged: 0/0
  4772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4773 ;;      Params:         0       0       0       0       0       0       0
  4774 ;;      Locals:         1       0       0       0       0       0       0
  4775 ;;      Temps:          0       0       0       0       0       0       0
  4776 ;;      Totals:         1       0       0       0       0       0       0
  4777 ;;Total ram usage:        1 bytes
  4778 ;; Hardware stack levels used:    1
  4779 ;; Hardware stack levels required when called:    7
  4780 ;; This function calls:
  4781 ;;		_util_transmit_morse_sequence
  4782 ;;		_util_transmit_space_between_letters
  4783 ;;		_util_transmit_space_between_words
  4784 ;; This function is called by:
  4785 ;;		_util_beacon_transmission
  4786 ;; This function uses a non-reentrant model
  4787 ;;
  4788                           
  4789                           	psect	text18
  4790  001898                     __ptext18:
  4791                           	opt stack 0
  4792  001898                     _util_transmit_letter:
  4793                           	opt stack 21
  4794                           
  4795                           ; BSR set to: 1
  4796                           ;incstack = 0
  4797                           ;util_transmit_letter@letter stored from wreg
  4798  001898  6E2B               	movwf	util_transmit_letter@letter,c
  4799                           
  4800                           ;easat2_util_transmission.c: 54: switch (letter) {
  4801  00189A  D174               	goto	l5848
  4802  00189C                     l5762:
  4803                           
  4804                           ;easat2_util_transmission.c: 60: util_transmit_morse_sequence((char*)".-");
  4805  00189C  0EE8               	movlw	low (STR_19+2)
  4806  00189E  0100               	movlb	0	; () banked
  4807  0018A0  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4808  0018A2  0E7F               	movlw	high (STR_19+2)
  4809  0018A4  0100               	movlb	0	; () banked
  4810  0018A6  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4811  0018A8  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4812                           
  4813                           ;easat2_util_transmission.c: 61: break;
  4814  0018AC  D1EA               	goto	l5850
  4815  0018AE                     l5764:
  4816                           
  4817                           ;easat2_util_transmission.c: 63: util_transmit_morse_sequence((char*)"-...");
  4818  0018AE  0ED0               	movlw	low (STR_36+1)
  4819  0018B0  0100               	movlb	0	; () banked
  4820  0018B2  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4821  0018B4  0E7F               	movlw	high (STR_36+1)
  4822  0018B6  0100               	movlb	0	; () banked
  4823  0018B8  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4824  0018BA  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4825                           
  4826                           ;easat2_util_transmission.c: 64: break;
  4827  0018BE  D1E1               	goto	l5850
  4828  0018C0                     l5766:
  4829                           
  4830                           ;easat2_util_transmission.c: 66: util_transmit_morse_sequence((char*)"-.-.");
  4831  0018C0  0EF5               	movlw	low STR_5
  4832  0018C2  0100               	movlb	0	; () banked
  4833  0018C4  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4834  0018C6  0E7F               	movlw	high STR_5
  4835  0018C8  0100               	movlb	0	; () banked
  4836  0018CA  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4837  0018CC  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4838                           
  4839                           ;easat2_util_transmission.c: 67: break;
  4840  0018D0  D1D8               	goto	l5850
  4841  0018D2                     l5768:
  4842                           
  4843                           ;easat2_util_transmission.c: 69: util_transmit_morse_sequence((char*)"-..");
  4844  0018D2  0ECB               	movlw	low (STR_37+2)
  4845  0018D4  0100               	movlb	0	; () banked
  4846  0018D6  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4847  0018D8  0E7F               	movlw	high (STR_37+2)
  4848  0018DA  0100               	movlb	0	; () banked
  4849  0018DC  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4850  0018DE  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4851                           
  4852                           ;easat2_util_transmission.c: 70: break;
  4853  0018E2  D1CF               	goto	l5850
  4854  0018E4                     l5770:
  4855                           
  4856                           ;easat2_util_transmission.c: 72: util_transmit_morse_sequence((char*)".");
  4857  0018E4  0EC1               	movlw	low (STR_38+4)
  4858  0018E6  0100               	movlb	0	; () banked
  4859  0018E8  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4860  0018EA  0E7F               	movlw	high (STR_38+4)
  4861  0018EC  0100               	movlb	0	; () banked
  4862  0018EE  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4863  0018F0  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4864                           
  4865                           ;easat2_util_transmission.c: 73: break;
  4866  0018F4  D1C6               	goto	l5850
  4867  0018F6                     l5772:
  4868                           
  4869                           ;easat2_util_transmission.c: 75: util_transmit_morse_sequence((char*)"..-.");
  4870  0018F6  0EC4               	movlw	low (STR_41+1)
  4871  0018F8  0100               	movlb	0	; () banked
  4872  0018FA  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4873  0018FC  0E7F               	movlw	high (STR_41+1)
  4874  0018FE  0100               	movlb	0	; () banked
  4875  001900  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4876  001902  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4877                           
  4878                           ;easat2_util_transmission.c: 76: break;
  4879  001906  D1BD               	goto	l5850
  4880  001908                     l5774:
  4881                           
  4882                           ;easat2_util_transmission.c: 78: util_transmit_morse_sequence((char*)"--.");
  4883  001908  0EBF               	movlw	low (STR_38+2)
  4884  00190A  0100               	movlb	0	; () banked
  4885  00190C  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4886  00190E  0E7F               	movlw	high (STR_38+2)
  4887  001910  0100               	movlb	0	; () banked
  4888  001912  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4889  001914  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4890                           
  4891                           ;easat2_util_transmission.c: 79: break;
  4892  001918  D1B4               	goto	l5850
  4893  00191A                     l5776:
  4894                           
  4895                           ;easat2_util_transmission.c: 81: util_transmit_morse_sequence((char*)"....");
  4896  00191A  0ED6               	movlw	low (STR_35+1)
  4897  00191C  0100               	movlb	0	; () banked
  4898  00191E  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4899  001920  0E7F               	movlw	high (STR_35+1)
  4900  001922  0100               	movlb	0	; () banked
  4901  001924  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4902  001926  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4903                           
  4904                           ;easat2_util_transmission.c: 82: break;
  4905  00192A  D1AB               	goto	l5850
  4906  00192C                     l5778:
  4907                           
  4908                           ;easat2_util_transmission.c: 84: util_transmit_morse_sequence((char*)"..");
  4909  00192C  0ECC               	movlw	low (STR_37+3)
  4910  00192E  0100               	movlb	0	; () banked
  4911  001930  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4912  001932  0E7F               	movlw	high (STR_37+3)
  4913  001934  0100               	movlb	0	; () banked
  4914  001936  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4915  001938  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4916                           
  4917                           ;easat2_util_transmission.c: 85: break;
  4918  00193C  D1A2               	goto	l5850
  4919  00193E                     l5780:
  4920                           
  4921                           ;easat2_util_transmission.c: 87: util_transmit_morse_sequence((char*)".---");
  4922  00193E  0EB2               	movlw	low (STR_31+1)
  4923  001940  0100               	movlb	0	; () banked
  4924  001942  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4925  001944  0E7F               	movlw	high (STR_31+1)
  4926  001946  0100               	movlb	0	; () banked
  4927  001948  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4928  00194A  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4929                           
  4930                           ;easat2_util_transmission.c: 88: break;
  4931  00194E  D199               	goto	l5850
  4932  001950                     l5782:
  4933                           
  4934                           ;easat2_util_transmission.c: 90: util_transmit_morse_sequence((char*)"-.-");
  4935  001950  0EE7               	movlw	low (STR_19+1)
  4936  001952  0100               	movlb	0	; () banked
  4937  001954  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4938  001956  0E7F               	movlw	high (STR_19+1)
  4939  001958  0100               	movlb	0	; () banked
  4940  00195A  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4941  00195C  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4942                           
  4943                           ;easat2_util_transmission.c: 91: break;
  4944  001960  D190               	goto	l5850
  4945  001962                     l5784:
  4946                           
  4947                           ;easat2_util_transmission.c: 93: util_transmit_morse_sequence((char*)".-..");
  4948  001962  0EFA               	movlw	low STR_14
  4949  001964  0100               	movlb	0	; () banked
  4950  001966  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4951  001968  0E7F               	movlw	high STR_14
  4952  00196A  0100               	movlb	0	; () banked
  4953  00196C  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4954  00196E  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4955                           
  4956                           ;easat2_util_transmission.c: 94: break;
  4957  001972  D187               	goto	l5850
  4958  001974                     l5786:
  4959                           
  4960                           ;easat2_util_transmission.c: 96: util_transmit_morse_sequence((char*)"--");
  4961  001974  0EA8               	movlw	low (STR_29+3)
  4962  001976  0100               	movlb	0	; () banked
  4963  001978  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4964  00197A  0E7F               	movlw	high (STR_29+3)
  4965  00197C  0100               	movlb	0	; () banked
  4966  00197E  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4967  001980  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4968                           
  4969                           ;easat2_util_transmission.c: 97: break;
  4970  001984  D17E               	goto	l5850
  4971  001986                     l5788:
  4972                           
  4973                           ;easat2_util_transmission.c: 99: util_transmit_morse_sequence((char*)"-.");
  4974  001986  0EC0               	movlw	low (STR_38+3)
  4975  001988  0100               	movlb	0	; () banked
  4976  00198A  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4977  00198C  0E7F               	movlw	high (STR_38+3)
  4978  00198E  0100               	movlb	0	; () banked
  4979  001990  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4980  001992  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4981                           
  4982                           ;easat2_util_transmission.c: 100: break;
  4983  001996  D175               	goto	l5850
  4984  001998                     l5790:
  4985                           
  4986                           ;easat2_util_transmission.c: 102: util_transmit_morse_sequence((char*)"---");
  4987  001998  0EA7               	movlw	low (STR_29+2)
  4988  00199A  0100               	movlb	0	; () banked
  4989  00199C  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  4990  00199E  0E7F               	movlw	high (STR_29+2)
  4991  0019A0  0100               	movlb	0	; () banked
  4992  0019A2  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  4993  0019A4  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  4994                           
  4995                           ;easat2_util_transmission.c: 103: break;
  4996  0019A8  D16C               	goto	l5850
  4997  0019AA                     l5792:
  4998                           
  4999                           ;easat2_util_transmission.c: 105: util_transmit_morse_sequence((char*)".--.");
  5000  0019AA  0EF0               	movlw	low STR_18
  5001  0019AC  0100               	movlb	0	; () banked
  5002  0019AE  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5003  0019B0  0E7F               	movlw	high STR_18
  5004  0019B2  0100               	movlb	0	; () banked
  5005  0019B4  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5006  0019B6  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5007                           
  5008                           ;easat2_util_transmission.c: 106: break;
  5009  0019BA  D163               	goto	l5850
  5010  0019BC                     l5794:
  5011                           
  5012                           ;easat2_util_transmission.c: 108: util_transmit_morse_sequence((char*)"--.-");
  5013  0019BC  0EE6               	movlw	low STR_19
  5014  0019BE  0100               	movlb	0	; () banked
  5015  0019C0  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5016  0019C2  0E7F               	movlw	high STR_19
  5017  0019C4  0100               	movlb	0	; () banked
  5018  0019C6  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5019  0019C8  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5020                           
  5021                           ;easat2_util_transmission.c: 109: break;
  5022  0019CC  D15A               	goto	l5850
  5023  0019CE                     l5796:
  5024                           
  5025                           ;easat2_util_transmission.c: 111: util_transmit_morse_sequence((char*)".-.");
  5026  0019CE  0EF6               	movlw	low (STR_5+1)
  5027  0019D0  0100               	movlb	0	; () banked
  5028  0019D2  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5029  0019D4  0E7F               	movlw	high (STR_5+1)
  5030  0019D6  0100               	movlb	0	; () banked
  5031  0019D8  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5032  0019DA  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5033                           
  5034                           ;easat2_util_transmission.c: 112: break;
  5035  0019DE  D151               	goto	l5850
  5036  0019E0                     l5798:
  5037                           
  5038                           ;easat2_util_transmission.c: 114: util_transmit_morse_sequence((char*)"...");
  5039  0019E0  0ED1               	movlw	low (STR_36+2)
  5040  0019E2  0100               	movlb	0	; () banked
  5041  0019E4  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5042  0019E6  0E7F               	movlw	high (STR_36+2)
  5043  0019E8  0100               	movlb	0	; () banked
  5044  0019EA  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5045  0019EC  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5046                           
  5047                           ;easat2_util_transmission.c: 115: break;
  5048  0019F0  D148               	goto	l5850
  5049  0019F2                     l5800:
  5050                           
  5051                           ;easat2_util_transmission.c: 117: util_transmit_morse_sequence((char*)"-");
  5052  0019F2  0EA9               	movlw	low (STR_29+4)
  5053  0019F4  0100               	movlb	0	; () banked
  5054  0019F6  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5055  0019F8  0E7F               	movlw	high (STR_29+4)
  5056  0019FA  0100               	movlb	0	; () banked
  5057  0019FC  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5058  0019FE  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5059                           
  5060                           ;easat2_util_transmission.c: 118: break;
  5061  001A02  D13F               	goto	l5850
  5062  001A04                     l5802:
  5063                           
  5064                           ;easat2_util_transmission.c: 120: util_transmit_morse_sequence((char*)"..-");
  5065  001A04  0EEC               	movlw	low (STR_26+1)
  5066  001A06  0100               	movlb	0	; () banked
  5067  001A08  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5068  001A0A  0E7F               	movlw	high (STR_26+1)
  5069  001A0C  0100               	movlb	0	; () banked
  5070  001A0E  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5071  001A10  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5072                           
  5073                           ;easat2_util_transmission.c: 121: break;
  5074  001A14  D136               	goto	l5850
  5075  001A16                     l5804:
  5076                           
  5077                           ;easat2_util_transmission.c: 123: util_transmit_morse_sequence((char*)"...-");
  5078  001A16  0E92               	movlw	low (STR_43+2)
  5079  001A18  0100               	movlb	0	; () banked
  5080  001A1A  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5081  001A1C  0E7F               	movlw	high (STR_43+2)
  5082  001A1E  0100               	movlb	0	; () banked
  5083  001A20  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5084  001A22  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5085                           
  5086                           ;easat2_util_transmission.c: 124: break;
  5087  001A26  D12D               	goto	l5850
  5088  001A28                     l5806:
  5089                           
  5090                           ;easat2_util_transmission.c: 126: util_transmit_morse_sequence((char*)".--");
  5091  001A28  0EE2               	movlw	low (STR_27+1)
  5092  001A2A  0100               	movlb	0	; () banked
  5093  001A2C  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5094  001A2E  0E7F               	movlw	high (STR_27+1)
  5095  001A30  0100               	movlb	0	; () banked
  5096  001A32  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5097  001A34  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5098                           
  5099                           ;easat2_util_transmission.c: 127: break;
  5100  001A38  D124               	goto	l5850
  5101  001A3A                     l5808:
  5102                           
  5103                           ;easat2_util_transmission.c: 129: util_transmit_morse_sequence((char*)"-..-");
  5104  001A3A  0EEB               	movlw	low STR_26
  5105  001A3C  0100               	movlb	0	; () banked
  5106  001A3E  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5107  001A40  0E7F               	movlw	high STR_26
  5108  001A42  0100               	movlb	0	; () banked
  5109  001A44  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5110  001A46  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5111                           
  5112                           ;easat2_util_transmission.c: 130: break;
  5113  001A4A  D11B               	goto	l5850
  5114  001A4C                     l5810:
  5115                           
  5116                           ;easat2_util_transmission.c: 132: util_transmit_morse_sequence((char*)"-.--");
  5117  001A4C  0EE1               	movlw	low STR_27
  5118  001A4E  0100               	movlb	0	; () banked
  5119  001A50  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5120  001A52  0E7F               	movlw	high STR_27
  5121  001A54  0100               	movlb	0	; () banked
  5122  001A56  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5123  001A58  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5124                           
  5125                           ;easat2_util_transmission.c: 133: break;
  5126  001A5C  D112               	goto	l5850
  5127  001A5E                     l5812:
  5128                           
  5129                           ;easat2_util_transmission.c: 135: util_transmit_morse_sequence((char*)"--..");
  5130  001A5E  0ECA               	movlw	low (STR_37+1)
  5131  001A60  0100               	movlb	0	; () banked
  5132  001A62  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5133  001A64  0E7F               	movlw	high (STR_37+1)
  5134  001A66  0100               	movlb	0	; () banked
  5135  001A68  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5136  001A6A  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5137                           
  5138                           ;easat2_util_transmission.c: 136: break;
  5139  001A6E  D109               	goto	l5850
  5140  001A70                     l5814:
  5141                           
  5142                           ;easat2_util_transmission.c: 138: util_transmit_morse_sequence((char*)"-----");
  5143  001A70  0EA5               	movlw	low STR_29
  5144  001A72  0100               	movlb	0	; () banked
  5145  001A74  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5146  001A76  0E7F               	movlw	high STR_29
  5147  001A78  0100               	movlb	0	; () banked
  5148  001A7A  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5149  001A7C  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5150                           
  5151                           ;easat2_util_transmission.c: 139: break;
  5152  001A80  D100               	goto	l5850
  5153  001A82                     l5816:
  5154                           
  5155                           ;easat2_util_transmission.c: 141: util_transmit_morse_sequence((char*)".----");
  5156  001A82  0EAB               	movlw	low STR_30
  5157  001A84  0100               	movlb	0	; () banked
  5158  001A86  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5159  001A88  0E7F               	movlw	high STR_30
  5160  001A8A  0100               	movlb	0	; () banked
  5161  001A8C  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5162  001A8E  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5163                           
  5164                           ;easat2_util_transmission.c: 142: break;
  5165  001A92  D0F7               	goto	l5850
  5166  001A94                     l5818:
  5167                           
  5168                           ;easat2_util_transmission.c: 144: util_transmit_morse_sequence((char*)"..---");
  5169  001A94  0EB1               	movlw	low STR_31
  5170  001A96  0100               	movlb	0	; () banked
  5171  001A98  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5172  001A9A  0E7F               	movlw	high STR_31
  5173  001A9C  0100               	movlb	0	; () banked
  5174  001A9E  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5175  001AA0  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5176                           
  5177                           ;easat2_util_transmission.c: 145: break;
  5178  001AA4  D0EE               	goto	l5850
  5179  001AA6                     l5820:
  5180                           
  5181                           ;easat2_util_transmission.c: 147: util_transmit_morse_sequence((char*)"...--");
  5182  001AA6  0EB7               	movlw	low STR_32
  5183  001AA8  0100               	movlb	0	; () banked
  5184  001AAA  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5185  001AAC  0E7F               	movlw	high STR_32
  5186  001AAE  0100               	movlb	0	; () banked
  5187  001AB0  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5188  001AB2  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5189                           
  5190                           ;easat2_util_transmission.c: 148: break;
  5191  001AB6  D0E5               	goto	l5850
  5192  001AB8                     l5822:
  5193                           
  5194                           ;easat2_util_transmission.c: 150: util_transmit_morse_sequence((char*)"....-");
  5195  001AB8  0E91               	movlw	low (STR_43+1)
  5196  001ABA  0100               	movlb	0	; () banked
  5197  001ABC  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5198  001ABE  0E7F               	movlw	high (STR_43+1)
  5199  001AC0  0100               	movlb	0	; () banked
  5200  001AC2  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5201  001AC4  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5202                           
  5203                           ;easat2_util_transmission.c: 151: break;
  5204  001AC8  D0DC               	goto	l5850
  5205  001ACA                     l5824:
  5206                           
  5207                           ;easat2_util_transmission.c: 153: util_transmit_morse_sequence((char*)".....");
  5208  001ACA  0EDB               	movlw	low STR_34
  5209  001ACC  0100               	movlb	0	; () banked
  5210  001ACE  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5211  001AD0  0E7F               	movlw	high STR_34
  5212  001AD2  0100               	movlb	0	; () banked
  5213  001AD4  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5214  001AD6  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5215                           
  5216                           ;easat2_util_transmission.c: 154: break;
  5217  001ADA  D0D3               	goto	l5850
  5218  001ADC                     l5826:
  5219                           
  5220                           ;easat2_util_transmission.c: 156: util_transmit_morse_sequence((char*)"-....");
  5221  001ADC  0ED5               	movlw	low STR_35
  5222  001ADE  0100               	movlb	0	; () banked
  5223  001AE0  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5224  001AE2  0E7F               	movlw	high STR_35
  5225  001AE4  0100               	movlb	0	; () banked
  5226  001AE6  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5227  001AE8  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5228                           
  5229                           ;easat2_util_transmission.c: 157: break;
  5230  001AEC  D0CA               	goto	l5850
  5231  001AEE                     l5828:
  5232                           
  5233                           ;easat2_util_transmission.c: 159: util_transmit_morse_sequence((char*)"--...");
  5234  001AEE  0ECF               	movlw	low STR_36
  5235  001AF0  0100               	movlb	0	; () banked
  5236  001AF2  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5237  001AF4  0E7F               	movlw	high STR_36
  5238  001AF6  0100               	movlb	0	; () banked
  5239  001AF8  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5240  001AFA  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5241                           
  5242                           ;easat2_util_transmission.c: 160: break;
  5243  001AFE  D0C1               	goto	l5850
  5244  001B00                     l5830:
  5245                           
  5246                           ;easat2_util_transmission.c: 162: util_transmit_morse_sequence((char*)"---..");
  5247  001B00  0EC9               	movlw	low STR_37
  5248  001B02  0100               	movlb	0	; () banked
  5249  001B04  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5250  001B06  0E7F               	movlw	high STR_37
  5251  001B08  0100               	movlb	0	; () banked
  5252  001B0A  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5253  001B0C  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5254                           
  5255                           ;easat2_util_transmission.c: 163: break;
  5256  001B10  D0B8               	goto	l5850
  5257  001B12                     l5832:
  5258                           
  5259                           ;easat2_util_transmission.c: 165: util_transmit_morse_sequence((char*)"----.");
  5260  001B12  0EBD               	movlw	low STR_38
  5261  001B14  0100               	movlb	0	; () banked
  5262  001B16  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5263  001B18  0E7F               	movlw	high STR_38
  5264  001B1A  0100               	movlb	0	; () banked
  5265  001B1C  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5266  001B1E  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5267                           
  5268                           ;easat2_util_transmission.c: 166: break;
  5269  001B22  D0AF               	goto	l5850
  5270  001B24                     l5834:
  5271                           
  5272                           ;easat2_util_transmission.c: 168: util_transmit_morse_sequence((char*)"--..--");
  5273  001B24  0E82               	movlw	low STR_39
  5274  001B26  0100               	movlb	0	; () banked
  5275  001B28  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5276  001B2A  0E7F               	movlw	high STR_39
  5277  001B2C  0100               	movlb	0	; () banked
  5278  001B2E  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5279  001B30  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5280                           
  5281                           ;easat2_util_transmission.c: 169: break;
  5282  001B34  D0A6               	goto	l5850
  5283  001B36                     l5836:
  5284                           
  5285                           ;easat2_util_transmission.c: 171: util_transmit_morse_sequence((char*)"..--..");
  5286  001B36  0E97               	movlw	low STR_40
  5287  001B38  0100               	movlb	0	; () banked
  5288  001B3A  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5289  001B3C  0E7F               	movlw	high STR_40
  5290  001B3E  0100               	movlb	0	; () banked
  5291  001B40  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5292  001B42  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5293                           
  5294                           ;easat2_util_transmission.c: 172: break;
  5295  001B46  D09D               	goto	l5850
  5296  001B48                     l5838:
  5297                           
  5298                           ;easat2_util_transmission.c: 174: util_transmit_morse_sequence((char*)"-..-.");
  5299  001B48  0EC3               	movlw	low STR_41
  5300  001B4A  0100               	movlb	0	; () banked
  5301  001B4C  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5302  001B4E  0E7F               	movlw	high STR_41
  5303  001B50  0100               	movlb	0	; () banked
  5304  001B52  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5305  001B54  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5306                           
  5307                           ;easat2_util_transmission.c: 175: break;
  5308  001B58  D094               	goto	l5850
  5309  001B5A                     l5840:
  5310                           
  5311                           ;easat2_util_transmission.c: 177: util_transmit_morse_sequence((char*)".-.-.-");
  5312  001B5A  0E89               	movlw	low STR_42
  5313  001B5C  0100               	movlb	0	; () banked
  5314  001B5E  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5315  001B60  0E7F               	movlw	high STR_42
  5316  001B62  0100               	movlb	0	; () banked
  5317  001B64  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5318  001B66  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5319                           
  5320                           ;easat2_util_transmission.c: 178: break;
  5321  001B6A  D08B               	goto	l5850
  5322  001B6C                     l5842:
  5323                           
  5324                           ;easat2_util_transmission.c: 180: util_transmit_morse_sequence((char*)"-....-");
  5325  001B6C  0E90               	movlw	low STR_43
  5326  001B6E  0100               	movlb	0	; () banked
  5327  001B70  6F73               	movwf	util_transmit_morse_sequence@morse_sequence& (0+255),b
  5328  001B72  0E7F               	movlw	high STR_43
  5329  001B74  0100               	movlb	0	; () banked
  5330  001B76  6F74               	movwf	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),b
  5331  001B78  EC8B  F01B         	call	_util_transmit_morse_sequence	;wreg free
  5332                           
  5333                           ;easat2_util_transmission.c: 181: break;
  5334  001B7C  D082               	goto	l5850
  5335  001B7E                     l5844:
  5336                           
  5337                           ;easat2_util_transmission.c: 183: util_transmit_space_between_words();
  5338  001B7E  EC3C  F01E         	call	_util_transmit_space_between_words	;wreg free
  5339                           
  5340                           ;easat2_util_transmission.c: 188: }
  5341                           
  5342                           ;easat2_util_transmission.c: 186: break;
  5343                           
  5344                           ;easat2_util_transmission.c: 185: default:
  5345                           
  5346                           ;easat2_util_transmission.c: 184: break;
  5347  001B82  D07F               	goto	l5850
  5348  001B84                     l5848:
  5349  001B84  502B               	movf	util_transmit_letter@letter,w,c
  5350                           
  5351                           ; Switch size 1, requested type "space"
  5352                           ; Number of cases is 42, Range of values is 32 to 90
  5353                           ; switch strategies available:
  5354                           ; Name         Instructions Cycles
  5355                           ; simple_byte          127    64 (average)
  5356                           ;	Chosen strategy is simple_byte
  5357  001B86  0A20               	xorlw	32	; case 32
  5358  001B88  B4D8               	btfsc	status,2,c
  5359  001B8A  D7F9               	goto	l5844
  5360  001B8C  0A0C               	xorlw	12	; case 44
  5361  001B8E  B4D8               	btfsc	status,2,c
  5362  001B90  D7C9               	goto	l5834
  5363  001B92  0A01               	xorlw	1	; case 45
  5364  001B94  B4D8               	btfsc	status,2,c
  5365  001B96  D7EA               	goto	l5842
  5366  001B98  0A03               	xorlw	3	; case 46
  5367  001B9A  B4D8               	btfsc	status,2,c
  5368  001B9C  D7DE               	goto	l5840
  5369  001B9E  0A01               	xorlw	1	; case 47
  5370  001BA0  B4D8               	btfsc	status,2,c
  5371  001BA2  D7D2               	goto	l5838
  5372  001BA4  0A1F               	xorlw	31	; case 48
  5373  001BA6  B4D8               	btfsc	status,2,c
  5374  001BA8  D763               	goto	l5814
  5375  001BAA  0A01               	xorlw	1	; case 49
  5376  001BAC  B4D8               	btfsc	status,2,c
  5377  001BAE  D769               	goto	l5816
  5378  001BB0  0A03               	xorlw	3	; case 50
  5379  001BB2  B4D8               	btfsc	status,2,c
  5380  001BB4  D76F               	goto	l5818
  5381  001BB6  0A01               	xorlw	1	; case 51
  5382  001BB8  B4D8               	btfsc	status,2,c
  5383  001BBA  D775               	goto	l5820
  5384  001BBC  0A07               	xorlw	7	; case 52
  5385  001BBE  B4D8               	btfsc	status,2,c
  5386  001BC0  D77B               	goto	l5822
  5387  001BC2  0A01               	xorlw	1	; case 53
  5388  001BC4  B4D8               	btfsc	status,2,c
  5389  001BC6  D781               	goto	l5824
  5390  001BC8  0A03               	xorlw	3	; case 54
  5391  001BCA  B4D8               	btfsc	status,2,c
  5392  001BCC  D787               	goto	l5826
  5393  001BCE  0A01               	xorlw	1	; case 55
  5394  001BD0  B4D8               	btfsc	status,2,c
  5395  001BD2  D78D               	goto	l5828
  5396  001BD4  0A0F               	xorlw	15	; case 56
  5397  001BD6  B4D8               	btfsc	status,2,c
  5398  001BD8  D793               	goto	l5830
  5399  001BDA  0A01               	xorlw	1	; case 57
  5400  001BDC  B4D8               	btfsc	status,2,c
  5401  001BDE  D799               	goto	l5832
  5402  001BE0  0A06               	xorlw	6	; case 63
  5403  001BE2  B4D8               	btfsc	status,2,c
  5404  001BE4  D7A8               	goto	l5836
  5405  001BE6  0A7E               	xorlw	126	; case 65
  5406  001BE8  B4D8               	btfsc	status,2,c
  5407  001BEA  D658               	goto	l5762
  5408  001BEC  0A03               	xorlw	3	; case 66
  5409  001BEE  B4D8               	btfsc	status,2,c
  5410  001BF0  D65E               	goto	l5764
  5411  001BF2  0A01               	xorlw	1	; case 67
  5412  001BF4  B4D8               	btfsc	status,2,c
  5413  001BF6  D664               	goto	l5766
  5414  001BF8  0A07               	xorlw	7	; case 68
  5415  001BFA  B4D8               	btfsc	status,2,c
  5416  001BFC  D66A               	goto	l5768
  5417  001BFE  0A01               	xorlw	1	; case 69
  5418  001C00  B4D8               	btfsc	status,2,c
  5419  001C02  D670               	goto	l5770
  5420  001C04  0A03               	xorlw	3	; case 70
  5421  001C06  B4D8               	btfsc	status,2,c
  5422  001C08  D676               	goto	l5772
  5423  001C0A  0A01               	xorlw	1	; case 71
  5424  001C0C  B4D8               	btfsc	status,2,c
  5425  001C0E  D67C               	goto	l5774
  5426  001C10  0A0F               	xorlw	15	; case 72
  5427  001C12  B4D8               	btfsc	status,2,c
  5428  001C14  D682               	goto	l5776
  5429  001C16  0A01               	xorlw	1	; case 73
  5430  001C18  B4D8               	btfsc	status,2,c
  5431  001C1A  D688               	goto	l5778
  5432  001C1C  0A03               	xorlw	3	; case 74
  5433  001C1E  B4D8               	btfsc	status,2,c
  5434  001C20  D68E               	goto	l5780
  5435  001C22  0A01               	xorlw	1	; case 75
  5436  001C24  B4D8               	btfsc	status,2,c
  5437  001C26  D694               	goto	l5782
  5438  001C28  0A07               	xorlw	7	; case 76
  5439  001C2A  B4D8               	btfsc	status,2,c
  5440  001C2C  D69A               	goto	l5784
  5441  001C2E  0A01               	xorlw	1	; case 77
  5442  001C30  B4D8               	btfsc	status,2,c
  5443  001C32  D6A0               	goto	l5786
  5444  001C34  0A03               	xorlw	3	; case 78
  5445  001C36  B4D8               	btfsc	status,2,c
  5446  001C38  D6A6               	goto	l5788
  5447  001C3A  0A01               	xorlw	1	; case 79
  5448  001C3C  B4D8               	btfsc	status,2,c
  5449  001C3E  D6AC               	goto	l5790
  5450  001C40  0A1F               	xorlw	31	; case 80
  5451  001C42  B4D8               	btfsc	status,2,c
  5452  001C44  D6B2               	goto	l5792
  5453  001C46  0A01               	xorlw	1	; case 81
  5454  001C48  B4D8               	btfsc	status,2,c
  5455  001C4A  D6B8               	goto	l5794
  5456  001C4C  0A03               	xorlw	3	; case 82
  5457  001C4E  B4D8               	btfsc	status,2,c
  5458  001C50  D6BE               	goto	l5796
  5459  001C52  0A01               	xorlw	1	; case 83
  5460  001C54  B4D8               	btfsc	status,2,c
  5461  001C56  D6C4               	goto	l5798
  5462  001C58  0A07               	xorlw	7	; case 84
  5463  001C5A  B4D8               	btfsc	status,2,c
  5464  001C5C  D6CA               	goto	l5800
  5465  001C5E  0A01               	xorlw	1	; case 85
  5466  001C60  B4D8               	btfsc	status,2,c
  5467  001C62  D6D0               	goto	l5802
  5468  001C64  0A03               	xorlw	3	; case 86
  5469  001C66  B4D8               	btfsc	status,2,c
  5470  001C68  D6D6               	goto	l5804
  5471  001C6A  0A01               	xorlw	1	; case 87
  5472  001C6C  B4D8               	btfsc	status,2,c
  5473  001C6E  D6DC               	goto	l5806
  5474  001C70  0A0F               	xorlw	15	; case 88
  5475  001C72  B4D8               	btfsc	status,2,c
  5476  001C74  D6E2               	goto	l5808
  5477  001C76  0A01               	xorlw	1	; case 89
  5478  001C78  B4D8               	btfsc	status,2,c
  5479  001C7A  D6E8               	goto	l5810
  5480  001C7C  0A03               	xorlw	3	; case 90
  5481  001C7E  B4D8               	btfsc	status,2,c
  5482  001C80  D6EE               	goto	l5812
  5483  001C82                     l5850:
  5484                           
  5485                           ;easat2_util_transmission.c: 191: util_transmit_space_between_letters();
  5486  001C82  EC44  F01E         	call	_util_transmit_space_between_letters	;wreg free
  5487  001C86  0012               	return		;funcret
  5488  001C88                     __end_of_util_transmit_letter:
  5489                           	opt stack 0
  5490                           tblptru	equ	0xFF8
  5491                           tblptrh	equ	0xFF7
  5492                           tblptrl	equ	0xFF6
  5493                           tablat	equ	0xFF5
  5494                           postinc0	equ	0xFEE
  5495                           wreg	equ	0xFE8
  5496                           postdec1	equ	0xFE5
  5497                           fsr1l	equ	0xFE1
  5498                           indf2	equ	0xFDF
  5499                           postinc2	equ	0xFDE
  5500                           postdec2	equ	0xFDD
  5501                           fsr2h	equ	0xFDA
  5502                           fsr2l	equ	0xFD9
  5503                           status	equ	0xFD8
  5504                           
  5505 ;; *************** function _util_transmit_space_between_words *****************
  5506 ;; Defined at:
  5507 ;;		line 304 in file "easat2_util_transmission.c"
  5508 ;; Parameters:    Size  Location     Type
  5509 ;;		None
  5510 ;; Auto vars:     Size  Location     Type
  5511 ;;		None
  5512 ;; Return value:  Size  Location     Type
  5513 ;;                  1    wreg      void 
  5514 ;; Registers used:
  5515 ;;		wreg, status,2, status,0, cstack
  5516 ;; Tracked objects:
  5517 ;;		On entry : 0/0
  5518 ;;		On exit  : 0/0
  5519 ;;		Unchanged: 0/0
  5520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5521 ;;      Params:         0       0       0       0       0       0       0
  5522 ;;      Locals:         0       0       0       0       0       0       0
  5523 ;;      Temps:          0       0       0       0       0       0       0
  5524 ;;      Totals:         0       0       0       0       0       0       0
  5525 ;;Total ram usage:        0 bytes
  5526 ;; Hardware stack levels used:    1
  5527 ;; Hardware stack levels required when called:    4
  5528 ;; This function calls:
  5529 ;;		_util_waits_delay_ms
  5530 ;; This function is called by:
  5531 ;;		_util_transmit_letter
  5532 ;; This function uses a non-reentrant model
  5533 ;;
  5534                           
  5535                           	psect	text19
  5536  003C78                     __ptext19:
  5537                           	opt stack 0
  5538  003C78                     _util_transmit_space_between_words:
  5539                           	opt stack 23
  5540                           
  5541                           ;easat2_util_transmission.c: 305: util_waits_delay_ms(7*(int)(2400/32));
  5542                           
  5543                           ;incstack = 0
  5544  003C78  0E02               	movlw	2
  5545  003C7A  0100               	movlb	0	; () banked
  5546  003C7C  6F72               	movwf	(util_waits_delay_ms@ms+1)& (0+255),b
  5547  003C7E  0E0D               	movlw	13
  5548  003C80  6F71               	movwf	util_waits_delay_ms@ms& (0+255),b
  5549  003C82  ECAC  F01D         	call	_util_waits_delay_ms	;wreg free
  5550  003C86  0012               	return		;funcret
  5551  003C88                     __end_of_util_transmit_space_between_words:
  5552                           	opt stack 0
  5553                           tblptru	equ	0xFF8
  5554                           tblptrh	equ	0xFF7
  5555                           tblptrl	equ	0xFF6
  5556                           tablat	equ	0xFF5
  5557                           postinc0	equ	0xFEE
  5558                           wreg	equ	0xFE8
  5559                           postdec1	equ	0xFE5
  5560                           fsr1l	equ	0xFE1
  5561                           indf2	equ	0xFDF
  5562                           postinc2	equ	0xFDE
  5563                           postdec2	equ	0xFDD
  5564                           fsr2h	equ	0xFDA
  5565                           fsr2l	equ	0xFD9
  5566                           status	equ	0xFD8
  5567                           
  5568 ;; *************** function _util_transmit_space_between_letters *****************
  5569 ;; Defined at:
  5570 ;;		line 297 in file "easat2_util_transmission.c"
  5571 ;; Parameters:    Size  Location     Type
  5572 ;;		None
  5573 ;; Auto vars:     Size  Location     Type
  5574 ;;		None
  5575 ;; Return value:  Size  Location     Type
  5576 ;;                  1    wreg      void 
  5577 ;; Registers used:
  5578 ;;		wreg, status,2, status,0, cstack
  5579 ;; Tracked objects:
  5580 ;;		On entry : 0/0
  5581 ;;		On exit  : 0/0
  5582 ;;		Unchanged: 0/0
  5583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5584 ;;      Params:         0       0       0       0       0       0       0
  5585 ;;      Locals:         0       0       0       0       0       0       0
  5586 ;;      Temps:          0       0       0       0       0       0       0
  5587 ;;      Totals:         0       0       0       0       0       0       0
  5588 ;;Total ram usage:        0 bytes
  5589 ;; Hardware stack levels used:    1
  5590 ;; Hardware stack levels required when called:    4
  5591 ;; This function calls:
  5592 ;;		_util_waits_delay_ms
  5593 ;; This function is called by:
  5594 ;;		_util_transmit_letter
  5595 ;; This function uses a non-reentrant model
  5596 ;;
  5597                           
  5598                           	psect	text20
  5599  003C88                     __ptext20:
  5600                           	opt stack 0
  5601  003C88                     _util_transmit_space_between_letters:
  5602                           	opt stack 23
  5603                           
  5604                           ;easat2_util_transmission.c: 298: util_waits_delay_ms(3*(int)(2400/32));
  5605                           
  5606                           ;incstack = 0
  5607  003C88  0E00               	movlw	0
  5608  003C8A  0100               	movlb	0	; () banked
  5609  003C8C  6F72               	movwf	(util_waits_delay_ms@ms+1)& (0+255),b
  5610  003C8E  0EE1               	movlw	225
  5611  003C90  6F71               	movwf	util_waits_delay_ms@ms& (0+255),b
  5612  003C92  ECAC  F01D         	call	_util_waits_delay_ms	;wreg free
  5613  003C96  0012               	return		;funcret
  5614  003C98                     __end_of_util_transmit_space_between_letters:
  5615                           	opt stack 0
  5616                           tblptru	equ	0xFF8
  5617                           tblptrh	equ	0xFF7
  5618                           tblptrl	equ	0xFF6
  5619                           tablat	equ	0xFF5
  5620                           postinc0	equ	0xFEE
  5621                           wreg	equ	0xFE8
  5622                           postdec1	equ	0xFE5
  5623                           fsr1l	equ	0xFE1
  5624                           indf2	equ	0xFDF
  5625                           postinc2	equ	0xFDE
  5626                           postdec2	equ	0xFDD
  5627                           fsr2h	equ	0xFDA
  5628                           fsr2l	equ	0xFD9
  5629                           status	equ	0xFD8
  5630                           
  5631 ;; *************** function _util_transmit_morse_sequence *****************
  5632 ;; Defined at:
  5633 ;;		line 201 in file "easat2_util_transmission.c"
  5634 ;; Parameters:    Size  Location     Type
  5635 ;;  morse_sequen    2   19[BANK0 ] PTR unsigned char 
  5636 ;;		 -> STR_43(7), STR_42(7), STR_41(6), STR_40(7), 
  5637 ;;		 -> STR_39(7), STR_38(6), STR_37(6), STR_36(6), 
  5638 ;;		 -> STR_35(6), STR_34(6), STR_33(6), STR_32(6), 
  5639 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_28(5), 
  5640 ;;		 -> STR_27(5), STR_26(5), STR_25(4), STR_24(5), 
  5641 ;;		 -> STR_23(4), STR_22(2), STR_21(4), STR_20(4), 
  5642 ;;		 -> STR_19(5), STR_18(5), STR_17(4), STR_16(3), 
  5643 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_12(5), 
  5644 ;;		 -> STR_11(3), STR_10(5), STR_9(4), STR_8(5), 
  5645 ;;		 -> STR_7(2), STR_6(4), STR_5(5), STR_4(5), 
  5646 ;;		 -> STR_3(3), 
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;  i               2   40[COMRAM] int 
  5649 ;; Return value:  Size  Location     Type
  5650 ;;                  1    wreg      void 
  5651 ;; Registers used:
  5652 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5653 ;; Tracked objects:
  5654 ;;		On entry : 0/0
  5655 ;;		On exit  : 0/0
  5656 ;;		Unchanged: 0/0
  5657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5658 ;;      Params:         0       2       0       0       0       0       0
  5659 ;;      Locals:         2       0       0       0       0       0       0
  5660 ;;      Temps:          2       0       0       0       0       0       0
  5661 ;;      Totals:         4       2       0       0       0       0       0
  5662 ;;Total ram usage:        6 bytes
  5663 ;; Hardware stack levels used:    1
  5664 ;; Hardware stack levels required when called:    6
  5665 ;; This function calls:
  5666 ;;		_strlen
  5667 ;;		_util_transmit_dash
  5668 ;;		_util_transmit_dot
  5669 ;;		_util_transmit_space_between_dots_dashes
  5670 ;; This function is called by:
  5671 ;;		_util_transmit_letter
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           	psect	text21
  5676  003716                     __ptext21:
  5677                           	opt stack 0
  5678  003716                     _util_transmit_morse_sequence:
  5679                           	opt stack 21
  5680                           
  5681                           ;easat2_util_transmission.c: 205: for (int i = 0; i < strlen(morse_sequence); i++) {
  5682                           
  5683                           ;incstack = 0
  5684  003716  0E00               	movlw	0
  5685  003718  6E2A               	movwf	util_transmit_morse_sequence@i+1,c
  5686  00371A  0E00               	movlw	0
  5687  00371C  6E29               	movwf	util_transmit_morse_sequence@i,c
  5688  00371E  D01E               	goto	l5082
  5689  003720                     l5070:
  5690                           
  5691                           ;easat2_util_transmission.c: 210: util_transmit_dot();
  5692  003720  EC14  F01D         	call	_util_transmit_dot	;wreg free
  5693                           
  5694                           ;easat2_util_transmission.c: 211: break;
  5695  003724  D017               	goto	l5078
  5696  003726                     l5072:
  5697                           
  5698                           ;easat2_util_transmission.c: 213: util_transmit_dash();
  5699  003726  EC2E  F01D         	call	_util_transmit_dash	;wreg free
  5700                           
  5701                           ;easat2_util_transmission.c: 217: }
  5702                           
  5703                           ;easat2_util_transmission.c: 216: break;
  5704                           
  5705                           ;easat2_util_transmission.c: 215: default:
  5706                           
  5707                           ;easat2_util_transmission.c: 214: break;
  5708  00372A  D014               	goto	l5078
  5709  00372C                     l5076:
  5710  00372C  5029               	movf	util_transmit_morse_sequence@i,w,c
  5711  00372E  0100               	movlb	0	; () banked
  5712  003730  2573               	addwf	util_transmit_morse_sequence@morse_sequence& (0+255),w,b
  5713  003732  6E27               	movwf	??_util_transmit_morse_sequence& (0+255),c
  5714  003734  502A               	movf	util_transmit_morse_sequence@i+1,w,c
  5715  003736  0100               	movlb	0	; () banked
  5716  003738  2174               	addwfc	(util_transmit_morse_sequence@morse_sequence+1)& (0+255),w,b
  5717  00373A  6E28               	movwf	(??_util_transmit_morse_sequence+1)& (0+255),c
  5718  00373C  C027  FFF6         	movff	??_util_transmit_morse_sequence,tblptrl
  5719  003740  C028  FFF7         	movff	??_util_transmit_morse_sequence+1,tblptrh
  5720  003744                     	if	0	;tblptru may be non-zero
  5721  003744                     	endif
  5722  003744                     	if	0	;tblptru may be non-zero
  5723  003744                     	endif
  5724  003744  0008               	tblrd		*
  5725  003746  50F5               	movf	tablat,w,c
  5726                           
  5727                           ; Switch size 1, requested type "space"
  5728                           ; Number of cases is 2, Range of values is 45 to 46
  5729                           ; switch strategies available:
  5730                           ; Name         Instructions Cycles
  5731                           ; simple_byte            7     4 (average)
  5732                           ;	Chosen strategy is simple_byte
  5733  003748  0A2D               	xorlw	45	; case 45
  5734  00374A  B4D8               	btfsc	status,2,c
  5735  00374C  D7EC               	goto	l5072
  5736  00374E  0A03               	xorlw	3	; case 46
  5737  003750  B4D8               	btfsc	status,2,c
  5738  003752  D7E6               	goto	l5070
  5739  003754                     l5078:
  5740                           
  5741                           ;easat2_util_transmission.c: 220: util_transmit_space_between_dots_dashes();
  5742  003754  EC4C  F01E         	call	_util_transmit_space_between_dots_dashes	;wreg free
  5743  003758  4A29               	infsnz	util_transmit_morse_sequence@i,f,c
  5744  00375A  2A2A               	incf	util_transmit_morse_sequence@i+1,f,c
  5745  00375C                     l5082:
  5746  00375C  C073  F071         	movff	util_transmit_morse_sequence@morse_sequence,strlen@s
  5747  003760  C074  F072         	movff	util_transmit_morse_sequence@morse_sequence+1,strlen@s+1
  5748  003764  ECBD  F01B         	call	_strlen	;wreg free
  5749  003768  0100               	movlb	0	; () banked
  5750  00376A  5171               	movf	?_strlen& (0+255),w,b
  5751  00376C  5C29               	subwf	util_transmit_morse_sequence@i,w,c
  5752  00376E  0100               	movlb	0	; () banked
  5753  003770  5172               	movf	(?_strlen+1)& (0+255),w,b
  5754  003772  582A               	subwfb	util_transmit_morse_sequence@i+1,w,c
  5755  003774  B0D8               	btfsc	status,0,c
  5756  003776  0012               	return	
  5757  003778  D7D9               	goto	l5076
  5758  00377A                     __end_of_util_transmit_morse_sequence:
  5759                           	opt stack 0
  5760                           tblptru	equ	0xFF8
  5761                           tblptrh	equ	0xFF7
  5762                           tblptrl	equ	0xFF6
  5763                           tablat	equ	0xFF5
  5764                           postinc0	equ	0xFEE
  5765                           wreg	equ	0xFE8
  5766                           postdec1	equ	0xFE5
  5767                           fsr1l	equ	0xFE1
  5768                           indf2	equ	0xFDF
  5769                           postinc2	equ	0xFDE
  5770                           postdec2	equ	0xFDD
  5771                           fsr2h	equ	0xFDA
  5772                           fsr2l	equ	0xFD9
  5773                           status	equ	0xFD8
  5774                           
  5775 ;; *************** function _util_transmit_space_between_dots_dashes *****************
  5776 ;; Defined at:
  5777 ;;		line 289 in file "easat2_util_transmission.c"
  5778 ;; Parameters:    Size  Location     Type
  5779 ;;		None
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;		None
  5782 ;; Return value:  Size  Location     Type
  5783 ;;                  1    wreg      void 
  5784 ;; Registers used:
  5785 ;;		wreg, status,2, status,0, cstack
  5786 ;; Tracked objects:
  5787 ;;		On entry : 0/0
  5788 ;;		On exit  : 0/0
  5789 ;;		Unchanged: 0/0
  5790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5791 ;;      Params:         0       0       0       0       0       0       0
  5792 ;;      Locals:         0       0       0       0       0       0       0
  5793 ;;      Temps:          0       0       0       0       0       0       0
  5794 ;;      Totals:         0       0       0       0       0       0       0
  5795 ;;Total ram usage:        0 bytes
  5796 ;; Hardware stack levels used:    1
  5797 ;; Hardware stack levels required when called:    4
  5798 ;; This function calls:
  5799 ;;		_util_waits_delay_ms
  5800 ;; This function is called by:
  5801 ;;		_util_transmit_morse_sequence
  5802 ;; This function uses a non-reentrant model
  5803 ;;
  5804                           
  5805                           	psect	text22
  5806  003C98                     __ptext22:
  5807                           	opt stack 0
  5808  003C98                     _util_transmit_space_between_dots_dashes:
  5809                           	opt stack 22
  5810                           
  5811                           ;easat2_util_transmission.c: 290: util_waits_delay_ms((int)(2400/32));
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;incstack = 0
  5815  003C98  0E00               	movlw	0
  5816  003C9A  0100               	movlb	0	; () banked
  5817  003C9C  6F72               	movwf	(util_waits_delay_ms@ms+1)& (0+255),b
  5818  003C9E  0E4B               	movlw	75
  5819  003CA0  6F71               	movwf	util_waits_delay_ms@ms& (0+255),b
  5820  003CA2  ECAC  F01D         	call	_util_waits_delay_ms	;wreg free
  5821  003CA6  0012               	return		;funcret
  5822  003CA8                     __end_of_util_transmit_space_between_dots_dashes:
  5823                           	opt stack 0
  5824                           tblptru	equ	0xFF8
  5825                           tblptrh	equ	0xFF7
  5826                           tblptrl	equ	0xFF6
  5827                           tablat	equ	0xFF5
  5828                           postinc0	equ	0xFEE
  5829                           wreg	equ	0xFE8
  5830                           postdec1	equ	0xFE5
  5831                           fsr1l	equ	0xFE1
  5832                           indf2	equ	0xFDF
  5833                           postinc2	equ	0xFDE
  5834                           postdec2	equ	0xFDD
  5835                           fsr2h	equ	0xFDA
  5836                           fsr2l	equ	0xFD9
  5837                           status	equ	0xFD8
  5838                           
  5839 ;; *************** function _util_transmit_dot *****************
  5840 ;; Defined at:
  5841 ;;		line 231 in file "easat2_util_transmission.c"
  5842 ;; Parameters:    Size  Location     Type
  5843 ;;		None
  5844 ;; Auto vars:     Size  Location     Type
  5845 ;;  i               2   36[COMRAM] int 
  5846 ;; Return value:  Size  Location     Type
  5847 ;;                  1    wreg      void 
  5848 ;; Registers used:
  5849 ;;		wreg, status,2, status,0, cstack
  5850 ;; Tracked objects:
  5851 ;;		On entry : 0/0
  5852 ;;		On exit  : 0/0
  5853 ;;		Unchanged: 0/0
  5854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5855 ;;      Params:         0       0       0       0       0       0       0
  5856 ;;      Locals:         2       0       0       0       0       0       0
  5857 ;;      Temps:          0       0       0       0       0       0       0
  5858 ;;      Totals:         2       0       0       0       0       0       0
  5859 ;;Total ram usage:        2 bytes
  5860 ;; Hardware stack levels used:    1
  5861 ;; Hardware stack levels required when called:    5
  5862 ;; This function calls:
  5863 ;;		_util_transmit_buzzer_1ms_cycle
  5864 ;;		_util_waits_delay_ms
  5865 ;; This function is called by:
  5866 ;;		_util_transmit_morse_sequence
  5867 ;; This function uses a non-reentrant model
  5868 ;;
  5869                           
  5870                           	psect	text23
  5871  003A28                     __ptext23:
  5872                           	opt stack 0
  5873  003A28                     _util_transmit_dot:
  5874                           	opt stack 21
  5875                           
  5876                           ;easat2_util_transmission.c: 235: (PORTDbits.RD1) = 1;
  5877                           
  5878                           ;incstack = 0
  5879  003A28  8283               	bsf	3971,1,c	;volatile
  5880                           
  5881                           ;easat2_util_transmission.c: 236: (PORTDbits.RD3) = 1;
  5882  003A2A  8683               	bsf	3971,3,c	;volatile
  5883                           
  5884                           ;easat2_util_transmission.c: 238: for (int i = 0; i < (int)(2400/32); i++) {
  5885  003A2C  0E00               	movlw	0
  5886  003A2E  6E26               	movwf	util_transmit_dot@i+1,c
  5887  003A30  0E00               	movlw	0
  5888  003A32  6E25               	movwf	util_transmit_dot@i,c
  5889  003A34  BE26               	btfsc	util_transmit_dot@i+1,7,c
  5890  003A36  D006               	goto	l4788
  5891  003A38  5026               	movf	util_transmit_dot@i+1,w,c
  5892  003A3A  E10D               	bnz	l299
  5893  003A3C  0E4B               	movlw	75
  5894  003A3E  5C25               	subwf	util_transmit_dot@i,w,c
  5895  003A40  B0D8               	btfsc	status,0,c
  5896  003A42  D009               	goto	l299
  5897  003A44                     l4788:
  5898                           
  5899                           ;easat2_util_transmission.c: 245: util_transmit_buzzer_1ms_cycle();
  5900  003A44  EC1C  F01E         	call	_util_transmit_buzzer_1ms_cycle	;wreg free
  5901                           
  5902                           ;easat2_util_transmission.c: 246: else
  5903                           ;easat2_util_transmission.c: 247: util_waits_delay_ms(1);
  5904  003A48  4A25               	infsnz	util_transmit_dot@i,f,c
  5905  003A4A  2A26               	incf	util_transmit_dot@i+1,f,c
  5906  003A4C  BE26               	btfsc	util_transmit_dot@i+1,7,c
  5907  003A4E  D7FA               	goto	l4788
  5908  003A50  5026               	movf	util_transmit_dot@i+1,w,c
  5909  003A52  E101               	bnz	u4540
  5910  003A54  D7F3               	goto	L2
  5911  003A56                     u4540:
  5912  003A56                     l299:
  5913                           
  5914                           ;easat2_util_transmission.c: 249: }
  5915                           ;easat2_util_transmission.c: 251: (PORTDbits.RD1) = 0;
  5916  003A56  9283               	bcf	3971,1,c	;volatile
  5917                           
  5918                           ;easat2_util_transmission.c: 252: (PORTDbits.RD3) = 0;
  5919  003A58  9683               	bcf	3971,3,c	;volatile
  5920  003A5A  0012               	return		;funcret
  5921  003A5C                     __end_of_util_transmit_dot:
  5922                           	opt stack 0
  5923                           tblptru	equ	0xFF8
  5924                           tblptrh	equ	0xFF7
  5925                           tblptrl	equ	0xFF6
  5926                           tablat	equ	0xFF5
  5927                           postinc0	equ	0xFEE
  5928                           wreg	equ	0xFE8
  5929                           postdec1	equ	0xFE5
  5930                           fsr1l	equ	0xFE1
  5931                           indf2	equ	0xFDF
  5932                           postinc2	equ	0xFDE
  5933                           postdec2	equ	0xFDD
  5934                           fsr2h	equ	0xFDA
  5935                           fsr2l	equ	0xFD9
  5936                           status	equ	0xFD8
  5937                           
  5938 ;; *************** function _util_transmit_dash *****************
  5939 ;; Defined at:
  5940 ;;		line 262 in file "easat2_util_transmission.c"
  5941 ;; Parameters:    Size  Location     Type
  5942 ;;		None
  5943 ;; Auto vars:     Size  Location     Type
  5944 ;;  i               2   36[COMRAM] int 
  5945 ;; Return value:  Size  Location     Type
  5946 ;;                  1    wreg      void 
  5947 ;; Registers used:
  5948 ;;		wreg, status,2, status,0, cstack
  5949 ;; Tracked objects:
  5950 ;;		On entry : 0/0
  5951 ;;		On exit  : 0/0
  5952 ;;		Unchanged: 0/0
  5953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5954 ;;      Params:         0       0       0       0       0       0       0
  5955 ;;      Locals:         2       0       0       0       0       0       0
  5956 ;;      Temps:          0       0       0       0       0       0       0
  5957 ;;      Totals:         2       0       0       0       0       0       0
  5958 ;;Total ram usage:        2 bytes
  5959 ;; Hardware stack levels used:    1
  5960 ;; Hardware stack levels required when called:    5
  5961 ;; This function calls:
  5962 ;;		_util_transmit_buzzer_1ms_cycle
  5963 ;;		_util_waits_delay_ms
  5964 ;; This function is called by:
  5965 ;;		_util_transmit_morse_sequence
  5966 ;; This function uses a non-reentrant model
  5967 ;;
  5968                           
  5969                           	psect	text24
  5970  003A5C                     __ptext24:
  5971                           	opt stack 0
  5972  003A5C                     _util_transmit_dash:
  5973                           	opt stack 21
  5974                           
  5975                           ;easat2_util_transmission.c: 266: (PORTDbits.RD1) = 1;
  5976                           
  5977                           ;incstack = 0
  5978  003A5C  8283               	bsf	3971,1,c	;volatile
  5979                           
  5980                           ;easat2_util_transmission.c: 267: (PORTDbits.RD3) = 1;
  5981  003A5E  8683               	bsf	3971,3,c	;volatile
  5982                           
  5983                           ;easat2_util_transmission.c: 269: for (int i = 0; i < ((int)(2400/32)*3); i++) {
  5984  003A60  0E00               	movlw	0
  5985  003A62  6E26               	movwf	util_transmit_dash@i+1,c
  5986  003A64  0E00               	movlw	0
  5987  003A66  6E25               	movwf	util_transmit_dash@i,c
  5988  003A68  BE26               	btfsc	util_transmit_dash@i+1,7,c
  5989  003A6A  D006               	goto	l4804
  5990  003A6C  5026               	movf	util_transmit_dash@i+1,w,c
  5991  003A6E  E10D               	bnz	l306
  5992  003A70  0EE1               	movlw	225
  5993  003A72  5C25               	subwf	util_transmit_dash@i,w,c
  5994  003A74  B0D8               	btfsc	status,0,c
  5995  003A76  D009               	goto	l306
  5996  003A78                     l4804:
  5997                           
  5998                           ;easat2_util_transmission.c: 276: util_transmit_buzzer_1ms_cycle();
  5999  003A78  EC1C  F01E         	call	_util_transmit_buzzer_1ms_cycle	;wreg free
  6000                           
  6001                           ;easat2_util_transmission.c: 277: else
  6002                           ;easat2_util_transmission.c: 278: util_waits_delay_ms(1);
  6003  003A7C  4A25               	infsnz	util_transmit_dash@i,f,c
  6004  003A7E  2A26               	incf	util_transmit_dash@i+1,f,c
  6005  003A80  BE26               	btfsc	util_transmit_dash@i+1,7,c
  6006  003A82  D7FA               	goto	l4804
  6007  003A84  5026               	movf	util_transmit_dash@i+1,w,c
  6008  003A86  E101               	bnz	u4560
  6009  003A88  D7F3               	goto	L3
  6010  003A8A                     u4560:
  6011  003A8A                     l306:
  6012                           
  6013                           ;easat2_util_transmission.c: 280: }
  6014                           ;easat2_util_transmission.c: 282: (PORTDbits.RD1) = 0;
  6015  003A8A  9283               	bcf	3971,1,c	;volatile
  6016                           
  6017                           ;easat2_util_transmission.c: 283: (PORTDbits.RD3) = 0;
  6018  003A8C  9683               	bcf	3971,3,c	;volatile
  6019  003A8E  0012               	return		;funcret
  6020  003A90                     __end_of_util_transmit_dash:
  6021                           	opt stack 0
  6022                           tblptru	equ	0xFF8
  6023                           tblptrh	equ	0xFF7
  6024                           tblptrl	equ	0xFF6
  6025                           tablat	equ	0xFF5
  6026                           postinc0	equ	0xFEE
  6027                           wreg	equ	0xFE8
  6028                           postdec1	equ	0xFE5
  6029                           fsr1l	equ	0xFE1
  6030                           indf2	equ	0xFDF
  6031                           postinc2	equ	0xFDE
  6032                           postdec2	equ	0xFDD
  6033                           fsr2h	equ	0xFDA
  6034                           fsr2l	equ	0xFD9
  6035                           status	equ	0xFD8
  6036                           
  6037 ;; *************** function _util_waits_delay_ms *****************
  6038 ;; Defined at:
  6039 ;;		line 40 in file "easat2_util_waits.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;  ms              2   17[BANK0 ] int 
  6042 ;; Auto vars:     Size  Location     Type
  6043 ;;  i               2   34[COMRAM] int 
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  1    wreg      void 
  6046 ;; Registers used:
  6047 ;;		wreg, status,2, status,0
  6048 ;; Tracked objects:
  6049 ;;		On entry : 0/0
  6050 ;;		On exit  : 0/0
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6053 ;;      Params:         0       2       0       0       0       0       0
  6054 ;;      Locals:         2       0       0       0       0       0       0
  6055 ;;      Temps:          1       0       0       0       0       0       0
  6056 ;;      Totals:         3       2       0       0       0       0       0
  6057 ;;Total ram usage:        5 bytes
  6058 ;; Hardware stack levels used:    1
  6059 ;; Hardware stack levels required when called:    3
  6060 ;; This function calls:
  6061 ;;		Nothing
  6062 ;; This function is called by:
  6063 ;;		_util_transmit_dot
  6064 ;;		_util_transmit_dash
  6065 ;;		_util_transmit_space_between_dots_dashes
  6066 ;;		_util_transmit_space_between_letters
  6067 ;;		_util_transmit_space_between_words
  6068 ;;		_util_waits_delay_secs
  6069 ;; This function uses a non-reentrant model
  6070 ;;
  6071                           
  6072                           	psect	text25
  6073  003B58                     __ptext25:
  6074                           	opt stack 0
  6075  003B58                     _util_waits_delay_ms:
  6076                           	opt stack 24
  6077                           
  6078                           ;easat2_util_waits.c: 41: for (int i = 0; i < ms; i++)
  6079                           
  6080                           ;incstack = 0
  6081  003B58  0E00               	movlw	0
  6082  003B5A  6E24               	movwf	util_waits_delay_ms@i+1,c
  6083  003B5C  0E00               	movlw	0
  6084  003B5E  6E23               	movwf	util_waits_delay_ms@i,c
  6085  003B60  D006               	goto	l352
  6086  003B62                     l4730:
  6087                           
  6088                           ;easat2_util_waits.c: 42: _delay((unsigned long)((1)*(2000000/4000.0)));
  6089  003B62  0EA6               	movlw	166
  6090  003B64                     u6417:
  6091  003B64  2EE8               	decfsz	wreg,f,c
  6092  003B66  D7FE               	goto	u6417
  6093  003B68  D000               	nop2		;nop
  6094  003B6A  4A23               	infsnz	util_waits_delay_ms@i,f,c
  6095  003B6C  2A24               	incf	util_waits_delay_ms@i+1,f,c
  6096  003B6E                     l352:
  6097  003B6E  0100               	movlb	0	; () banked
  6098  003B70  5171               	movf	util_waits_delay_ms@ms& (0+255),w,b
  6099  003B72  5C23               	subwf	util_waits_delay_ms@i,w,c
  6100  003B74  5024               	movf	util_waits_delay_ms@i+1,w,c
  6101  003B76  0A80               	xorlw	128
  6102  003B78  6E22               	movwf	??_util_waits_delay_ms& (0+255),c
  6103  003B7A  0100               	movlb	0	; () banked
  6104  003B7C  5172               	movf	(util_waits_delay_ms@ms+1)& (0+255),w,b
  6105  003B7E  0A80               	xorlw	128
  6106  003B80  5822               	subwfb	??_util_waits_delay_ms& (0+255),w,c
  6107  003B82  B0D8               	btfsc	status,0,c
  6108  003B84  0012               	return	
  6109  003B86  D7ED               	goto	l4730
  6110  003B88                     __end_of_util_waits_delay_ms:
  6111                           	opt stack 0
  6112                           tblptru	equ	0xFF8
  6113                           tblptrh	equ	0xFF7
  6114                           tblptrl	equ	0xFF6
  6115                           tablat	equ	0xFF5
  6116                           postinc0	equ	0xFEE
  6117                           wreg	equ	0xFE8
  6118                           postdec1	equ	0xFE5
  6119                           fsr1l	equ	0xFE1
  6120                           indf2	equ	0xFDF
  6121                           postinc2	equ	0xFDE
  6122                           postdec2	equ	0xFDD
  6123                           fsr2h	equ	0xFDA
  6124                           fsr2l	equ	0xFD9
  6125                           status	equ	0xFD8
  6126                           
  6127 ;; *************** function _util_transmit_buzzer_1ms_cycle *****************
  6128 ;; Defined at:
  6129 ;;		line 310 in file "easat2_util_transmission.c"
  6130 ;; Parameters:    Size  Location     Type
  6131 ;;		None
  6132 ;; Auto vars:     Size  Location     Type
  6133 ;;		None
  6134 ;; Return value:  Size  Location     Type
  6135 ;;                  1    wreg      void 
  6136 ;; Registers used:
  6137 ;;		wreg, status,2, status,0, cstack
  6138 ;; Tracked objects:
  6139 ;;		On entry : 0/0
  6140 ;;		On exit  : 0/0
  6141 ;;		Unchanged: 0/0
  6142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6143 ;;      Params:         0       0       0       0       0       0       0
  6144 ;;      Locals:         0       0       0       0       0       0       0
  6145 ;;      Temps:          0       0       0       0       0       0       0
  6146 ;;      Totals:         0       0       0       0       0       0       0
  6147 ;;Total ram usage:        0 bytes
  6148 ;; Hardware stack levels used:    1
  6149 ;; Hardware stack levels required when called:    4
  6150 ;; This function calls:
  6151 ;;		_util_waits_delay_hundred_us
  6152 ;; This function is called by:
  6153 ;;		_util_transmit_dot
  6154 ;;		_util_transmit_dash
  6155 ;; This function uses a non-reentrant model
  6156 ;;
  6157                           
  6158                           	psect	text26
  6159  003C38                     __ptext26:
  6160                           	opt stack 0
  6161  003C38                     _util_transmit_buzzer_1ms_cycle:
  6162                           	opt stack 21
  6163                           
  6164                           ;easat2_util_transmission.c: 312: (PORTDbits.RD2) = 1;
  6165                           
  6166                           ; BSR set to: 0
  6167                           ;incstack = 0
  6168  003C38  8483               	bsf	3971,2,c	;volatile
  6169                           
  6170                           ;easat2_util_transmission.c: 313: util_waits_delay_hundred_us((int)(10/2));
  6171  003C3A  0E00               	movlw	0
  6172  003C3C  0100               	movlb	0	; () banked
  6173  003C3E  6F72               	movwf	(util_waits_delay_hundred_us@hun_us+1)& (0+255),b
  6174  003C40  0E05               	movlw	5
  6175  003C42  6F71               	movwf	util_waits_delay_hundred_us@hun_us& (0+255),b
  6176  003C44  ECC4  F01D         	call	_util_waits_delay_hundred_us	;wreg free
  6177                           
  6178                           ;easat2_util_transmission.c: 314: (PORTDbits.RD2) = 0;
  6179  003C48  9483               	bcf	3971,2,c	;volatile
  6180                           
  6181                           ;easat2_util_transmission.c: 315: util_waits_delay_hundred_us((int)(10/2));
  6182  003C4A  0E00               	movlw	0
  6183  003C4C  0100               	movlb	0	; () banked
  6184  003C4E  6F72               	movwf	(util_waits_delay_hundred_us@hun_us+1)& (0+255),b
  6185  003C50  0E05               	movlw	5
  6186  003C52  6F71               	movwf	util_waits_delay_hundred_us@hun_us& (0+255),b
  6187  003C54  ECC4  F01D         	call	_util_waits_delay_hundred_us	;wreg free
  6188  003C58  0012               	return		;funcret
  6189  003C5A                     __end_of_util_transmit_buzzer_1ms_cycle:
  6190                           	opt stack 0
  6191                           tblptru	equ	0xFF8
  6192                           tblptrh	equ	0xFF7
  6193                           tblptrl	equ	0xFF6
  6194                           tablat	equ	0xFF5
  6195                           postinc0	equ	0xFEE
  6196                           wreg	equ	0xFE8
  6197                           postdec1	equ	0xFE5
  6198                           fsr1l	equ	0xFE1
  6199                           indf2	equ	0xFDF
  6200                           postinc2	equ	0xFDE
  6201                           postdec2	equ	0xFDD
  6202                           fsr2h	equ	0xFDA
  6203                           fsr2l	equ	0xFD9
  6204                           status	equ	0xFD8
  6205                           
  6206 ;; *************** function _util_waits_delay_hundred_us *****************
  6207 ;; Defined at:
  6208 ;;		line 47 in file "easat2_util_waits.c"
  6209 ;; Parameters:    Size  Location     Type
  6210 ;;  hun_us          2   17[BANK0 ] int 
  6211 ;; Auto vars:     Size  Location     Type
  6212 ;;  i               2   34[COMRAM] int 
  6213 ;; Return value:  Size  Location     Type
  6214 ;;                  1    wreg      void 
  6215 ;; Registers used:
  6216 ;;		wreg, status,2, status,0
  6217 ;; Tracked objects:
  6218 ;;		On entry : 0/0
  6219 ;;		On exit  : 0/0
  6220 ;;		Unchanged: 0/0
  6221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6222 ;;      Params:         0       2       0       0       0       0       0
  6223 ;;      Locals:         2       0       0       0       0       0       0
  6224 ;;      Temps:          1       0       0       0       0       0       0
  6225 ;;      Totals:         3       2       0       0       0       0       0
  6226 ;;Total ram usage:        5 bytes
  6227 ;; Hardware stack levels used:    1
  6228 ;; Hardware stack levels required when called:    3
  6229 ;; This function calls:
  6230 ;;		Nothing
  6231 ;; This function is called by:
  6232 ;;		_util_transmit_buzzer_1ms_cycle
  6233 ;; This function uses a non-reentrant model
  6234 ;;
  6235                           
  6236                           	psect	text27
  6237  003B88                     __ptext27:
  6238                           	opt stack 0
  6239  003B88                     _util_waits_delay_hundred_us:
  6240                           	opt stack 21
  6241                           
  6242                           ;easat2_util_waits.c: 48: for (int i = 0; i < hun_us; i++)
  6243                           
  6244                           ;incstack = 0
  6245  003B88  0E00               	movlw	0
  6246  003B8A  6E24               	movwf	util_waits_delay_hundred_us@i+1,c
  6247  003B8C  0E00               	movlw	0
  6248  003B8E  6E23               	movwf	util_waits_delay_hundred_us@i,c
  6249  003B90  D006               	goto	l358
  6250  003B92                     l4718:
  6251                           
  6252                           ;easat2_util_waits.c: 49: _delay((unsigned long)((100)*(2000000/4000000.0)));
  6253  003B92  0E10               	movlw	16
  6254  003B94                     u6427:
  6255  003B94  2EE8               	decfsz	wreg,f,c
  6256  003B96  D7FE               	goto	u6427
  6257  003B98  D000               	nop2		;nop
  6258  003B9A  4A23               	infsnz	util_waits_delay_hundred_us@i,f,c
  6259  003B9C  2A24               	incf	util_waits_delay_hundred_us@i+1,f,c
  6260  003B9E                     l358:
  6261  003B9E  0100               	movlb	0	; () banked
  6262  003BA0  5171               	movf	util_waits_delay_hundred_us@hun_us& (0+255),w,b
  6263  003BA2  5C23               	subwf	util_waits_delay_hundred_us@i,w,c
  6264  003BA4  5024               	movf	util_waits_delay_hundred_us@i+1,w,c
  6265  003BA6  0A80               	xorlw	128
  6266  003BA8  6E22               	movwf	??_util_waits_delay_hundred_us& (0+255),c
  6267  003BAA  0100               	movlb	0	; () banked
  6268  003BAC  5172               	movf	(util_waits_delay_hundred_us@hun_us+1)& (0+255),w,b
  6269  003BAE  0A80               	xorlw	128
  6270  003BB0  5822               	subwfb	??_util_waits_delay_hundred_us& (0+255),w,c
  6271  003BB2  B0D8               	btfsc	status,0,c
  6272  003BB4  0012               	return	
  6273  003BB6  D7ED               	goto	l4718
  6274  003BB8                     __end_of_util_waits_delay_hundred_us:
  6275                           	opt stack 0
  6276                           tblptru	equ	0xFF8
  6277                           tblptrh	equ	0xFF7
  6278                           tblptrl	equ	0xFF6
  6279                           tablat	equ	0xFF5
  6280                           postinc0	equ	0xFEE
  6281                           wreg	equ	0xFE8
  6282                           postdec1	equ	0xFE5
  6283                           fsr1l	equ	0xFE1
  6284                           indf2	equ	0xFDF
  6285                           postinc2	equ	0xFDE
  6286                           postdec2	equ	0xFDD
  6287                           fsr2h	equ	0xFDA
  6288                           fsr2l	equ	0xFD9
  6289                           status	equ	0xFD8
  6290                           
  6291 ;; *************** function _strlen *****************
  6292 ;; Defined at:
  6293 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\strlen.c"
  6294 ;; Parameters:    Size  Location     Type
  6295 ;;  s               2   17[BANK0 ] PTR const unsigned char 
  6296 ;;		 -> STR_43(7), STR_42(7), STR_41(6), STR_40(7), 
  6297 ;;		 -> STR_39(7), STR_38(6), STR_37(6), STR_36(6), 
  6298 ;;		 -> STR_35(6), STR_34(6), STR_33(6), STR_32(6), 
  6299 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_28(5), 
  6300 ;;		 -> STR_27(5), STR_26(5), STR_25(4), STR_24(5), 
  6301 ;;		 -> STR_23(4), STR_22(2), STR_21(4), STR_20(4), 
  6302 ;;		 -> STR_19(5), STR_18(5), STR_17(4), STR_16(3), 
  6303 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_12(5), 
  6304 ;;		 -> STR_11(3), STR_10(5), STR_9(4), STR_8(5), 
  6305 ;;		 -> STR_7(2), STR_6(4), STR_5(5), STR_4(5), 
  6306 ;;		 -> STR_3(3), util_beacon_transmission@BEACON_MESSAGE(128), 
  6307 ;; Auto vars:     Size  Location     Type
  6308 ;;  cp              2   35[COMRAM] PTR const unsigned char 
  6309 ;;		 -> STR_43(7), STR_42(7), STR_41(6), STR_40(7), 
  6310 ;;		 -> STR_39(7), STR_38(6), STR_37(6), STR_36(6), 
  6311 ;;		 -> STR_35(6), STR_34(6), STR_33(6), STR_32(6), 
  6312 ;;		 -> STR_31(6), STR_30(6), STR_29(6), STR_28(5), 
  6313 ;;		 -> STR_27(5), STR_26(5), STR_25(4), STR_24(5), 
  6314 ;;		 -> STR_23(4), STR_22(2), STR_21(4), STR_20(4), 
  6315 ;;		 -> STR_19(5), STR_18(5), STR_17(4), STR_16(3), 
  6316 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_12(5), 
  6317 ;;		 -> STR_11(3), STR_10(5), STR_9(4), STR_8(5), 
  6318 ;;		 -> STR_7(2), STR_6(4), STR_5(5), STR_4(5), 
  6319 ;;		 -> STR_3(3), util_beacon_transmission@BEACON_MESSAGE(128), 
  6320 ;; Return value:  Size  Location     Type
  6321 ;;                  2   17[BANK0 ] unsigned int 
  6322 ;; Registers used:
  6323 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  6324 ;; Tracked objects:
  6325 ;;		On entry : 0/0
  6326 ;;		On exit  : 0/0
  6327 ;;		Unchanged: 0/0
  6328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6329 ;;      Params:         0       2       0       0       0       0       0
  6330 ;;      Locals:         2       0       0       0       0       0       0
  6331 ;;      Temps:          2       0       0       0       0       0       0
  6332 ;;      Totals:         4       2       0       0       0       0       0
  6333 ;;Total ram usage:        6 bytes
  6334 ;; Hardware stack levels used:    1
  6335 ;; Hardware stack levels required when called:    3
  6336 ;; This function calls:
  6337 ;;		Nothing
  6338 ;; This function is called by:
  6339 ;;		_util_beacon_transmission
  6340 ;;		_util_transmit_morse_sequence
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           
  6344                           	psect	text28
  6345  00377A                     __ptext28:
  6346                           	opt stack 0
  6347  00377A                     _strlen:
  6348                           	opt stack 23
  6349                           
  6350                           ; BSR set to: 0
  6351                           ;incstack = 0
  6352  00377A  C071  F024         	movff	strlen@s,strlen@cp
  6353  00377E  C072  F025         	movff	strlen@s+1,strlen@cp+1
  6354  003782  D002               	goto	l4774
  6355  003784                     l4772:
  6356  003784  4A24               	infsnz	strlen@cp,f,c
  6357  003786  2A25               	incf	strlen@cp+1,f,c
  6358  003788                     l4774:
  6359  003788  C024  FFF6         	movff	strlen@cp,tblptrl
  6360  00378C  C025  FFF7         	movff	strlen@cp+1,tblptrh
  6361  003790  6AF8               	clrf	tblptru,c
  6362  003792  0E05               	movlw	(high __ramtop+-1)
  6363  003794  64F7               	cpfsgt	tblptrh,c
  6364  003796  D003               	bra	u4517
  6365  003798  0008               	tblrd		*
  6366  00379A  50F5               	movf	tablat,w,c
  6367  00379C  D005               	bra	u4510
  6368  00379E                     u4517:
  6369  00379E  CFF6 FFE9          	movff	tblptrl,fsr0l
  6370  0037A2  CFF7 FFEA          	movff	tblptrh,fsr0h
  6371  0037A6  50EF               	movf	indf0,w,c
  6372  0037A8                     u4510:
  6373  0037A8  0900               	iorlw	0
  6374  0037AA  A4D8               	btfss	status,2,c
  6375  0037AC  D7EB               	goto	l4772
  6376  0037AE  C071  F022         	movff	strlen@s,??_strlen
  6377  0037B2  C072  F023         	movff	strlen@s+1,??_strlen+1
  6378  0037B6  1E22               	comf	??_strlen,f,c
  6379  0037B8  1E23               	comf	??_strlen+1,f,c
  6380  0037BA  4A22               	infsnz	??_strlen,f,c
  6381  0037BC  2A23               	incf	??_strlen+1,f,c
  6382  0037BE  5024               	movf	strlen@cp,w,c
  6383  0037C0  2422               	addwf	??_strlen,w,c
  6384  0037C2  0100               	movlb	0	; () banked
  6385  0037C4  6F71               	movwf	?_strlen& (0+255),b
  6386  0037C6  5025               	movf	strlen@cp+1,w,c
  6387  0037C8  2023               	addwfc	??_strlen+1,w,c
  6388  0037CA  0100               	movlb	0	; () banked
  6389  0037CC  6F72               	movwf	(?_strlen+1)& (0+255),b
  6390  0037CE  0012               	return	
  6391  0037D0                     __end_of_strlen:
  6392                           	opt stack 0
  6393                           tblptru	equ	0xFF8
  6394                           tblptrh	equ	0xFF7
  6395                           tblptrl	equ	0xFF6
  6396                           tablat	equ	0xFF5
  6397                           indf0	equ	0xFEF
  6398                           postinc0	equ	0xFEE
  6399                           fsr0h	equ	0xFEA
  6400                           fsr0l	equ	0xFE9
  6401                           wreg	equ	0xFE8
  6402                           postdec1	equ	0xFE5
  6403                           fsr1l	equ	0xFE1
  6404                           indf2	equ	0xFDF
  6405                           postinc2	equ	0xFDE
  6406                           postdec2	equ	0xFDD
  6407                           fsr2h	equ	0xFDA
  6408                           fsr2l	equ	0xFD9
  6409                           status	equ	0xFD8
  6410                           
  6411 ;; *************** function _strcpy *****************
  6412 ;; Defined at:
  6413 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\strcpy.c"
  6414 ;; Parameters:    Size  Location     Type
  6415 ;;  to              2   17[BANK0 ] PTR unsigned char 
  6416 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6417 ;;  from            2   19[BANK0 ] PTR const unsigned char 
  6418 ;;		 -> STR_1(7), 
  6419 ;; Auto vars:     Size  Location     Type
  6420 ;;  cp              2   33[COMRAM] PTR unsigned char 
  6421 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6422 ;; Return value:  Size  Location     Type
  6423 ;;                  2   17[BANK0 ] PTR unsigned char 
  6424 ;; Registers used:
  6425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6426 ;; Tracked objects:
  6427 ;;		On entry : 0/0
  6428 ;;		On exit  : 0/0
  6429 ;;		Unchanged: 0/0
  6430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6431 ;;      Params:         0       4       0       0       0       0       0
  6432 ;;      Locals:         2       0       0       0       0       0       0
  6433 ;;      Temps:          0       0       0       0       0       0       0
  6434 ;;      Totals:         2       4       0       0       0       0       0
  6435 ;;Total ram usage:        6 bytes
  6436 ;; Hardware stack levels used:    1
  6437 ;; Hardware stack levels required when called:    3
  6438 ;; This function calls:
  6439 ;;		Nothing
  6440 ;; This function is called by:
  6441 ;;		_util_beacon_transmission
  6442 ;; This function uses a non-reentrant model
  6443 ;;
  6444                           
  6445                           	psect	text29
  6446  003AC2                     __ptext29:
  6447                           	opt stack 0
  6448  003AC2                     _strcpy:
  6449                           	opt stack 25
  6450                           
  6451                           ; BSR set to: 0
  6452                           ;incstack = 0
  6453  003AC2  C071  F022         	movff	strcpy@to,strcpy@cp
  6454  003AC6  C072  F023         	movff	strcpy@to+1,strcpy@cp+1
  6455  003ACA  D005               	goto	l5454
  6456  003ACC                     l5452:
  6457  003ACC  4A22               	infsnz	strcpy@cp,f,c
  6458  003ACE  2A23               	incf	strcpy@cp+1,f,c
  6459  003AD0  0100               	movlb	0	; () banked
  6460  003AD2  4B73               	infsnz	strcpy@from& (0+255),f,b
  6461  003AD4  2B74               	incf	(strcpy@from+1)& (0+255),f,b
  6462  003AD6                     l5454:
  6463  003AD6  C073  FFF6         	movff	strcpy@from,tblptrl
  6464  003ADA  C074  FFF7         	movff	strcpy@from+1,tblptrh
  6465  003ADE                     	if	0	;tblptru may be non-zero
  6466  003ADE                     	endif
  6467  003ADE                     	if	0	;tblptru may be non-zero
  6468  003ADE                     	endif
  6469  003ADE  C022  FFD9         	movff	strcpy@cp,fsr2l
  6470  003AE2  C023  FFDA         	movff	strcpy@cp+1,fsr2h
  6471  003AE6  0008               	tblrd		*
  6472  003AE8  CFF5 FFDF          	movff	tablat,indf2
  6473  003AEC  50DF               	movf	indf2,w,c
  6474  003AEE  B4D8               	btfsc	status,2,c
  6475  003AF0  0012               	return	
  6476  003AF2  D7EC               	goto	l5452
  6477  003AF4                     __end_of_strcpy:
  6478                           	opt stack 0
  6479                           tblptru	equ	0xFF8
  6480                           tblptrh	equ	0xFF7
  6481                           tblptrl	equ	0xFF6
  6482                           tablat	equ	0xFF5
  6483                           indf0	equ	0xFEF
  6484                           postinc0	equ	0xFEE
  6485                           fsr0h	equ	0xFEA
  6486                           fsr0l	equ	0xFE9
  6487                           wreg	equ	0xFE8
  6488                           postdec1	equ	0xFE5
  6489                           fsr1l	equ	0xFE1
  6490                           indf2	equ	0xFDF
  6491                           postinc2	equ	0xFDE
  6492                           postdec2	equ	0xFDD
  6493                           fsr2h	equ	0xFDA
  6494                           fsr2l	equ	0xFD9
  6495                           status	equ	0xFD8
  6496                           
  6497 ;; *************** function _strcat *****************
  6498 ;; Defined at:
  6499 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\strcat.c"
  6500 ;; Parameters:    Size  Location     Type
  6501 ;;  to              2   17[BANK0 ] PTR unsigned char 
  6502 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6503 ;;  from            2   19[BANK0 ] PTR const unsigned char 
  6504 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), 
  6505 ;; Auto vars:     Size  Location     Type
  6506 ;;  cp              2   33[COMRAM] PTR unsigned char 
  6507 ;;		 -> util_beacon_transmission@BEACON_MESSAGE(128), 
  6508 ;; Return value:  Size  Location     Type
  6509 ;;                  2   17[BANK0 ] PTR unsigned char 
  6510 ;; Registers used:
  6511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6512 ;; Tracked objects:
  6513 ;;		On entry : 0/0
  6514 ;;		On exit  : 0/0
  6515 ;;		Unchanged: 0/0
  6516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6517 ;;      Params:         0       4       0       0       0       0       0
  6518 ;;      Locals:         2       0       0       0       0       0       0
  6519 ;;      Temps:          0       0       0       0       0       0       0
  6520 ;;      Totals:         2       4       0       0       0       0       0
  6521 ;;Total ram usage:        6 bytes
  6522 ;; Hardware stack levels used:    1
  6523 ;; Hardware stack levels required when called:    3
  6524 ;; This function calls:
  6525 ;;		Nothing
  6526 ;; This function is called by:
  6527 ;;		_util_beacon_transmission
  6528 ;; This function uses a non-reentrant model
  6529 ;;
  6530                           
  6531                           	psect	text30
  6532  0038B6                     __ptext30:
  6533                           	opt stack 0
  6534  0038B6                     _strcat:
  6535                           	opt stack 25
  6536                           
  6537                           ;incstack = 0
  6538  0038B6  C071  F022         	movff	strcat@to,strcat@cp
  6539  0038BA  C072  F023         	movff	strcat@to+1,strcat@cp+1
  6540  0038BE  D002               	goto	l5754
  6541  0038C0                     l5752:
  6542  0038C0  4A22               	infsnz	strcat@cp,f,c
  6543  0038C2  2A23               	incf	strcat@cp+1,f,c
  6544  0038C4                     l5754:
  6545  0038C4  C022  FFD9         	movff	strcat@cp,fsr2l
  6546  0038C8  C023  FFDA         	movff	strcat@cp+1,fsr2h
  6547  0038CC  50DF               	movf	indf2,w,c
  6548  0038CE  B4D8               	btfsc	status,2,c
  6549  0038D0  D006               	goto	l5758
  6550  0038D2  D7F6               	goto	l5752
  6551  0038D4                     l5756:
  6552  0038D4  4A22               	infsnz	strcat@cp,f,c
  6553  0038D6  2A23               	incf	strcat@cp+1,f,c
  6554  0038D8  0100               	movlb	0	; () banked
  6555  0038DA  4B73               	infsnz	strcat@from& (0+255),f,b
  6556  0038DC  2B74               	incf	(strcat@from+1)& (0+255),f,b
  6557  0038DE                     l5758:
  6558  0038DE  C073  FFD9         	movff	strcat@from,fsr2l
  6559  0038E2  C074  FFDA         	movff	strcat@from+1,fsr2h
  6560  0038E6  C022  FFE1         	movff	strcat@cp,fsr1l
  6561  0038EA  C023  FFE2         	movff	strcat@cp+1,fsr1h
  6562  0038EE  CFDF FFE7          	movff	indf2,indf1
  6563  0038F2  50E7               	movf	indf1,w,c
  6564  0038F4  B4D8               	btfsc	status,2,c
  6565  0038F6  0012               	return	
  6566  0038F8  D7ED               	goto	l5756
  6567  0038FA                     __end_of_strcat:
  6568                           	opt stack 0
  6569                           tblptru	equ	0xFF8
  6570                           tblptrh	equ	0xFF7
  6571                           tblptrl	equ	0xFF6
  6572                           tablat	equ	0xFF5
  6573                           indf0	equ	0xFEF
  6574                           postinc0	equ	0xFEE
  6575                           fsr0h	equ	0xFEA
  6576                           fsr0l	equ	0xFE9
  6577                           wreg	equ	0xFE8
  6578                           indf1	equ	0xFE7
  6579                           postdec1	equ	0xFE5
  6580                           fsr1h	equ	0xFE2
  6581                           fsr1l	equ	0xFE1
  6582                           indf2	equ	0xFDF
  6583                           postinc2	equ	0xFDE
  6584                           postdec2	equ	0xFDD
  6585                           fsr2h	equ	0xFDA
  6586                           fsr2l	equ	0xFD9
  6587                           status	equ	0xFD8
  6588                           
  6589 ;; *************** function _sprintf *****************
  6590 ;; Defined at:
  6591 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  6592 ;; Parameters:    Size  Location     Type
  6593 ;;  sp              2   69[BANK0 ] PTR unsigned char 
  6594 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), 
  6595 ;;  f               2   71[BANK0 ] PTR const unsigned char 
  6596 ;;		 -> STR_2(23), 
  6597 ;; Auto vars:     Size  Location     Type
  6598 ;;  val             4  102[BANK0 ] unsigned long 
  6599 ;;  tmpval          4   98[BANK0 ] struct .
  6600 ;;  fval            3  108[BANK0 ] struct .
  6601 ;;  cp              3    0        PTR const unsigned char 
  6602 ;;  prec            2  111[BANK0 ] int 
  6603 ;;  exp             2  106[BANK0 ] int 
  6604 ;;  width           2   96[BANK0 ] int 
  6605 ;;  flag            2   94[BANK0 ] unsigned short 
  6606 ;;  ap              2   92[BANK0 ] PTR void [1]
  6607 ;;		 -> ?_sprintf(2), 
  6608 ;;  len             2    0        unsigned int 
  6609 ;;  c               1  113[BANK0 ] char 
  6610 ;;  d               1    0        unsigned char 
  6611 ;; Return value:  Size  Location     Type
  6612 ;;                  2   69[BANK0 ] int 
  6613 ;; Registers used:
  6614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6615 ;; Tracked objects:
  6616 ;;		On entry : 0/0
  6617 ;;		On exit  : 0/0
  6618 ;;		Unchanged: 0/0
  6619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6620 ;;      Params:         0      14       0       0       0       0       0
  6621 ;;      Locals:         0      25       0       0       0       0       0
  6622 ;;      Temps:          0       6       0       0       0       0       0
  6623 ;;      Totals:         0      45       0       0       0       0       0
  6624 ;;Total ram usage:       45 bytes
  6625 ;; Hardware stack levels used:    1
  6626 ;; Hardware stack levels required when called:    6
  6627 ;; This function calls:
  6628 ;;		___awdiv
  6629 ;;		___ftadd
  6630 ;;		___ftge
  6631 ;;		___ftmul
  6632 ;;		___ftneg
  6633 ;;		___ftsub
  6634 ;;		___fttol
  6635 ;;		___lldiv
  6636 ;;		___llmod
  6637 ;;		___lltoft
  6638 ;;		___wmul
  6639 ;;		__div_to_l_
  6640 ;;		__tdiv_to_l_
  6641 ;;		_fround
  6642 ;;		_isdigit
  6643 ;;		_scale
  6644 ;; This function is called by:
  6645 ;;		_util_beacon_transmission
  6646 ;; This function uses a non-reentrant model
  6647 ;;
  6648                           
  6649                           	psect	text31
  6650  0000AA                     __ptext31:
  6651                           	opt stack 0
  6652  0000AA                     _sprintf:
  6653                           	opt stack 22
  6654                           
  6655                           ;doprnt.c: 494: va_list ap;
  6656                           ;doprnt.c: 499: signed char c;
  6657                           ;doprnt.c: 501: int width;
  6658                           ;doprnt.c: 504: int prec;
  6659                           ;doprnt.c: 508: unsigned short flag;
  6660                           ;doprnt.c: 515: char d;
  6661                           ;doprnt.c: 516: double fval;
  6662                           ;doprnt.c: 517: int exp;
  6663                           ;doprnt.c: 523: union {
  6664                           ;doprnt.c: 524: unsigned long vd;
  6665                           ;doprnt.c: 525: double integ;
  6666                           ;doprnt.c: 526: } tmpval;
  6667                           ;doprnt.c: 528: unsigned long val;
  6668                           ;doprnt.c: 529: unsigned len;
  6669                           ;doprnt.c: 530: const char * cp;
  6670                           ;doprnt.c: 533: *ap = __va_start();
  6671                           
  6672                           ;incstack = 0
  6673  0000AA  0EA9               	movlw	low (?_sprintf+4)
  6674  0000AC  0100               	movlb	0	; () banked
  6675  0000AE  6FBC               	movwf	sprintf@ap& (0+255),b
  6676  0000B0  0E00               	movlw	high (?_sprintf+4)
  6677  0000B2  0100               	movlb	0	; () banked
  6678  0000B4  6FBD               	movwf	(sprintf@ap+1)& (0+255),b
  6679                           
  6680                           ;doprnt.c: 536: while(c = *f++) {
  6681  0000B6  EF0E  F006         	goto	l5744
  6682  0000BA                     l5458:
  6683                           
  6684                           ; BSR set to: 0
  6685                           ;doprnt.c: 538: if(c != '%')
  6686  0000BA  0E25               	movlw	37
  6687  0000BC  0100               	movlb	0	; () banked
  6688  0000BE  19D1               	xorwf	sprintf@c& (0+255),w,b
  6689  0000C0  B4D8               	btfsc	status,2,c
  6690  0000C2  D00B               	goto	l5464
  6691                           
  6692                           ; BSR set to: 0
  6693                           ;doprnt.c: 540: {
  6694                           ;doprnt.c: 541: ((*sp++ = (c)));
  6695  0000C4  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  6696  0000C8  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  6697  0000CC  C0D1  FFDF         	movff	sprintf@c,indf2
  6698                           
  6699                           ; BSR set to: 0
  6700  0000D0  0100               	movlb	0	; () banked
  6701  0000D2  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  6702  0000D4  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  6703                           
  6704                           ;doprnt.c: 542: continue;
  6705  0000D6  EF0E  F006         	goto	l5744
  6706  0000DA                     l5464:
  6707                           
  6708                           ; BSR set to: 0
  6709                           ;doprnt.c: 543: }
  6710                           ;doprnt.c: 546: width = 0;
  6711  0000DA  0E00               	movlw	0
  6712  0000DC  0100               	movlb	0	; () banked
  6713  0000DE  6FC1               	movwf	(sprintf@width+1)& (0+255),b
  6714  0000E0  0E00               	movlw	0
  6715  0000E2  6FC0               	movwf	sprintf@width& (0+255),b
  6716                           
  6717                           ;doprnt.c: 548: flag = 0;
  6718  0000E4  0E00               	movlw	0
  6719  0000E6  0100               	movlb	0	; () banked
  6720  0000E8  6FBF               	movwf	(sprintf@flag+1)& (0+255),b
  6721  0000EA  0E00               	movlw	0
  6722  0000EC  6FBE               	movwf	sprintf@flag& (0+255),b
  6723                           
  6724                           ; BSR set to: 0
  6725                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6726  0000EE  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6727  0000F2  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6728  0000F6                     	if	0	;tblptru may be non-zero
  6729  0000F6                     	endif
  6730  0000F6                     	if	0	;tblptru may be non-zero
  6731  0000F6                     	endif
  6732  0000F6  0008               	tblrd		*
  6733  0000F8  50F5               	movf	tablat,w,c
  6734  0000FA  EC2D  F01E         	call	_isdigit
  6735  0000FE  A0D8               	btfss	status,0,c
  6736  000100  D040               	goto	l5478
  6737                           
  6738                           ;doprnt.c: 598: width = 0;
  6739  000102  0E00               	movlw	0
  6740  000104  0100               	movlb	0	; () banked
  6741  000106  6FC1               	movwf	(sprintf@width+1)& (0+255),b
  6742  000108  0E00               	movlw	0
  6743  00010A  6FC0               	movwf	sprintf@width& (0+255),b
  6744  00010C                     l5470:
  6745                           
  6746                           ;doprnt.c: 600: width *= 10;
  6747  00010C  C0C0  F079         	movff	sprintf@width,___wmul@multiplier
  6748  000110  C0C1  F07A         	movff	sprintf@width+1,___wmul@multiplier+1
  6749  000114  0E00               	movlw	0
  6750  000116  0100               	movlb	0	; () banked
  6751  000118  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6752  00011A  0E0A               	movlw	10
  6753  00011C  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  6754  00011E  EC7A  F01D         	call	___wmul	;wreg free
  6755  000122  C079  F0C0         	movff	?___wmul,sprintf@width
  6756  000126  C07A  F0C1         	movff	?___wmul+1,sprintf@width+1
  6757                           
  6758                           ;doprnt.c: 601: width += *f++ - '0';
  6759  00012A  0ED0               	movlw	208
  6760  00012C  0100               	movlb	0	; () banked
  6761  00012E  6FB3               	movwf	??_sprintf& (0+255),b
  6762  000130  0EFF               	movlw	255
  6763  000132  0100               	movlb	0	; () banked
  6764  000134  6FB4               	movwf	(??_sprintf+1)& (0+255),b
  6765  000136  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6766  00013A  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6767  00013E                     	if	0	;tblptru may be non-zero
  6768  00013E                     	endif
  6769  00013E                     	if	0	;tblptru may be non-zero
  6770  00013E                     	endif
  6771  00013E  0008               	tblrd		*
  6772  000140  50F5               	movf	tablat,w,c
  6773  000142  0100               	movlb	0	; () banked
  6774  000144  6FB5               	movwf	(??_sprintf+2)& (0+255),b
  6775  000146  6BB6               	clrf	(??_sprintf+3)& (0+255),b
  6776  000148  0100               	movlb	0	; () banked
  6777  00014A  51B3               	movf	??_sprintf& (0+255),w,b
  6778  00014C  0100               	movlb	0	; () banked
  6779  00014E  27B5               	addwf	(??_sprintf+2)& (0+255),f,b
  6780  000150  0100               	movlb	0	; () banked
  6781  000152  51B4               	movf	(??_sprintf+1)& (0+255),w,b
  6782  000154  0100               	movlb	0	; () banked
  6783  000156  23B6               	addwfc	(??_sprintf+3)& (0+255),f,b
  6784  000158  0100               	movlb	0	; () banked
  6785  00015A  51B5               	movf	(??_sprintf+2)& (0+255),w,b
  6786  00015C  0100               	movlb	0	; () banked
  6787  00015E  27C0               	addwf	sprintf@width& (0+255),f,b
  6788  000160  0100               	movlb	0	; () banked
  6789  000162  51B6               	movf	(??_sprintf+3)& (0+255),w,b
  6790  000164  0100               	movlb	0	; () banked
  6791  000166  23C1               	addwfc	(sprintf@width+1)& (0+255),f,b
  6792                           
  6793                           ; BSR set to: 0
  6794  000168  0100               	movlb	0	; () banked
  6795  00016A  4BA7               	infsnz	sprintf@f& (0+255),f,b
  6796  00016C  2BA8               	incf	(sprintf@f+1)& (0+255),f,b
  6797                           
  6798                           ; BSR set to: 0
  6799                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6800  00016E  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6801  000172  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6802  000176                     	if	0	;tblptru may be non-zero
  6803  000176                     	endif
  6804  000176                     	if	0	;tblptru may be non-zero
  6805  000176                     	endif
  6806  000176  0008               	tblrd		*
  6807  000178  50F5               	movf	tablat,w,c
  6808  00017A  EC2D  F01E         	call	_isdigit
  6809  00017E  B0D8               	btfsc	status,0,c
  6810  000180  D7C5               	goto	l5470
  6811  000182                     l5478:
  6812                           
  6813                           ;doprnt.c: 608: }
  6814                           ;doprnt.c: 611: if(*f == '.') {
  6815  000182  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6816  000186  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6817  00018A                     	if	0	;tblptru may be non-zero
  6818  00018A                     	endif
  6819  00018A                     	if	0	;tblptru may be non-zero
  6820  00018A                     	endif
  6821  00018A  0008               	tblrd		*
  6822  00018C  50F5               	movf	tablat,w,c
  6823  00018E  0A2E               	xorlw	46
  6824  000190  A4D8               	btfss	status,2,c
  6825  000192  D039               	goto	l5490
  6826                           
  6827                           ;doprnt.c: 612: flag |= 0x4000;
  6828  000194  0100               	movlb	0	; () banked
  6829  000196  8DBF               	bsf	(sprintf@flag+1)& (0+255),6,b
  6830                           
  6831                           ;doprnt.c: 613: f++;
  6832  000198  0100               	movlb	0	; () banked
  6833  00019A  4BA7               	infsnz	sprintf@f& (0+255),f,b
  6834  00019C  2BA8               	incf	(sprintf@f+1)& (0+255),f,b
  6835                           
  6836                           ; BSR set to: 0
  6837                           ;doprnt.c: 620: {
  6838                           ;doprnt.c: 621: prec = 0;
  6839  00019E  0E00               	movlw	0
  6840  0001A0  0100               	movlb	0	; () banked
  6841  0001A2  6FD0               	movwf	(sprintf@prec+1)& (0+255),b
  6842  0001A4  0E00               	movlw	0
  6843  0001A6  6FCF               	movwf	sprintf@prec& (0+255),b
  6844                           
  6845                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6846  0001A8  D023               	goto	l5488
  6847  0001AA                     l5484:
  6848                           
  6849                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6850  0001AA  C0CF  F079         	movff	sprintf@prec,___wmul@multiplier
  6851  0001AE  C0D0  F07A         	movff	sprintf@prec+1,___wmul@multiplier+1
  6852  0001B2  0E00               	movlw	0
  6853  0001B4  0100               	movlb	0	; () banked
  6854  0001B6  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6855  0001B8  0E0A               	movlw	10
  6856  0001BA  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  6857  0001BC  EC7A  F01D         	call	___wmul	;wreg free
  6858  0001C0  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6859  0001C4  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6860  0001C8                     	if	0	;tblptru may be non-zero
  6861  0001C8                     	endif
  6862  0001C8                     	if	0	;tblptru may be non-zero
  6863  0001C8                     	endif
  6864  0001C8  0008               	tblrd		*
  6865  0001CA  50F5               	movf	tablat,w,c
  6866  0001CC  0100               	movlb	0	; () banked
  6867  0001CE  2779               	addwf	?___wmul& (0+255),f,b
  6868  0001D0  0E00               	movlw	0
  6869  0001D2  0100               	movlb	0	; () banked
  6870  0001D4  237A               	addwfc	(?___wmul+1)& (0+255),f,b
  6871  0001D6  0ED0               	movlw	208
  6872  0001D8  0100               	movlb	0	; () banked
  6873  0001DA  2579               	addwf	?___wmul& (0+255),w,b
  6874  0001DC  0100               	movlb	0	; () banked
  6875  0001DE  6FCF               	movwf	sprintf@prec& (0+255),b
  6876  0001E0  0EFF               	movlw	255
  6877  0001E2  0100               	movlb	0	; () banked
  6878  0001E4  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  6879  0001E6  0100               	movlb	0	; () banked
  6880  0001E8  6FD0               	movwf	(sprintf@prec+1)& (0+255),b
  6881                           
  6882                           ; BSR set to: 0
  6883  0001EA  0100               	movlb	0	; () banked
  6884  0001EC  4BA7               	infsnz	sprintf@f& (0+255),f,b
  6885  0001EE  2BA8               	incf	(sprintf@f+1)& (0+255),f,b
  6886  0001F0                     l5488:
  6887                           
  6888                           ; BSR set to: 0
  6889  0001F0  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6890  0001F4  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6891  0001F8                     	if	0	;tblptru may be non-zero
  6892  0001F8                     	endif
  6893  0001F8                     	if	0	;tblptru may be non-zero
  6894  0001F8                     	endif
  6895  0001F8  0008               	tblrd		*
  6896  0001FA  50F5               	movf	tablat,w,c
  6897  0001FC  EC2D  F01E         	call	_isdigit
  6898  000200  A0D8               	btfss	status,0,c
  6899  000202  D00C               	goto	l5498
  6900  000204  D7D2               	goto	l5484
  6901  000206                     l5490:
  6902                           
  6903                           ;doprnt.c: 626: prec = 0;
  6904  000206  0E00               	movlw	0
  6905  000208  0100               	movlb	0	; () banked
  6906  00020A  6FD0               	movwf	(sprintf@prec+1)& (0+255),b
  6907  00020C  0E00               	movlw	0
  6908  00020E  6FCF               	movwf	sprintf@prec& (0+255),b
  6909                           
  6910                           ; BSR set to: 0
  6911                           ;doprnt.c: 628: flag |= 0x1000;
  6912  000210  0100               	movlb	0	; () banked
  6913  000212  89BF               	bsf	(sprintf@flag+1)& (0+255),4,b
  6914                           
  6915                           ; BSR set to: 0
  6916                           ;doprnt.c: 630: }
  6917                           ;doprnt.c: 635: switch(c = *f++) {
  6918  000214  D003               	goto	l5498
  6919  000216                     l5494:
  6920                           
  6921                           ; BSR set to: 0
  6922                           ;doprnt.c: 663: flag |= 0x400;
  6923  000216  0100               	movlb	0	; () banked
  6924  000218  85BF               	bsf	(sprintf@flag+1)& (0+255),2,b
  6925                           
  6926                           ; BSR set to: 0
  6927                           ;doprnt.c: 698: case 'i':
  6928                           ;doprnt.c: 699: break;
  6929                           
  6930                           ; BSR set to: 0
  6931                           
  6932                           ;doprnt.c: 697: case 'd':
  6933                           
  6934                           ;doprnt.c: 664: break;
  6935  00021A  D01A               	goto	l5500
  6936  00021C                     l5498:
  6937  00021C  C0A7  FFF6         	movff	sprintf@f,tblptrl
  6938  000220  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  6939  000224  0100               	movlb	0	; () banked
  6940  000226  4BA7               	infsnz	sprintf@f& (0+255),f,b
  6941  000228  2BA8               	incf	(sprintf@f+1)& (0+255),f,b
  6942  00022A                     	if	0	;tblptru may be non-zero
  6943  00022A                     	endif
  6944  00022A                     	if	0	;tblptru may be non-zero
  6945  00022A                     	endif
  6946  00022A  0008               	tblrd		*
  6947  00022C  CFF5 F0D1          	movff	tablat,sprintf@c
  6948  000230  0100               	movlb	0	; () banked
  6949  000232  51D1               	movf	sprintf@c& (0+255),w,b
  6950                           
  6951                           ; Switch size 1, requested type "space"
  6952                           ; Number of cases is 4, Range of values is 0 to 105
  6953                           ; switch strategies available:
  6954                           ; Name         Instructions Cycles
  6955                           ; simple_byte           13     7 (average)
  6956                           ;	Chosen strategy is simple_byte
  6957  000234  0A00               	xorlw	0	; case 0
  6958  000236  B4D8               	btfsc	status,2,c
  6959  000238  EF1D  F006         	goto	l5746
  6960  00023C  0A64               	xorlw	100	; case 100
  6961  00023E  B4D8               	btfsc	status,2,c
  6962  000240  D007               	goto	l5500
  6963  000242  0A02               	xorlw	2	; case 102
  6964  000244  B4D8               	btfsc	status,2,c
  6965  000246  D7E7               	goto	l5494
  6966  000248  0A0F               	xorlw	15	; case 105
  6967  00024A  A4D8               	btfss	status,2,c
  6968  00024C  EF0E  F006         	goto	l5744
  6969  000250                     l5500:
  6970                           
  6971                           ; BSR set to: 0
  6972                           ;doprnt.c: 825: if(flag & (0x700)) {
  6973  000250  0E07               	movlw	7
  6974  000252  0100               	movlb	0	; () banked
  6975  000254  15BF               	andwf	(sprintf@flag+1)& (0+255),w,b
  6976  000256  B4D8               	btfsc	status,2,c
  6977  000258  D379               	goto	l5664
  6978                           
  6979                           ; BSR set to: 0
  6980                           ;doprnt.c: 827: if(flag & 0x1000)
  6981  00025A  0100               	movlb	0	; () banked
  6982  00025C  A9BF               	btfss	(sprintf@flag+1)& (0+255),4,b
  6983  00025E  D005               	goto	l5506
  6984                           
  6985                           ; BSR set to: 0
  6986                           ;doprnt.c: 829: prec = 6;
  6987  000260  0E00               	movlw	0
  6988  000262  0100               	movlb	0	; () banked
  6989  000264  6FD0               	movwf	(sprintf@prec+1)& (0+255),b
  6990  000266  0E06               	movlw	6
  6991  000268  6FCF               	movwf	sprintf@prec& (0+255),b
  6992  00026A                     l5506:
  6993                           
  6994                           ; BSR set to: 0
  6995                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  6996  00026A  C0BC  FFD9         	movff	sprintf@ap,fsr2l
  6997  00026E  C0BD  FFDA         	movff	sprintf@ap+1,fsr2h
  6998  000272  CFDE F0CC          	movff	postinc2,sprintf@fval
  6999  000276  CFDE F0CD          	movff	postinc2,sprintf@fval+1
  7000  00027A  CFDD F0CE          	movff	postdec2,sprintf@fval+2
  7001                           
  7002                           ; BSR set to: 0
  7003  00027E  0E03               	movlw	3
  7004  000280  0100               	movlb	0	; () banked
  7005  000282  27BC               	addwf	sprintf@ap& (0+255),f,b
  7006  000284  0E00               	movlw	0
  7007  000286  23BD               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7008                           
  7009                           ; BSR set to: 0
  7010                           ;doprnt.c: 831: if(fval < 0.0) {
  7011  000288  0100               	movlb	0	; () banked
  7012  00028A  AFCE               	btfss	(sprintf@fval+2)& (0+255),7,b
  7013  00028C  D011               	goto	l5516
  7014                           
  7015                           ; BSR set to: 0
  7016                           ;doprnt.c: 832: fval = -fval;
  7017  00028E  C0CC  F071         	movff	sprintf@fval,___ftneg@f1
  7018  000292  C0CD  F072         	movff	sprintf@fval+1,___ftneg@f1+1
  7019  000296  C0CE  F073         	movff	sprintf@fval+2,___ftneg@f1+2
  7020  00029A  ECDC  F01D         	call	___ftneg	;wreg free
  7021  00029E  C071  F0CC         	movff	?___ftneg,sprintf@fval
  7022  0002A2  C072  F0CD         	movff	?___ftneg+1,sprintf@fval+1
  7023  0002A6  C073  F0CE         	movff	?___ftneg+2,sprintf@fval+2
  7024                           
  7025                           ;doprnt.c: 833: flag |= 0x03;
  7026  0002AA  0E03               	movlw	3
  7027  0002AC  0100               	movlb	0	; () banked
  7028  0002AE  13BE               	iorwf	sprintf@flag& (0+255),f,b
  7029  0002B0                     l5516:
  7030                           
  7031                           ; BSR set to: 0
  7032                           ;doprnt.c: 834: }
  7033                           ;doprnt.c: 835: exp = 0;
  7034  0002B0  0E00               	movlw	0
  7035  0002B2  0100               	movlb	0	; () banked
  7036  0002B4  6FCB               	movwf	(sprintf@exp+1)& (0+255),b
  7037  0002B6  0E00               	movlw	0
  7038  0002B8  6FCA               	movwf	sprintf@exp& (0+255),b
  7039                           
  7040                           ; BSR set to: 0
  7041                           ;doprnt.c: 836: if( fval!=0) {
  7042  0002BA  0100               	movlb	0	; () banked
  7043  0002BC  51CC               	movf	sprintf@fval& (0+255),w,b
  7044  0002BE  0100               	movlb	0	; () banked
  7045  0002C0  11CD               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7046  0002C2  0100               	movlb	0	; () banked
  7047  0002C4  11CE               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7048  0002C6  B4D8               	btfsc	status,2,c
  7049  0002C8  D09B               	goto	l5544
  7050                           
  7051                           ; BSR set to: 0
  7052                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  7053  0002CA  0E82               	movlw	130
  7054  0002CC  0100               	movlb	0	; () banked
  7055  0002CE  6FB3               	movwf	??_sprintf& (0+255),b
  7056  0002D0  0EFF               	movlw	255
  7057  0002D2  0100               	movlb	0	; () banked
  7058  0002D4  6FB4               	movwf	(??_sprintf+1)& (0+255),b
  7059  0002D6  C0CC  F0B5         	movff	sprintf@fval,??_sprintf+2
  7060  0002DA  C0CD  F0B6         	movff	sprintf@fval+1,??_sprintf+3
  7061  0002DE  C0CE  F0B7         	movff	sprintf@fval+2,??_sprintf+4
  7062  0002E2  C0CF  F0B8         	movff	sprintf@fval+3,??_sprintf+5
  7063  0002E6  0E10               	movlw	16
  7064  0002E8  D006               	goto	u5590
  7065  0002EA                     u5595:
  7066  0002EA  0100               	movlb	0	; () banked
  7067  0002EC  90D8               	bcf	status,0,c
  7068  0002EE  33B8               	rrcf	(??_sprintf+5)& (0+255),f,b
  7069  0002F0  33B7               	rrcf	(??_sprintf+4)& (0+255),f,b
  7070  0002F2  33B6               	rrcf	(??_sprintf+3)& (0+255),f,b
  7071  0002F4  33B5               	rrcf	(??_sprintf+2)& (0+255),f,b
  7072  0002F6                     u5590:
  7073  0002F6  2EE8               	decfsz	wreg,f,c
  7074  0002F8  D7F8               	goto	u5595
  7075  0002FA  0100               	movlb	0	; () banked
  7076  0002FC  51B5               	movf	(??_sprintf+2)& (0+255),w,b
  7077  0002FE  0100               	movlb	0	; () banked
  7078  000300  25B3               	addwf	??_sprintf& (0+255),w,b
  7079  000302  0100               	movlb	0	; () banked
  7080  000304  6FCA               	movwf	sprintf@exp& (0+255),b
  7081  000306  0E00               	movlw	0
  7082  000308  0100               	movlb	0	; () banked
  7083  00030A  21B4               	addwfc	(??_sprintf+1)& (0+255),w,b
  7084  00030C  0100               	movlb	0	; () banked
  7085  00030E  6FCB               	movwf	(sprintf@exp+1)& (0+255),b
  7086                           
  7087                           ; BSR set to: 0
  7088                           ;doprnt.c: 838: exp--;
  7089  000310  0100               	movlb	0	; () banked
  7090  000312  07CA               	decf	sprintf@exp& (0+255),f,b
  7091  000314  A0D8               	btfss	status,0,c
  7092  000316  07CB               	decf	(sprintf@exp+1)& (0+255),f,b
  7093                           
  7094                           ; BSR set to: 0
  7095                           ;doprnt.c: 839: exp *= 3;
  7096  000318  C0CA  F079         	movff	sprintf@exp,___wmul@multiplier
  7097  00031C  C0CB  F07A         	movff	sprintf@exp+1,___wmul@multiplier+1
  7098  000320  0E00               	movlw	0
  7099  000322  0100               	movlb	0	; () banked
  7100  000324  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7101  000326  0E03               	movlw	3
  7102  000328  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  7103  00032A  EC7A  F01D         	call	___wmul	;wreg free
  7104  00032E  C079  F0CA         	movff	?___wmul,sprintf@exp
  7105  000332  C07A  F0CB         	movff	?___wmul+1,sprintf@exp+1
  7106                           
  7107                           ;doprnt.c: 840: exp /= 10;
  7108  000336  C0CA  F075         	movff	sprintf@exp,___awdiv@dividend
  7109  00033A  C0CB  F076         	movff	sprintf@exp+1,___awdiv@dividend+1
  7110  00033E  0E00               	movlw	0
  7111  000340  0100               	movlb	0	; () banked
  7112  000342  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  7113  000344  0E0A               	movlw	10
  7114  000346  6F77               	movwf	___awdiv@divisor& (0+255),b
  7115  000348  ECF5  F019         	call	___awdiv	;wreg free
  7116  00034C  C075  F0CA         	movff	?___awdiv,sprintf@exp
  7117  000350  C076  F0CB         	movff	?___awdiv+1,sprintf@exp+1
  7118                           
  7119                           ;doprnt.c: 841: if(exp < 0)
  7120  000354  0100               	movlb	0	; () banked
  7121  000356  AFCB               	btfss	(sprintf@exp+1)& (0+255),7,b
  7122  000358  D004               	goto	l5532
  7123                           
  7124                           ; BSR set to: 0
  7125                           ;doprnt.c: 842: exp--;
  7126  00035A  0100               	movlb	0	; () banked
  7127  00035C  07CA               	decf	sprintf@exp& (0+255),f,b
  7128  00035E  A0D8               	btfss	status,0,c
  7129  000360  07CB               	decf	(sprintf@exp+1)& (0+255),f,b
  7130  000362                     l5532:
  7131                           
  7132                           ; BSR set to: 0
  7133                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  7134  000362  0100               	movlb	0	; () banked
  7135  000364  51CA               	movf	sprintf@exp& (0+255),w,b
  7136  000366  0800               	sublw	0
  7137  000368  ECF5  F009         	call	_scale
  7138  00036C  C089  F0C2         	movff	?_scale,sprintf@tmpval
  7139  000370  C08A  F0C3         	movff	?_scale+1,sprintf@tmpval+1
  7140  000374  C08B  F0C4         	movff	?_scale+2,sprintf@tmpval+2
  7141                           
  7142                           ;doprnt.c: 847: tmpval.integ *= fval;
  7143  000378  C0C2  F07D         	movff	sprintf@tmpval,___ftmul@f1
  7144  00037C  C0C3  F07E         	movff	sprintf@tmpval+1,___ftmul@f1+1
  7145  000380  C0C4  F07F         	movff	sprintf@tmpval+2,___ftmul@f1+2
  7146  000384  C0CC  F080         	movff	sprintf@fval,___ftmul@f2
  7147  000388  C0CD  F081         	movff	sprintf@fval+1,___ftmul@f2+1
  7148  00038C  C0CE  F082         	movff	sprintf@fval+2,___ftmul@f2+2
  7149  000390  ECCC  F014         	call	___ftmul	;wreg free
  7150  000394  C07D  F0C2         	movff	?___ftmul,sprintf@tmpval
  7151  000398  C07E  F0C3         	movff	?___ftmul+1,sprintf@tmpval+1
  7152  00039C  C07F  F0C4         	movff	?___ftmul+2,sprintf@tmpval+2
  7153                           
  7154                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  7155  0003A0  C0C2  F071         	movff	sprintf@tmpval,___ftge@ff1
  7156  0003A4  C0C3  F072         	movff	sprintf@tmpval+1,___ftge@ff1+1
  7157  0003A8  C0C4  F073         	movff	sprintf@tmpval+2,___ftge@ff1+2
  7158  0003AC  0E00               	movlw	0
  7159  0003AE  0100               	movlb	0	; () banked
  7160  0003B0  6F74               	movwf	___ftge@ff2& (0+255),b
  7161  0003B2  0E80               	movlw	128
  7162  0003B4  0100               	movlb	0	; () banked
  7163  0003B6  6F75               	movwf	(___ftge@ff2+1)& (0+255),b
  7164  0003B8  0E3F               	movlw	63
  7165  0003BA  0100               	movlb	0	; () banked
  7166  0003BC  6F76               	movwf	(___ftge@ff2+2)& (0+255),b
  7167  0003BE  EC41  F019         	call	___ftge	;wreg free
  7168  0003C2  0100               	movlb	0	; () banked
  7169  0003C4  B0D8               	btfsc	status,0,c
  7170  0003C6  D005               	goto	l5540
  7171                           
  7172                           ; BSR set to: 0
  7173                           ;doprnt.c: 849: exp--;
  7174  0003C8  0100               	movlb	0	; () banked
  7175  0003CA  07CA               	decf	sprintf@exp& (0+255),f,b
  7176  0003CC  A0D8               	btfss	status,0,c
  7177  0003CE  07CB               	decf	(sprintf@exp+1)& (0+255),f,b
  7178  0003D0  D017               	goto	l5544
  7179  0003D2                     l5540:
  7180                           
  7181                           ; BSR set to: 0
  7182                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  7183  0003D2  C0C2  F071         	movff	sprintf@tmpval,___ftge@ff1
  7184  0003D6  C0C3  F072         	movff	sprintf@tmpval+1,___ftge@ff1+1
  7185  0003DA  C0C4  F073         	movff	sprintf@tmpval+2,___ftge@ff1+2
  7186  0003DE  0E00               	movlw	0
  7187  0003E0  0100               	movlb	0	; () banked
  7188  0003E2  6F74               	movwf	___ftge@ff2& (0+255),b
  7189  0003E4  0E20               	movlw	32
  7190  0003E6  0100               	movlb	0	; () banked
  7191  0003E8  6F75               	movwf	(___ftge@ff2+1)& (0+255),b
  7192  0003EA  0E41               	movlw	65
  7193  0003EC  0100               	movlb	0	; () banked
  7194  0003EE  6F76               	movwf	(___ftge@ff2+2)& (0+255),b
  7195  0003F0  EC41  F019         	call	___ftge	;wreg free
  7196  0003F4  0100               	movlb	0	; () banked
  7197  0003F6  A0D8               	btfss	status,0,c
  7198  0003F8  D003               	goto	l5544
  7199                           
  7200                           ; BSR set to: 0
  7201                           ;doprnt.c: 851: exp++;
  7202  0003FA  0100               	movlb	0	; () banked
  7203  0003FC  4BCA               	infsnz	sprintf@exp& (0+255),f,b
  7204  0003FE  2BCB               	incf	(sprintf@exp+1)& (0+255),f,b
  7205  000400                     l5544:
  7206                           
  7207                           ; BSR set to: 0
  7208                           ;doprnt.c: 852: }
  7209                           ;doprnt.c: 1112: if(prec <= 12)
  7210  000400  0100               	movlb	0	; () banked
  7211  000402  BFD0               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7212  000404  D008               	goto	l5546
  7213  000406  0100               	movlb	0	; () banked
  7214  000408  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  7215  00040A  E11D               	bnz	l5548
  7216  00040C  0E0D               	movlw	13
  7217  00040E  0100               	movlb	0	; () banked
  7218  000410  5DCF               	subwf	sprintf@prec& (0+255),w,b
  7219  000412  B0D8               	btfsc	status,0,c
  7220  000414  D018               	goto	l5548
  7221  000416                     l5546:
  7222                           
  7223                           ; BSR set to: 0
  7224                           ;doprnt.c: 1113: fval += fround(prec);
  7225  000416  C0CC  F093         	movff	sprintf@fval,___ftadd@f1
  7226  00041A  C0CD  F094         	movff	sprintf@fval+1,___ftadd@f1+1
  7227  00041E  C0CE  F095         	movff	sprintf@fval+2,___ftadd@f1+2
  7228  000422  0100               	movlb	0	; () banked
  7229  000424  51CF               	movf	sprintf@prec& (0+255),w,b
  7230  000426  EC44  F00E         	call	_fround
  7231  00042A  C089  F096         	movff	?_fround,___ftadd@f2
  7232  00042E  C08A  F097         	movff	?_fround+1,___ftadd@f2+1
  7233  000432  C08B  F098         	movff	?_fround+2,___ftadd@f2+2
  7234  000436  EC9A  F00F         	call	___ftadd	;wreg free
  7235  00043A  C093  F0CC         	movff	?___ftadd,sprintf@fval
  7236  00043E  C094  F0CD         	movff	?___ftadd+1,sprintf@fval+1
  7237  000442  C095  F0CE         	movff	?___ftadd+2,sprintf@fval+2
  7238  000446                     l5548:
  7239                           
  7240                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  7241  000446  0100               	movlb	0	; () banked
  7242  000448  BFCB               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7243  00044A  D008               	goto	l5550
  7244  00044C  0100               	movlb	0	; () banked
  7245  00044E  51CB               	movf	(sprintf@exp+1)& (0+255),w,b
  7246  000450  E12A               	bnz	l5556
  7247  000452  0E0A               	movlw	10
  7248  000454  0100               	movlb	0	; () banked
  7249  000456  5DCA               	subwf	sprintf@exp& (0+255),w,b
  7250  000458  B0D8               	btfsc	status,0,c
  7251  00045A  D025               	goto	l5556
  7252  00045C                     l5550:
  7253                           
  7254                           ; BSR set to: 0
  7255  00045C  0100               	movlb	0	; () banked
  7256  00045E  51CC               	movf	sprintf@fval& (0+255),w,b
  7257  000460  0100               	movlb	0	; () banked
  7258  000462  11CD               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7259  000464  0100               	movlb	0	; () banked
  7260  000466  11CE               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7261  000468  B4D8               	btfsc	status,2,c
  7262  00046A  D063               	goto	l5570
  7263                           
  7264                           ; BSR set to: 0
  7265  00046C  C0CC  F090         	movff	sprintf@fval,___fttol@f1
  7266  000470  C0CD  F091         	movff	sprintf@fval+1,___fttol@f1+1
  7267  000474  C0CE  F092         	movff	sprintf@fval+2,___fttol@f1+2
  7268  000478  EC75  F015         	call	___fttol	;wreg free
  7269  00047C  0100               	movlb	0	; () banked
  7270  00047E  5190               	movf	?___fttol& (0+255),w,b
  7271  000480  0100               	movlb	0	; () banked
  7272  000482  1191               	iorwf	(?___fttol+1)& (0+255),w,b
  7273  000484  0100               	movlb	0	; () banked
  7274  000486  1192               	iorwf	(?___fttol+2)& (0+255),w,b
  7275  000488  0100               	movlb	0	; () banked
  7276  00048A  1193               	iorwf	(?___fttol+3)& (0+255),w,b
  7277  00048C  A4D8               	btfss	status,2,c
  7278  00048E  D051               	goto	l5570
  7279                           
  7280                           ; BSR set to: 0
  7281  000490  0100               	movlb	0	; () banked
  7282  000492  BFCB               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7283  000494  D04E               	goto	l5570
  7284  000496  0100               	movlb	0	; () banked
  7285  000498  51CB               	movf	(sprintf@exp+1)& (0+255),w,b
  7286  00049A  E105               	bnz	l5556
  7287  00049C  0E02               	movlw	2
  7288  00049E  0100               	movlb	0	; () banked
  7289  0004A0  5DCA               	subwf	sprintf@exp& (0+255),w,b
  7290  0004A2  A0D8               	btfss	status,0,c
  7291  0004A4  D046               	goto	l5570
  7292  0004A6                     l5556:
  7293                           
  7294                           ; BSR set to: 0
  7295                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  7296  0004A6  C0C2  F071         	movff	sprintf@tmpval,___ftge@ff1
  7297  0004AA  C0C3  F072         	movff	sprintf@tmpval+1,___ftge@ff1+1
  7298  0004AE  C0C4  F073         	movff	sprintf@tmpval+2,___ftge@ff1+2
  7299  0004B2  0E70               	movlw	112
  7300  0004B4  0100               	movlb	0	; () banked
  7301  0004B6  6F74               	movwf	___ftge@ff2& (0+255),b
  7302  0004B8  0E89               	movlw	137
  7303  0004BA  0100               	movlb	0	; () banked
  7304  0004BC  6F75               	movwf	(___ftge@ff2+1)& (0+255),b
  7305  0004BE  0E40               	movlw	64
  7306  0004C0  0100               	movlb	0	; () banked
  7307  0004C2  6F76               	movwf	(___ftge@ff2+2)& (0+255),b
  7308  0004C4  EC41  F019         	call	___ftge	;wreg free
  7309  0004C8  0100               	movlb	0	; () banked
  7310  0004CA  B0D8               	btfsc	status,0,c
  7311  0004CC  D003               	goto	l5560
  7312                           
  7313                           ; BSR set to: 0
  7314                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  7315  0004CE  0100               	movlb	0	; () banked
  7316  0004D0  0EF7               	movlw	247
  7317  0004D2  D002               	goto	L4
  7318  0004D4                     l5560:
  7319                           
  7320                           ; BSR set to: 0
  7321                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  7322  0004D4  0100               	movlb	0	; () banked
  7323  0004D6  0EF8               	movlw	248
  7324  0004D8                     L4:
  7325  0004D8  27CA               	addwf	sprintf@exp& (0+255),f,b
  7326  0004DA  0EFF               	movlw	255
  7327  0004DC  23CB               	addwfc	(sprintf@exp+1)& (0+255),f,b
  7328                           
  7329                           ; BSR set to: 0
  7330                           ;doprnt.c: 1124: }
  7331                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  7332                           
  7333                           ; BSR set to: 0
  7334  0004DE  0100               	movlb	0	; () banked
  7335  0004E0  51CA               	movf	sprintf@exp& (0+255),w,b
  7336  0004E2  ECF5  F009         	call	_scale
  7337  0004E6  C089  F0C2         	movff	?_scale,sprintf@tmpval
  7338  0004EA  C08A  F0C3         	movff	?_scale+1,sprintf@tmpval+1
  7339  0004EE  C08B  F0C4         	movff	?_scale+2,sprintf@tmpval+2
  7340                           
  7341                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  7342  0004F2  C0CC  F071         	movff	sprintf@fval,__tdiv_to_l_@f1
  7343  0004F6  C0CD  F072         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  7344  0004FA  C0CE  F073         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  7345  0004FE  C0C2  F074         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  7346  000502  C0C3  F075         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  7347  000506  C0C4  F076         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  7348  00050A  EC69  F013         	call	__tdiv_to_l_	;wreg free
  7349  00050E  C071  F0C6         	movff	?__tdiv_to_l_,sprintf@val
  7350  000512  C072  F0C7         	movff	?__tdiv_to_l_+1,sprintf@val+1
  7351  000516  C073  F0C8         	movff	?__tdiv_to_l_+2,sprintf@val+2
  7352  00051A  C074  F0C9         	movff	?__tdiv_to_l_+3,sprintf@val+3
  7353                           
  7354                           ;doprnt.c: 1129: fval = 0.0;
  7355  00051E  0E00               	movlw	0
  7356  000520  0100               	movlb	0	; () banked
  7357  000522  6FCC               	movwf	sprintf@fval& (0+255),b
  7358  000524  0E00               	movlw	0
  7359  000526  0100               	movlb	0	; () banked
  7360  000528  6FCD               	movwf	(sprintf@fval+1)& (0+255),b
  7361  00052A  0E00               	movlw	0
  7362  00052C  0100               	movlb	0	; () banked
  7363  00052E  6FCE               	movwf	(sprintf@fval+2)& (0+255),b
  7364                           
  7365                           ;doprnt.c: 1130: } else {
  7366  000530  D033               	goto	l5574
  7367  000532                     l5570:
  7368                           
  7369                           ; BSR set to: 0
  7370                           ;doprnt.c: 1131: val = (unsigned long)fval;
  7371  000532  C0CC  F090         	movff	sprintf@fval,___fttol@f1
  7372  000536  C0CD  F091         	movff	sprintf@fval+1,___fttol@f1+1
  7373  00053A  C0CE  F092         	movff	sprintf@fval+2,___fttol@f1+2
  7374  00053E  EC75  F015         	call	___fttol	;wreg free
  7375  000542  C090  F0C6         	movff	?___fttol,sprintf@val
  7376  000546  C091  F0C7         	movff	?___fttol+1,sprintf@val+1
  7377  00054A  C092  F0C8         	movff	?___fttol+2,sprintf@val+2
  7378  00054E  C093  F0C9         	movff	?___fttol+3,sprintf@val+3
  7379                           
  7380                           ;doprnt.c: 1132: fval -= (double)val;
  7381  000552  C0CC  F09F         	movff	sprintf@fval,___ftsub@f1
  7382  000556  C0CD  F0A0         	movff	sprintf@fval+1,___ftsub@f1+1
  7383  00055A  C0CE  F0A1         	movff	sprintf@fval+2,___ftsub@f1+2
  7384  00055E  C0C6  F076         	movff	sprintf@val,___lltoft@c
  7385  000562  C0C7  F077         	movff	sprintf@val+1,___lltoft@c+1
  7386  000566  C0C8  F078         	movff	sprintf@val+2,___lltoft@c+2
  7387  00056A  C0C9  F079         	movff	sprintf@val+3,___lltoft@c+3
  7388  00056E  EC57  F01B         	call	___lltoft	;wreg free
  7389  000572  C076  F0A2         	movff	?___lltoft,___ftsub@f2
  7390  000576  C077  F0A3         	movff	?___lltoft+1,___ftsub@f2+1
  7391  00057A  C078  F0A4         	movff	?___lltoft+2,___ftsub@f2+2
  7392  00057E  EC12  F01C         	call	___ftsub	;wreg free
  7393  000582  C09F  F0CC         	movff	?___ftsub,sprintf@fval
  7394  000586  C0A0  F0CD         	movff	?___ftsub+1,sprintf@fval+1
  7395  00058A  C0A1  F0CE         	movff	?___ftsub+2,sprintf@fval+2
  7396                           
  7397                           ;doprnt.c: 1133: exp = 0;
  7398  00058E  0E00               	movlw	0
  7399  000590  0100               	movlb	0	; () banked
  7400  000592  6FCB               	movwf	(sprintf@exp+1)& (0+255),b
  7401  000594  0E00               	movlw	0
  7402  000596  6FCA               	movwf	sprintf@exp& (0+255),b
  7403  000598                     l5574:
  7404                           
  7405                           ; BSR set to: 0
  7406                           ;doprnt.c: 1134: }
  7407                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  7408  000598  0E01               	movlw	1
  7409  00059A  0100               	movlb	0	; () banked
  7410  00059C  6FD1               	movwf	sprintf@c& (0+255),b
  7411  00059E                     l5576:
  7412                           
  7413                           ; BSR set to: 0
  7414  00059E  0E0A               	movlw	10
  7415  0005A0  0100               	movlb	0	; () banked
  7416  0005A2  19D1               	xorwf	sprintf@c& (0+255),w,b
  7417  0005A4  B4D8               	btfsc	status,2,c
  7418  0005A6  D01E               	goto	l5588
  7419                           
  7420                           ; BSR set to: 0
  7421                           ;doprnt.c: 1137: if(val < dpowers[c])
  7422                           
  7423                           ; BSR set to: 0
  7424                           
  7425                           ; BSR set to: 0
  7426  0005A8  0100               	movlb	0	; () banked
  7427  0005AA  51D1               	movf	sprintf@c& (0+255),w,b
  7428  0005AC  0D04               	mullw	4
  7429  0005AE  0EF5               	movlw	low _dpowers
  7430  0005B0  24F3               	addwf	prodl,w,c
  7431  0005B2  6EF6               	movwf	tblptrl,c
  7432  0005B4  0E7E               	movlw	high _dpowers
  7433  0005B6  20F4               	addwfc	prodh,w,c
  7434  0005B8  6EF7               	movwf	tblptrh,c
  7435  0005BA                     	if	0	;There are less than 3 active tblptr bytes
  7436  0005BA                     	endif
  7437  0005BA  0009               	tblrd		*+
  7438  0005BC  50F5               	movf	tablat,w,c
  7439  0005BE  0100               	movlb	0	; () banked
  7440  0005C0  5DC6               	subwf	sprintf@val& (0+255),w,b
  7441  0005C2  0009               	tblrd		*+
  7442  0005C4  50F5               	movf	tablat,w,c
  7443  0005C6  0100               	movlb	0	; () banked
  7444  0005C8  59C7               	subwfb	(sprintf@val+1)& (0+255),w,b
  7445  0005CA  0009               	tblrd		*+
  7446  0005CC  50F5               	movf	tablat,w,c
  7447  0005CE  0100               	movlb	0	; () banked
  7448  0005D0  59C8               	subwfb	(sprintf@val+2)& (0+255),w,b
  7449  0005D2  0009               	tblrd		*+
  7450  0005D4  50F5               	movf	tablat,w,c
  7451  0005D6  0100               	movlb	0	; () banked
  7452  0005D8  59C9               	subwfb	(sprintf@val+3)& (0+255),w,b
  7453  0005DA  A0D8               	btfss	status,0,c
  7454  0005DC  D003               	goto	l5588
  7455                           
  7456                           ; BSR set to: 0
  7457                           
  7458                           ; BSR set to: 0
  7459                           
  7460                           ; BSR set to: 0
  7461                           ;doprnt.c: 1138: break;
  7462  0005DE  0100               	movlb	0	; () banked
  7463  0005E0  2BD1               	incf	sprintf@c& (0+255),f,b
  7464  0005E2  D7DD               	goto	l5576
  7465  0005E4                     l5588:
  7466                           
  7467                           ; BSR set to: 0
  7468                           ;doprnt.c: 1142: width -= prec + c + exp;
  7469  0005E4  C0D1  F0B3         	movff	sprintf@c,??_sprintf
  7470  0005E8  0100               	movlb	0	; () banked
  7471  0005EA  6BB4               	clrf	(??_sprintf+1)& (0+255),b
  7472  0005EC  BFB3               	btfsc	??_sprintf& (0+255),7,b
  7473  0005EE  07B4               	decf	(??_sprintf+1)& (0+255),f,b
  7474  0005F0  0100               	movlb	0	; () banked
  7475  0005F2  51CF               	movf	sprintf@prec& (0+255),w,b
  7476  0005F4  0100               	movlb	0	; () banked
  7477  0005F6  27B3               	addwf	??_sprintf& (0+255),f,b
  7478  0005F8  0100               	movlb	0	; () banked
  7479  0005FA  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  7480  0005FC  0100               	movlb	0	; () banked
  7481  0005FE  23B4               	addwfc	(??_sprintf+1)& (0+255),f,b
  7482  000600  0100               	movlb	0	; () banked
  7483  000602  51CA               	movf	sprintf@exp& (0+255),w,b
  7484  000604  0100               	movlb	0	; () banked
  7485  000606  27B3               	addwf	??_sprintf& (0+255),f,b
  7486  000608  0100               	movlb	0	; () banked
  7487  00060A  51CB               	movf	(sprintf@exp+1)& (0+255),w,b
  7488  00060C  0100               	movlb	0	; () banked
  7489  00060E  23B4               	addwfc	(??_sprintf+1)& (0+255),f,b
  7490  000610  0100               	movlb	0	; () banked
  7491  000612  51B3               	movf	??_sprintf& (0+255),w,b
  7492  000614  0100               	movlb	0	; () banked
  7493  000616  5FC0               	subwf	sprintf@width& (0+255),f,b
  7494  000618  0100               	movlb	0	; () banked
  7495  00061A  51B4               	movf	(??_sprintf+1)& (0+255),w,b
  7496  00061C  0100               	movlb	0	; () banked
  7497  00061E  5BC1               	subwfb	(sprintf@width+1)& (0+255),f,b
  7498                           
  7499                           ;doprnt.c: 1143: if(
  7500                           ;doprnt.c: 1147: prec)
  7501  000620  0100               	movlb	0	; () banked
  7502  000622  51CF               	movf	sprintf@prec& (0+255),w,b
  7503  000624  0100               	movlb	0	; () banked
  7504  000626  11D0               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7505  000628  B4D8               	btfsc	status,2,c
  7506  00062A  D004               	goto	l5592
  7507                           
  7508                           ; BSR set to: 0
  7509                           ;doprnt.c: 1148: width--;
  7510  00062C  0100               	movlb	0	; () banked
  7511  00062E  07C0               	decf	sprintf@width& (0+255),f,b
  7512  000630  A0D8               	btfss	status,0,c
  7513  000632  07C1               	decf	(sprintf@width+1)& (0+255),f,b
  7514  000634                     l5592:
  7515                           
  7516                           ; BSR set to: 0
  7517                           ;doprnt.c: 1149: if(flag & 0x03)
  7518  000634  0E03               	movlw	3
  7519  000636  0100               	movlb	0	; () banked
  7520  000638  15BE               	andwf	sprintf@flag& (0+255),w,b
  7521  00063A  0100               	movlb	0	; () banked
  7522  00063C  6FB3               	movwf	??_sprintf& (0+255),b
  7523  00063E  0E00               	movlw	0
  7524  000640  0100               	movlb	0	; () banked
  7525  000642  15BF               	andwf	(sprintf@flag+1)& (0+255),w,b
  7526  000644  0100               	movlb	0	; () banked
  7527  000646  6FB4               	movwf	(??_sprintf+1)& (0+255),b
  7528  000648  0100               	movlb	0	; () banked
  7529  00064A  51B3               	movf	??_sprintf& (0+255),w,b
  7530  00064C  0100               	movlb	0	; () banked
  7531  00064E  11B4               	iorwf	(??_sprintf+1)& (0+255),w,b
  7532  000650  B4D8               	btfsc	status,2,c
  7533  000652  D00E               	goto	l5602
  7534  000654  D009               	goto	l5600
  7535  000656                     l5596:
  7536                           
  7537                           ; BSR set to: 0
  7538                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  7539  000656  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7540  00065A  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7541  00065E  0E20               	movlw	32
  7542  000660  6EDF               	movwf	indf2,c
  7543                           
  7544                           ; BSR set to: 0
  7545  000662  0100               	movlb	0	; () banked
  7546  000664  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  7547  000666  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  7548  000668                     l5600:
  7549                           
  7550                           ; BSR set to: 0
  7551                           ;doprnt.c: 1182: width--;
  7552  000668  0100               	movlb	0	; () banked
  7553  00066A  07C0               	decf	sprintf@width& (0+255),f,b
  7554  00066C  A0D8               	btfss	status,0,c
  7555  00066E  07C1               	decf	(sprintf@width+1)& (0+255),f,b
  7556  000670                     l5602:
  7557                           
  7558                           ; BSR set to: 0
  7559  000670  0100               	movlb	0	; () banked
  7560  000672  BFC1               	btfsc	(sprintf@width+1)& (0+255),7,b
  7561  000674  D007               	goto	l5604
  7562  000676  0100               	movlb	0	; () banked
  7563  000678  51C1               	movf	(sprintf@width+1)& (0+255),w,b
  7564  00067A  E1ED               	bnz	l5596
  7565  00067C  0100               	movlb	0	; () banked
  7566  00067E  05C0               	decf	sprintf@width& (0+255),w,b
  7567  000680  B0D8               	btfsc	status,0,c
  7568  000682  D7E9               	goto	l5596
  7569  000684                     l5604:
  7570                           
  7571                           ; BSR set to: 0
  7572                           ;doprnt.c: 1183: }
  7573                           ;doprnt.c: 1188: if(flag & 0x03)
  7574  000684  0E03               	movlw	3
  7575  000686  0100               	movlb	0	; () banked
  7576  000688  15BE               	andwf	sprintf@flag& (0+255),w,b
  7577  00068A  0100               	movlb	0	; () banked
  7578  00068C  6FB3               	movwf	??_sprintf& (0+255),b
  7579  00068E  0E00               	movlw	0
  7580  000690  0100               	movlb	0	; () banked
  7581  000692  15BF               	andwf	(sprintf@flag+1)& (0+255),w,b
  7582  000694  0100               	movlb	0	; () banked
  7583  000696  6FB4               	movwf	(??_sprintf+1)& (0+255),b
  7584  000698  0100               	movlb	0	; () banked
  7585  00069A  51B3               	movf	??_sprintf& (0+255),w,b
  7586  00069C  0100               	movlb	0	; () banked
  7587  00069E  11B4               	iorwf	(??_sprintf+1)& (0+255),w,b
  7588  0006A0  B4D8               	btfsc	status,2,c
  7589  0006A2  D055               	goto	l5618
  7590                           
  7591                           ; BSR set to: 0
  7592                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  7593  0006A4  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7594  0006A8  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7595  0006AC  0E2D               	movlw	45
  7596  0006AE  D04D               	goto	L5
  7597  0006B0                     l5608:
  7598                           
  7599                           ; BSR set to: 0
  7600  0006B0  0100               	movlb	0	; () banked
  7601  0006B2  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  7602  0006B4  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  7603                           
  7604                           ; BSR set to: 0
  7605                           ;doprnt.c: 1195: }
  7606                           ;doprnt.c: 1196: while(c--) {
  7607  0006B6  D04B               	goto	l5618
  7608  0006B8                     l5610:
  7609                           
  7610                           ; BSR set to: 0
  7611                           ;doprnt.c: 1200: {
  7612                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  7613  0006B8  C0C6  F071         	movff	sprintf@val,___lldiv@dividend
  7614  0006BC  C0C7  F072         	movff	sprintf@val+1,___lldiv@dividend+1
  7615  0006C0  C0C8  F073         	movff	sprintf@val+2,___lldiv@dividend+2
  7616  0006C4  C0C9  F074         	movff	sprintf@val+3,___lldiv@dividend+3
  7617  0006C8  0100               	movlb	0	; () banked
  7618  0006CA  51D1               	movf	sprintf@c& (0+255),w,b
  7619  0006CC  0D04               	mullw	4
  7620  0006CE  0EF5               	movlw	low _dpowers
  7621  0006D0  24F3               	addwf	prodl,w,c
  7622  0006D2  6EF6               	movwf	tblptrl,c
  7623  0006D4  0E7E               	movlw	high _dpowers
  7624  0006D6  20F4               	addwfc	prodh,w,c
  7625  0006D8  6EF7               	movwf	tblptrh,c
  7626  0006DA                     	if	0	;There are less than 3 active tblptr bytes
  7627  0006DA                     	endif
  7628  0006DA  0009               	tblrd		*+
  7629  0006DC  CFF5 F075          	movff	tablat,___lldiv@divisor
  7630  0006E0  0009               	tblrd		*+
  7631  0006E2  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  7632  0006E6  0009               	tblrd		*+
  7633  0006E8  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  7634  0006EC  000A               	tblrd		*-
  7635  0006EE  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  7636  0006F2  EC9D  F019         	call	___lldiv	;wreg free
  7637  0006F6  C071  F0C2         	movff	?___lldiv,sprintf@tmpval
  7638  0006FA  C072  F0C3         	movff	?___lldiv+1,sprintf@tmpval+1
  7639  0006FE  C073  F0C4         	movff	?___lldiv+2,sprintf@tmpval+2
  7640  000702  C074  F0C5         	movff	?___lldiv+3,sprintf@tmpval+3
  7641                           
  7642                           ;doprnt.c: 1202: tmpval.vd %= 10;
  7643  000706  C0C2  F079         	movff	sprintf@tmpval,___llmod@dividend
  7644  00070A  C0C3  F07A         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7645  00070E  C0C4  F07B         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7646  000712  C0C5  F07C         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7647  000716  0E0A               	movlw	10
  7648  000718  0100               	movlb	0	; () banked
  7649  00071A  6F7D               	movwf	___llmod@divisor& (0+255),b
  7650  00071C  0E00               	movlw	0
  7651  00071E  6F7E               	movwf	(___llmod@divisor+1)& (0+255),b
  7652  000720  0E00               	movlw	0
  7653  000722  6F7F               	movwf	(___llmod@divisor+2)& (0+255),b
  7654  000724  0E00               	movlw	0
  7655  000726  6F80               	movwf	(___llmod@divisor+3)& (0+255),b
  7656  000728  EC92  F01A         	call	___llmod	;wreg free
  7657  00072C  C079  F0C2         	movff	?___llmod,sprintf@tmpval
  7658  000730  C07A  F0C3         	movff	?___llmod+1,sprintf@tmpval+1
  7659  000734  C07B  F0C4         	movff	?___llmod+2,sprintf@tmpval+2
  7660  000738  C07C  F0C5         	movff	?___llmod+3,sprintf@tmpval+3
  7661                           
  7662                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  7663  00073C  0100               	movlb	0	; () banked
  7664  00073E  51C2               	movf	sprintf@tmpval& (0+255),w,b
  7665  000740  0F30               	addlw	48
  7666  000742  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7667  000746  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7668  00074A                     L5:
  7669  00074A  6EDF               	movwf	indf2,c
  7670  00074C  D7B1               	goto	l5608
  7671  00074E                     l5618:
  7672                           
  7673                           ; BSR set to: 0
  7674  00074E  0100               	movlb	0	; () banked
  7675  000750  07D1               	decf	sprintf@c& (0+255),f,b
  7676  000752  0100               	movlb	0	; () banked
  7677  000754  29D1               	incf	sprintf@c& (0+255),w,b
  7678  000756  B4D8               	btfsc	status,2,c
  7679  000758  D00E               	goto	l5626
  7680  00075A  D7AE               	goto	l5610
  7681  00075C                     l5620:
  7682                           
  7683                           ; BSR set to: 0
  7684                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7685  00075C  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7686  000760  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7687  000764  0E30               	movlw	48
  7688  000766  6EDF               	movwf	indf2,c
  7689                           
  7690                           ; BSR set to: 0
  7691  000768  0100               	movlb	0	; () banked
  7692  00076A  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  7693  00076C  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  7694                           
  7695                           ; BSR set to: 0
  7696                           ;doprnt.c: 1209: exp--;
  7697  00076E  0100               	movlb	0	; () banked
  7698  000770  07CA               	decf	sprintf@exp& (0+255),f,b
  7699  000772  A0D8               	btfss	status,0,c
  7700  000774  07CB               	decf	(sprintf@exp+1)& (0+255),f,b
  7701  000776                     l5626:
  7702                           
  7703                           ; BSR set to: 0
  7704  000776  0100               	movlb	0	; () banked
  7705  000778  BFCB               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7706  00077A  D007               	goto	l5628
  7707  00077C  0100               	movlb	0	; () banked
  7708  00077E  51CB               	movf	(sprintf@exp+1)& (0+255),w,b
  7709  000780  E1ED               	bnz	l5620
  7710  000782  0100               	movlb	0	; () banked
  7711  000784  05CA               	decf	sprintf@exp& (0+255),w,b
  7712  000786  B0D8               	btfsc	status,0,c
  7713  000788  D7E9               	goto	l5620
  7714  00078A                     l5628:
  7715                           
  7716                           ; BSR set to: 0
  7717                           ;doprnt.c: 1210: }
  7718                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7719  00078A  0100               	movlb	0	; () banked
  7720  00078C  BFD0               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7721  00078E  D00C               	goto	l513
  7722  000790  0100               	movlb	0	; () banked
  7723  000792  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  7724  000794  E105               	bnz	u5780
  7725  000796  0E09               	movlw	9
  7726  000798  0100               	movlb	0	; () banked
  7727  00079A  5DCF               	subwf	sprintf@prec& (0+255),w,b
  7728  00079C  A0D8               	btfss	status,0,c
  7729  00079E  D004               	goto	l513
  7730  0007A0                     u5780:
  7731                           
  7732                           ; BSR set to: 0
  7733                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7734  0007A0  0E08               	movlw	8
  7735  0007A2  0100               	movlb	0	; () banked
  7736  0007A4  6FD1               	movwf	sprintf@c& (0+255),b
  7737  0007A6  D002               	goto	l5632
  7738  0007A8                     l513:
  7739                           
  7740                           ; BSR set to: 0
  7741                           ;doprnt.c: 1213: else
  7742                           ;doprnt.c: 1214: c = prec;
  7743  0007A8  C0CF  F0D1         	movff	sprintf@prec,sprintf@c
  7744  0007AC                     l5632:
  7745                           
  7746                           ; BSR set to: 0
  7747                           ;doprnt.c: 1215: prec -= c;
  7748  0007AC  0100               	movlb	0	; () banked
  7749  0007AE  51D1               	movf	sprintf@c& (0+255),w,b
  7750  0007B0  0100               	movlb	0	; () banked
  7751  0007B2  5FCF               	subwf	sprintf@prec& (0+255),f,b
  7752  0007B4  0E00               	movlw	0
  7753  0007B6  0100               	movlb	0	; () banked
  7754  0007B8  BFD1               	btfsc	sprintf@c& (0+255),7,b
  7755  0007BA  0EFF               	movlw	255
  7756  0007BC  0100               	movlb	0	; () banked
  7757  0007BE  5BD0               	subwfb	(sprintf@prec+1)& (0+255),f,b
  7758                           
  7759                           ; BSR set to: 0
  7760                           ;doprnt.c: 1219: if(c)
  7761  0007C0  0100               	movlb	0	; () banked
  7762  0007C2  51D1               	movf	sprintf@c& (0+255),w,b
  7763  0007C4  0100               	movlb	0	; () banked
  7764  0007C6  B4D8               	btfsc	status,2,c
  7765  0007C8  D009               	goto	l5640
  7766                           
  7767                           ; BSR set to: 0
  7768                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7769  0007CA  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7770  0007CE  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7771  0007D2  0E2E               	movlw	46
  7772  0007D4  6EDF               	movwf	indf2,c
  7773                           
  7774                           ; BSR set to: 0
  7775  0007D6  0100               	movlb	0	; () banked
  7776  0007D8  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  7777  0007DA  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  7778  0007DC                     l5640:
  7779                           
  7780                           ; BSR set to: 0
  7781                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7782  0007DC  0100               	movlb	0	; () banked
  7783  0007DE  51D1               	movf	sprintf@c& (0+255),w,b
  7784  0007E0  ECF5  F009         	call	_scale
  7785  0007E4  C089  F0B9         	movff	?_scale,_sprintf$2681
  7786  0007E8  C08A  F0BA         	movff	?_scale+1,_sprintf$2681+1
  7787  0007EC  C08B  F0BB         	movff	?_scale+2,_sprintf$2681+2
  7788                           
  7789                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7790  0007F0  C0CC  F080         	movff	sprintf@fval,___ftmul@f2
  7791  0007F4  C0CD  F081         	movff	sprintf@fval+1,___ftmul@f2+1
  7792  0007F8  C0CE  F082         	movff	sprintf@fval+2,___ftmul@f2+2
  7793  0007FC  C0B9  F07D         	movff	_sprintf$2681,___ftmul@f1
  7794  000800  C0BA  F07E         	movff	_sprintf$2681+1,___ftmul@f1+1
  7795  000804  C0BB  F07F         	movff	_sprintf$2681+2,___ftmul@f1+2
  7796  000808  ECCC  F014         	call	___ftmul	;wreg free
  7797  00080C  C07D  F090         	movff	?___ftmul,___fttol@f1
  7798  000810  C07E  F091         	movff	?___ftmul+1,___fttol@f1+1
  7799  000814  C07F  F092         	movff	?___ftmul+2,___fttol@f1+2
  7800  000818  EC75  F015         	call	___fttol	;wreg free
  7801  00081C  C090  F0C6         	movff	?___fttol,sprintf@val
  7802  000820  C091  F0C7         	movff	?___fttol+1,sprintf@val+1
  7803  000824  C092  F0C8         	movff	?___fttol+2,sprintf@val+2
  7804  000828  C093  F0C9         	movff	?___fttol+3,sprintf@val+3
  7805                           
  7806                           ;doprnt.c: 1228: while(c--) {
  7807  00082C  D074               	goto	l5654
  7808  00082E                     l5644:
  7809                           
  7810                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7811  00082E  C0C6  F071         	movff	sprintf@val,___lldiv@dividend
  7812  000832  C0C7  F072         	movff	sprintf@val+1,___lldiv@dividend+1
  7813  000836  C0C8  F073         	movff	sprintf@val+2,___lldiv@dividend+2
  7814  00083A  C0C9  F074         	movff	sprintf@val+3,___lldiv@dividend+3
  7815  00083E  0100               	movlb	0	; () banked
  7816  000840  51D1               	movf	sprintf@c& (0+255),w,b
  7817  000842  0D04               	mullw	4
  7818  000844  0EF5               	movlw	low _dpowers
  7819  000846  24F3               	addwf	prodl,w,c
  7820  000848  6EF6               	movwf	tblptrl,c
  7821  00084A  0E7E               	movlw	high _dpowers
  7822  00084C  20F4               	addwfc	prodh,w,c
  7823  00084E  6EF7               	movwf	tblptrh,c
  7824  000850                     	if	0	;There are less than 3 active tblptr bytes
  7825  000850                     	endif
  7826  000850  0009               	tblrd		*+
  7827  000852  CFF5 F075          	movff	tablat,___lldiv@divisor
  7828  000856  0009               	tblrd		*+
  7829  000858  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  7830  00085C  0009               	tblrd		*+
  7831  00085E  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  7832  000862  000A               	tblrd		*-
  7833  000864  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  7834  000868  EC9D  F019         	call	___lldiv	;wreg free
  7835  00086C  C071  F0C2         	movff	?___lldiv,sprintf@tmpval
  7836  000870  C072  F0C3         	movff	?___lldiv+1,sprintf@tmpval+1
  7837  000874  C073  F0C4         	movff	?___lldiv+2,sprintf@tmpval+2
  7838  000878  C074  F0C5         	movff	?___lldiv+3,sprintf@tmpval+3
  7839                           
  7840                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7841  00087C  C0C2  F079         	movff	sprintf@tmpval,___llmod@dividend
  7842  000880  C0C3  F07A         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7843  000884  C0C4  F07B         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7844  000888  C0C5  F07C         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7845  00088C  0E0A               	movlw	10
  7846  00088E  0100               	movlb	0	; () banked
  7847  000890  6F7D               	movwf	___llmod@divisor& (0+255),b
  7848  000892  0E00               	movlw	0
  7849  000894  6F7E               	movwf	(___llmod@divisor+1)& (0+255),b
  7850  000896  0E00               	movlw	0
  7851  000898  6F7F               	movwf	(___llmod@divisor+2)& (0+255),b
  7852  00089A  0E00               	movlw	0
  7853  00089C  6F80               	movwf	(___llmod@divisor+3)& (0+255),b
  7854  00089E  EC92  F01A         	call	___llmod	;wreg free
  7855  0008A2  C079  F0C2         	movff	?___llmod,sprintf@tmpval
  7856  0008A6  C07A  F0C3         	movff	?___llmod+1,sprintf@tmpval+1
  7857  0008AA  C07B  F0C4         	movff	?___llmod+2,sprintf@tmpval+2
  7858  0008AE  C07C  F0C5         	movff	?___llmod+3,sprintf@tmpval+3
  7859                           
  7860                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7861  0008B2  0100               	movlb	0	; () banked
  7862  0008B4  51C2               	movf	sprintf@tmpval& (0+255),w,b
  7863  0008B6  0F30               	addlw	48
  7864  0008B8  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7865  0008BC  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7866  0008C0  6EDF               	movwf	indf2,c
  7867                           
  7868                           ; BSR set to: 0
  7869  0008C2  0100               	movlb	0	; () banked
  7870  0008C4  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  7871  0008C6  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  7872                           
  7873                           ; BSR set to: 0
  7874                           ;doprnt.c: 1232: val %= dpowers[c];
  7875  0008C8  C0C6  F079         	movff	sprintf@val,___llmod@dividend
  7876  0008CC  C0C7  F07A         	movff	sprintf@val+1,___llmod@dividend+1
  7877  0008D0  C0C8  F07B         	movff	sprintf@val+2,___llmod@dividend+2
  7878  0008D4  C0C9  F07C         	movff	sprintf@val+3,___llmod@dividend+3
  7879  0008D8  0100               	movlb	0	; () banked
  7880  0008DA  51D1               	movf	sprintf@c& (0+255),w,b
  7881  0008DC  0D04               	mullw	4
  7882  0008DE  0EF5               	movlw	low _dpowers
  7883  0008E0  24F3               	addwf	prodl,w,c
  7884  0008E2  6EF6               	movwf	tblptrl,c
  7885  0008E4  0E7E               	movlw	high _dpowers
  7886  0008E6  20F4               	addwfc	prodh,w,c
  7887  0008E8  6EF7               	movwf	tblptrh,c
  7888  0008EA                     	if	0	;There are less than 3 active tblptr bytes
  7889  0008EA                     	endif
  7890  0008EA  0009               	tblrd		*+
  7891  0008EC  CFF5 F07D          	movff	tablat,___llmod@divisor
  7892  0008F0  0009               	tblrd		*+
  7893  0008F2  CFF5 F07E          	movff	tablat,___llmod@divisor+1
  7894  0008F6  0009               	tblrd		*+
  7895  0008F8  CFF5 F07F          	movff	tablat,___llmod@divisor+2
  7896  0008FC  000A               	tblrd		*-
  7897  0008FE  CFF5 F080          	movff	tablat,___llmod@divisor+3
  7898  000902  EC92  F01A         	call	___llmod	;wreg free
  7899  000906  C079  F0C6         	movff	?___llmod,sprintf@val
  7900  00090A  C07A  F0C7         	movff	?___llmod+1,sprintf@val+1
  7901  00090E  C07B  F0C8         	movff	?___llmod+2,sprintf@val+2
  7902  000912  C07C  F0C9         	movff	?___llmod+3,sprintf@val+3
  7903  000916                     l5654:
  7904  000916  0100               	movlb	0	; () banked
  7905  000918  07D1               	decf	sprintf@c& (0+255),f,b
  7906  00091A  0100               	movlb	0	; () banked
  7907  00091C  29D1               	incf	sprintf@c& (0+255),w,b
  7908  00091E  B4D8               	btfsc	status,2,c
  7909  000920  D00E               	goto	l5662
  7910  000922  D785               	goto	l5644
  7911  000924                     l5656:
  7912                           
  7913                           ; BSR set to: 0
  7914                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  7915  000924  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  7916  000928  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  7917  00092C  0E30               	movlw	48
  7918  00092E  6EDF               	movwf	indf2,c
  7919                           
  7920                           ; BSR set to: 0
  7921  000930  0100               	movlb	0	; () banked
  7922  000932  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  7923  000934  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  7924                           
  7925                           ; BSR set to: 0
  7926                           ;doprnt.c: 1237: prec--;
  7927  000936  0100               	movlb	0	; () banked
  7928  000938  07CF               	decf	sprintf@prec& (0+255),f,b
  7929  00093A  A0D8               	btfss	status,0,c
  7930  00093C  07D0               	decf	(sprintf@prec+1)& (0+255),f,b
  7931  00093E                     l5662:
  7932                           
  7933                           ; BSR set to: 0
  7934  00093E  0100               	movlb	0	; () banked
  7935  000940  51CF               	movf	sprintf@prec& (0+255),w,b
  7936  000942  0100               	movlb	0	; () banked
  7937  000944  11D0               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7938  000946  B4D8               	btfsc	status,2,c
  7939  000948  D169               	goto	l5744
  7940  00094A  D7EC               	goto	l5656
  7941  00094C                     l5664:
  7942                           
  7943                           ; BSR set to: 0
  7944                           ;doprnt.c: 1246: }
  7945                           ;doprnt.c: 1253: {
  7946                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  7947  00094C  C0BC  FFD9         	movff	sprintf@ap,fsr2l
  7948  000950  C0BD  FFDA         	movff	sprintf@ap+1,fsr2h
  7949  000954  CFDE F0C6          	movff	postinc2,sprintf@val
  7950  000958  CFDD F0C7          	movff	postdec2,sprintf@val+1
  7951  00095C  0100               	movlb	0	; () banked
  7952  00095E  0E00               	movlw	0
  7953  000960  BFC7               	btfsc	(sprintf@val+1)& (0+255),7,b
  7954  000962  0EFF               	movlw	-1
  7955  000964  6FC8               	movwf	(sprintf@val+2)& (0+255),b
  7956  000966  6FC9               	movwf	(sprintf@val+3)& (0+255),b
  7957                           
  7958                           ; BSR set to: 0
  7959  000968  0E02               	movlw	2
  7960  00096A  0100               	movlb	0	; () banked
  7961  00096C  27BC               	addwf	sprintf@ap& (0+255),f,b
  7962  00096E  0E00               	movlw	0
  7963  000970  23BD               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7964                           
  7965                           ; BSR set to: 0
  7966                           ;doprnt.c: 1261: if((long)val < 0) {
  7967  000972  0100               	movlb	0	; () banked
  7968  000974  AFC9               	btfss	(sprintf@val+3)& (0+255),7,b
  7969  000976  D00C               	goto	l5674
  7970                           
  7971                           ; BSR set to: 0
  7972                           ;doprnt.c: 1262: flag |= 0x03;
  7973  000978  0E03               	movlw	3
  7974  00097A  0100               	movlb	0	; () banked
  7975  00097C  13BE               	iorwf	sprintf@flag& (0+255),f,b
  7976                           
  7977                           ; BSR set to: 0
  7978                           ;doprnt.c: 1263: val = -val;
  7979  00097E  0100               	movlb	0	; () banked
  7980  000980  1FC9               	comf	(sprintf@val+3)& (0+255),f,b
  7981  000982  1FC8               	comf	(sprintf@val+2)& (0+255),f,b
  7982  000984  1FC7               	comf	(sprintf@val+1)& (0+255),f,b
  7983  000986  6DC6               	negf	sprintf@val& (0+255),b
  7984  000988  0E00               	movlw	0
  7985  00098A  23C7               	addwfc	(sprintf@val+1)& (0+255),f,b
  7986  00098C  23C8               	addwfc	(sprintf@val+2)& (0+255),f,b
  7987  00098E  23C9               	addwfc	(sprintf@val+3)& (0+255),f,b
  7988  000990                     l5674:
  7989                           
  7990                           ; BSR set to: 0
  7991                           ;doprnt.c: 1264: }
  7992                           ;doprnt.c: 1266: }
  7993                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  7994  000990  0100               	movlb	0	; () banked
  7995  000992  51CF               	movf	sprintf@prec& (0+255),w,b
  7996  000994  0100               	movlb	0	; () banked
  7997  000996  11D0               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7998  000998  A4D8               	btfss	status,2,c
  7999  00099A  D00D               	goto	l5680
  8000                           
  8001                           ; BSR set to: 0
  8002  00099C  0100               	movlb	0	; () banked
  8003  00099E  51C6               	movf	sprintf@val& (0+255),w,b
  8004  0009A0  0100               	movlb	0	; () banked
  8005  0009A2  11C7               	iorwf	(sprintf@val+1)& (0+255),w,b
  8006  0009A4  0100               	movlb	0	; () banked
  8007  0009A6  11C8               	iorwf	(sprintf@val+2)& (0+255),w,b
  8008  0009A8  0100               	movlb	0	; () banked
  8009  0009AA  11C9               	iorwf	(sprintf@val+3)& (0+255),w,b
  8010  0009AC  A4D8               	btfss	status,2,c
  8011  0009AE  D003               	goto	l5680
  8012                           
  8013                           ; BSR set to: 0
  8014                           ;doprnt.c: 1291: prec++;
  8015  0009B0  0100               	movlb	0	; () banked
  8016  0009B2  4BCF               	infsnz	sprintf@prec& (0+255),f,b
  8017  0009B4  2BD0               	incf	(sprintf@prec+1)& (0+255),f,b
  8018  0009B6                     l5680:
  8019                           
  8020                           ; BSR set to: 0
  8021                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  8022  0009B6  0E01               	movlw	1
  8023  0009B8  0100               	movlb	0	; () banked
  8024  0009BA  6FD1               	movwf	sprintf@c& (0+255),b
  8025  0009BC                     l5682:
  8026                           
  8027                           ; BSR set to: 0
  8028  0009BC  0E0A               	movlw	10
  8029  0009BE  0100               	movlb	0	; () banked
  8030  0009C0  19D1               	xorwf	sprintf@c& (0+255),w,b
  8031  0009C2  B4D8               	btfsc	status,2,c
  8032  0009C4  D01E               	goto	l5694
  8033                           
  8034                           ; BSR set to: 0
  8035                           ;doprnt.c: 1306: if(val < dpowers[c])
  8036                           
  8037                           ; BSR set to: 0
  8038                           
  8039                           ; BSR set to: 0
  8040  0009C6  0100               	movlb	0	; () banked
  8041  0009C8  51D1               	movf	sprintf@c& (0+255),w,b
  8042  0009CA  0D04               	mullw	4
  8043  0009CC  0EF5               	movlw	low _dpowers
  8044  0009CE  24F3               	addwf	prodl,w,c
  8045  0009D0  6EF6               	movwf	tblptrl,c
  8046  0009D2  0E7E               	movlw	high _dpowers
  8047  0009D4  20F4               	addwfc	prodh,w,c
  8048  0009D6  6EF7               	movwf	tblptrh,c
  8049  0009D8                     	if	0	;There are less than 3 active tblptr bytes
  8050  0009D8                     	endif
  8051  0009D8  0009               	tblrd		*+
  8052  0009DA  50F5               	movf	tablat,w,c
  8053  0009DC  0100               	movlb	0	; () banked
  8054  0009DE  5DC6               	subwf	sprintf@val& (0+255),w,b
  8055  0009E0  0009               	tblrd		*+
  8056  0009E2  50F5               	movf	tablat,w,c
  8057  0009E4  0100               	movlb	0	; () banked
  8058  0009E6  59C7               	subwfb	(sprintf@val+1)& (0+255),w,b
  8059  0009E8  0009               	tblrd		*+
  8060  0009EA  50F5               	movf	tablat,w,c
  8061  0009EC  0100               	movlb	0	; () banked
  8062  0009EE  59C8               	subwfb	(sprintf@val+2)& (0+255),w,b
  8063  0009F0  0009               	tblrd		*+
  8064  0009F2  50F5               	movf	tablat,w,c
  8065  0009F4  0100               	movlb	0	; () banked
  8066  0009F6  59C9               	subwfb	(sprintf@val+3)& (0+255),w,b
  8067  0009F8  A0D8               	btfss	status,0,c
  8068  0009FA  D003               	goto	l5694
  8069                           
  8070                           ; BSR set to: 0
  8071                           
  8072                           ; BSR set to: 0
  8073                           
  8074                           ; BSR set to: 0
  8075                           ;doprnt.c: 1307: break;
  8076  0009FC  0100               	movlb	0	; () banked
  8077  0009FE  2BD1               	incf	sprintf@c& (0+255),f,b
  8078  000A00  D7DD               	goto	l5682
  8079  000A02                     l5694:
  8080                           
  8081                           ; BSR set to: 0
  8082                           ;doprnt.c: 1339: if(c < prec)
  8083  000A02  0E80               	movlw	128
  8084  000A04  0100               	movlb	0	; () banked
  8085  000A06  BFD1               	btfsc	sprintf@c& (0+255),7,b
  8086  000A08  0E7F               	movlw	127
  8087  000A0A  0100               	movlb	0	; () banked
  8088  000A0C  6FB3               	movwf	??_sprintf& (0+255),b
  8089  000A0E  0100               	movlb	0	; () banked
  8090  000A10  51CF               	movf	sprintf@prec& (0+255),w,b
  8091  000A12  0100               	movlb	0	; () banked
  8092  000A14  5DD1               	subwf	sprintf@c& (0+255),w,b
  8093  000A16  0100               	movlb	0	; () banked
  8094  000A18  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  8095  000A1A  0A80               	xorlw	128
  8096  000A1C  0100               	movlb	0	; () banked
  8097  000A1E  59B3               	subwfb	??_sprintf& (0+255),w,b
  8098  000A20  B0D8               	btfsc	status,0,c
  8099  000A22  D003               	goto	l5698
  8100                           
  8101                           ; BSR set to: 0
  8102                           ;doprnt.c: 1340: c = prec;
  8103  000A24  C0CF  F0D1         	movff	sprintf@prec,sprintf@c
  8104  000A28  D018               	goto	l5702
  8105  000A2A                     l5698:
  8106                           
  8107                           ; BSR set to: 0
  8108                           ;doprnt.c: 1341: else if(prec < c)
  8109  000A2A  0100               	movlb	0	; () banked
  8110  000A2C  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  8111  000A2E  0A80               	xorlw	128
  8112  000A30  0100               	movlb	0	; () banked
  8113  000A32  6FB3               	movwf	??_sprintf& (0+255),b
  8114  000A34  0100               	movlb	0	; () banked
  8115  000A36  51D1               	movf	sprintf@c& (0+255),w,b
  8116  000A38  0100               	movlb	0	; () banked
  8117  000A3A  5DCF               	subwf	sprintf@prec& (0+255),w,b
  8118  000A3C  0E80               	movlw	128
  8119  000A3E  0100               	movlb	0	; () banked
  8120  000A40  BFD1               	btfsc	sprintf@c& (0+255),7,b
  8121  000A42  0E7F               	movlw	127
  8122  000A44  0100               	movlb	0	; () banked
  8123  000A46  59B3               	subwfb	??_sprintf& (0+255),w,b
  8124  000A48  B0D8               	btfsc	status,0,c
  8125  000A4A  D007               	goto	l5702
  8126                           
  8127                           ; BSR set to: 0
  8128                           ;doprnt.c: 1342: prec = c;
  8129  000A4C  0100               	movlb	0	; () banked
  8130  000A4E  51D1               	movf	sprintf@c& (0+255),w,b
  8131  000A50  0100               	movlb	0	; () banked
  8132  000A52  6FCF               	movwf	sprintf@prec& (0+255),b
  8133  000A54  6BD0               	clrf	(sprintf@prec+1)& (0+255),b
  8134  000A56  BFCF               	btfsc	sprintf@prec& (0+255),7,b
  8135  000A58  07D0               	decf	(sprintf@prec+1)& (0+255),f,b
  8136  000A5A                     l5702:
  8137                           
  8138                           ; BSR set to: 0
  8139                           ;doprnt.c: 1345: if(width && flag & 0x03)
  8140  000A5A  0100               	movlb	0	; () banked
  8141  000A5C  51C0               	movf	sprintf@width& (0+255),w,b
  8142  000A5E  0100               	movlb	0	; () banked
  8143  000A60  11C1               	iorwf	(sprintf@width+1)& (0+255),w,b
  8144  000A62  B4D8               	btfsc	status,2,c
  8145  000A64  D014               	goto	l5708
  8146                           
  8147                           ; BSR set to: 0
  8148  000A66  0E03               	movlw	3
  8149  000A68  0100               	movlb	0	; () banked
  8150  000A6A  15BE               	andwf	sprintf@flag& (0+255),w,b
  8151  000A6C  0100               	movlb	0	; () banked
  8152  000A6E  6FB3               	movwf	??_sprintf& (0+255),b
  8153  000A70  0E00               	movlw	0
  8154  000A72  0100               	movlb	0	; () banked
  8155  000A74  15BF               	andwf	(sprintf@flag+1)& (0+255),w,b
  8156  000A76  0100               	movlb	0	; () banked
  8157  000A78  6FB4               	movwf	(??_sprintf+1)& (0+255),b
  8158  000A7A  0100               	movlb	0	; () banked
  8159  000A7C  51B3               	movf	??_sprintf& (0+255),w,b
  8160  000A7E  0100               	movlb	0	; () banked
  8161  000A80  11B4               	iorwf	(??_sprintf+1)& (0+255),w,b
  8162  000A82  B4D8               	btfsc	status,2,c
  8163  000A84  D004               	goto	l5708
  8164                           
  8165                           ; BSR set to: 0
  8166                           ;doprnt.c: 1346: width--;
  8167  000A86  0100               	movlb	0	; () banked
  8168  000A88  07C0               	decf	sprintf@width& (0+255),f,b
  8169  000A8A  A0D8               	btfss	status,0,c
  8170  000A8C  07C1               	decf	(sprintf@width+1)& (0+255),f,b
  8171  000A8E                     l5708:
  8172                           
  8173                           ; BSR set to: 0
  8174                           ;doprnt.c: 1348: if(flag & 0x4000) {
  8175  000A8E  0100               	movlb	0	; () banked
  8176  000A90  ADBF               	btfss	(sprintf@flag+1)& (0+255),6,b
  8177  000A92  D01E               	goto	l5716
  8178                           
  8179                           ; BSR set to: 0
  8180                           ;doprnt.c: 1349: if(width > prec)
  8181  000A94  0100               	movlb	0	; () banked
  8182  000A96  51C0               	movf	sprintf@width& (0+255),w,b
  8183  000A98  0100               	movlb	0	; () banked
  8184  000A9A  5DCF               	subwf	sprintf@prec& (0+255),w,b
  8185  000A9C  0100               	movlb	0	; () banked
  8186  000A9E  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  8187  000AA0  0A80               	xorlw	128
  8188  000AA2  0100               	movlb	0	; () banked
  8189  000AA4  6FB3               	movwf	??_sprintf& (0+255),b
  8190  000AA6  0100               	movlb	0	; () banked
  8191  000AA8  51C1               	movf	(sprintf@width+1)& (0+255),w,b
  8192  000AAA  0A80               	xorlw	128
  8193  000AAC  0100               	movlb	0	; () banked
  8194  000AAE  59B3               	subwfb	??_sprintf& (0+255),w,b
  8195  000AB0  B0D8               	btfsc	status,0,c
  8196  000AB2  D009               	goto	l5714
  8197                           
  8198                           ; BSR set to: 0
  8199                           ;doprnt.c: 1350: width -= prec;
  8200  000AB4  0100               	movlb	0	; () banked
  8201  000AB6  51CF               	movf	sprintf@prec& (0+255),w,b
  8202  000AB8  0100               	movlb	0	; () banked
  8203  000ABA  5FC0               	subwf	sprintf@width& (0+255),f,b
  8204  000ABC  0100               	movlb	0	; () banked
  8205  000ABE  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
  8206  000AC0  0100               	movlb	0	; () banked
  8207  000AC2  5BC1               	subwfb	(sprintf@width+1)& (0+255),f,b
  8208  000AC4  D005               	goto	l5716
  8209  000AC6                     l5714:
  8210                           
  8211                           ; BSR set to: 0
  8212                           ;doprnt.c: 1351: else
  8213                           ;doprnt.c: 1352: width = 0;
  8214  000AC6  0E00               	movlw	0
  8215  000AC8  0100               	movlb	0	; () banked
  8216  000ACA  6FC1               	movwf	(sprintf@width+1)& (0+255),b
  8217  000ACC  0E00               	movlw	0
  8218  000ACE  6FC0               	movwf	sprintf@width& (0+255),b
  8219  000AD0                     l5716:
  8220                           
  8221                           ; BSR set to: 0
  8222                           ;doprnt.c: 1353: }
  8223                           ;doprnt.c: 1381: if(width > c)
  8224  000AD0  0E80               	movlw	128
  8225  000AD2  0100               	movlb	0	; () banked
  8226  000AD4  BFD1               	btfsc	sprintf@c& (0+255),7,b
  8227  000AD6  0E7F               	movlw	127
  8228  000AD8  0100               	movlb	0	; () banked
  8229  000ADA  6FB3               	movwf	??_sprintf& (0+255),b
  8230  000ADC  0100               	movlb	0	; () banked
  8231  000ADE  51C0               	movf	sprintf@width& (0+255),w,b
  8232  000AE0  0100               	movlb	0	; () banked
  8233  000AE2  5DD1               	subwf	sprintf@c& (0+255),w,b
  8234  000AE4  0100               	movlb	0	; () banked
  8235  000AE6  51C1               	movf	(sprintf@width+1)& (0+255),w,b
  8236  000AE8  0A80               	xorlw	128
  8237  000AEA  0100               	movlb	0	; () banked
  8238  000AEC  59B3               	subwfb	??_sprintf& (0+255),w,b
  8239  000AEE  B0D8               	btfsc	status,0,c
  8240  000AF0  D00B               	goto	l5720
  8241                           
  8242                           ; BSR set to: 0
  8243                           ;doprnt.c: 1382: width -= c;
  8244  000AF2  0100               	movlb	0	; () banked
  8245  000AF4  51D1               	movf	sprintf@c& (0+255),w,b
  8246  000AF6  0100               	movlb	0	; () banked
  8247  000AF8  5FC0               	subwf	sprintf@width& (0+255),f,b
  8248  000AFA  0E00               	movlw	0
  8249  000AFC  0100               	movlb	0	; () banked
  8250  000AFE  BFD1               	btfsc	sprintf@c& (0+255),7,b
  8251  000B00  0EFF               	movlw	255
  8252  000B02  0100               	movlb	0	; () banked
  8253  000B04  5BC1               	subwfb	(sprintf@width+1)& (0+255),f,b
  8254  000B06  D005               	goto	l5722
  8255  000B08                     l5720:
  8256                           
  8257                           ; BSR set to: 0
  8258                           ;doprnt.c: 1383: else
  8259                           ;doprnt.c: 1384: width = 0;
  8260  000B08  0E00               	movlw	0
  8261  000B0A  0100               	movlb	0	; () banked
  8262  000B0C  6FC1               	movwf	(sprintf@width+1)& (0+255),b
  8263  000B0E  0E00               	movlw	0
  8264  000B10  6FC0               	movwf	sprintf@width& (0+255),b
  8265  000B12                     l5722:
  8266                           
  8267                           ; BSR set to: 0
  8268                           ;doprnt.c: 1422: {
  8269                           ;doprnt.c: 1424: if(width
  8270                           ;doprnt.c: 1428: )
  8271  000B12  0100               	movlb	0	; () banked
  8272  000B14  51C0               	movf	sprintf@width& (0+255),w,b
  8273  000B16  0100               	movlb	0	; () banked
  8274  000B18  11C1               	iorwf	(sprintf@width+1)& (0+255),w,b
  8275  000B1A  B4D8               	btfsc	status,2,c
  8276  000B1C  D013               	goto	l5730
  8277  000B1E                     l5724:
  8278                           
  8279                           ; BSR set to: 0
  8280                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  8281  000B1E  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  8282  000B22  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  8283  000B26  0E20               	movlw	32
  8284  000B28  6EDF               	movwf	indf2,c
  8285                           
  8286                           ; BSR set to: 0
  8287  000B2A  0100               	movlb	0	; () banked
  8288  000B2C  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  8289  000B2E  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  8290                           
  8291                           ; BSR set to: 0
  8292                           ;doprnt.c: 1431: while(--width);
  8293  000B30  0100               	movlb	0	; () banked
  8294  000B32  07C0               	decf	sprintf@width& (0+255),f,b
  8295  000B34  A0D8               	btfss	status,0,c
  8296  000B36  07C1               	decf	(sprintf@width+1)& (0+255),f,b
  8297  000B38  0100               	movlb	0	; () banked
  8298  000B3A  51C0               	movf	sprintf@width& (0+255),w,b
  8299  000B3C  0100               	movlb	0	; () banked
  8300  000B3E  11C1               	iorwf	(sprintf@width+1)& (0+255),w,b
  8301  000B40  A4D8               	btfss	status,2,c
  8302  000B42  D7ED               	goto	l5724
  8303  000B44                     l5730:
  8304                           
  8305                           ; BSR set to: 0
  8306                           ;doprnt.c: 1438: if(flag & 0x03)
  8307  000B44  0E03               	movlw	3
  8308  000B46  0100               	movlb	0	; () banked
  8309  000B48  15BE               	andwf	sprintf@flag& (0+255),w,b
  8310  000B4A  0100               	movlb	0	; () banked
  8311  000B4C  6FB3               	movwf	??_sprintf& (0+255),b
  8312  000B4E  0E00               	movlw	0
  8313  000B50  0100               	movlb	0	; () banked
  8314  000B52  15BF               	andwf	(sprintf@flag+1)& (0+255),w,b
  8315  000B54  0100               	movlb	0	; () banked
  8316  000B56  6FB4               	movwf	(??_sprintf+1)& (0+255),b
  8317  000B58  0100               	movlb	0	; () banked
  8318  000B5A  51B3               	movf	??_sprintf& (0+255),w,b
  8319  000B5C  0100               	movlb	0	; () banked
  8320  000B5E  11B4               	iorwf	(??_sprintf+1)& (0+255),w,b
  8321  000B60  B4D8               	btfsc	status,2,c
  8322  000B62  D051               	goto	l5742
  8323                           
  8324                           ; BSR set to: 0
  8325                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  8326  000B64  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  8327  000B68  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  8328  000B6C  0E2D               	movlw	45
  8329  000B6E  6EDF               	movwf	indf2,c
  8330  000B70  D047               	goto	l5740
  8331  000B72                     l5736:
  8332                           
  8333                           ; BSR set to: 0
  8334                           ;doprnt.c: 1478: {
  8335                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  8336  000B72  C0CF  F0B3         	movff	sprintf@prec,??_sprintf
  8337  000B76  C0D0  F0B4         	movff	sprintf@prec+1,??_sprintf+1
  8338  000B7A  0100               	movlb	0	; () banked
  8339  000B7C  90D8               	bcf	status,0,c
  8340  000B7E  37B3               	rlcf	??_sprintf& (0+255),f,b
  8341  000B80  37B4               	rlcf	(??_sprintf+1)& (0+255),f,b
  8342  000B82  0100               	movlb	0	; () banked
  8343  000B84  90D8               	bcf	status,0,c
  8344  000B86  37B3               	rlcf	??_sprintf& (0+255),f,b
  8345  000B88  37B4               	rlcf	(??_sprintf+1)& (0+255),f,b
  8346  000B8A  0EF5               	movlw	low _dpowers
  8347  000B8C  0100               	movlb	0	; () banked
  8348  000B8E  25B3               	addwf	??_sprintf& (0+255),w,b
  8349  000B90  6EF6               	movwf	tblptrl,c
  8350  000B92  0E7E               	movlw	high _dpowers
  8351  000B94  21B4               	addwfc	(??_sprintf+1)& (0+255),w,b
  8352  000B96  6EF7               	movwf	tblptrh,c
  8353  000B98                     	if	0	;There are less than 3 active tblptr bytes
  8354  000B98                     	endif
  8355  000B98  0009               	tblrd		*+
  8356  000B9A  CFF5 F075          	movff	tablat,___lldiv@divisor
  8357  000B9E  0009               	tblrd		*+
  8358  000BA0  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  8359  000BA4  0009               	tblrd		*+
  8360  000BA6  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  8361  000BAA  000A               	tblrd		*-
  8362  000BAC  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  8363  000BB0  C0C6  F071         	movff	sprintf@val,___lldiv@dividend
  8364  000BB4  C0C7  F072         	movff	sprintf@val+1,___lldiv@dividend+1
  8365  000BB8  C0C8  F073         	movff	sprintf@val+2,___lldiv@dividend+2
  8366  000BBC  C0C9  F074         	movff	sprintf@val+3,___lldiv@dividend+3
  8367  000BC0  EC9D  F019         	call	___lldiv	;wreg free
  8368  000BC4  C071  F079         	movff	?___lldiv,___llmod@dividend
  8369  000BC8  C072  F07A         	movff	?___lldiv+1,___llmod@dividend+1
  8370  000BCC  C073  F07B         	movff	?___lldiv+2,___llmod@dividend+2
  8371  000BD0  C074  F07C         	movff	?___lldiv+3,___llmod@dividend+3
  8372  000BD4  0E0A               	movlw	10
  8373  000BD6  0100               	movlb	0	; () banked
  8374  000BD8  6F7D               	movwf	___llmod@divisor& (0+255),b
  8375  000BDA  0E00               	movlw	0
  8376  000BDC  6F7E               	movwf	(___llmod@divisor+1)& (0+255),b
  8377  000BDE  0E00               	movlw	0
  8378  000BE0  6F7F               	movwf	(___llmod@divisor+2)& (0+255),b
  8379  000BE2  0E00               	movlw	0
  8380  000BE4  6F80               	movwf	(___llmod@divisor+3)& (0+255),b
  8381  000BE6  EC92  F01A         	call	___llmod	;wreg free
  8382  000BEA  0100               	movlb	0	; () banked
  8383  000BEC  5179               	movf	?___llmod& (0+255),w,b
  8384  000BEE  0F30               	addlw	48
  8385  000BF0  0100               	movlb	0	; () banked
  8386  000BF2  6FD1               	movwf	sprintf@c& (0+255),b
  8387                           
  8388                           ; BSR set to: 0
  8389                           ;doprnt.c: 1523: }
  8390                           ;doprnt.c: 1524: ((*sp++ = (c)));
  8391  000BF4  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  8392  000BF8  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  8393  000BFC  C0D1  FFDF         	movff	sprintf@c,indf2
  8394  000C00                     l5740:
  8395                           
  8396                           ; BSR set to: 0
  8397  000C00  0100               	movlb	0	; () banked
  8398  000C02  4BA5               	infsnz	sprintf@sp& (0+255),f,b
  8399  000C04  2BA6               	incf	(sprintf@sp+1)& (0+255),f,b
  8400  000C06                     l5742:
  8401                           
  8402                           ; BSR set to: 0
  8403  000C06  0100               	movlb	0	; () banked
  8404  000C08  07CF               	decf	sprintf@prec& (0+255),f,b
  8405  000C0A  A0D8               	btfss	status,0,c
  8406  000C0C  07D0               	decf	(sprintf@prec+1)& (0+255),f,b
  8407  000C0E  0100               	movlb	0	; () banked
  8408  000C10  29CF               	incf	sprintf@prec& (0+255),w,b
  8409  000C12  E1AF               	bnz	l5736
  8410  000C14  0100               	movlb	0	; () banked
  8411  000C16  29D0               	incf	(sprintf@prec+1)& (0+255),w,b
  8412  000C18  A4D8               	btfss	status,2,c
  8413  000C1A  D7AB               	goto	l5736
  8414  000C1C                     l5744:
  8415                           
  8416                           ; BSR set to: 0
  8417  000C1C  C0A7  FFF6         	movff	sprintf@f,tblptrl
  8418  000C20  C0A8  FFF7         	movff	sprintf@f+1,tblptrh
  8419  000C24  0100               	movlb	0	; () banked
  8420  000C26  4BA7               	infsnz	sprintf@f& (0+255),f,b
  8421  000C28  2BA8               	incf	(sprintf@f+1)& (0+255),f,b
  8422  000C2A                     	if	0	;tblptru may be non-zero
  8423  000C2A                     	endif
  8424  000C2A                     	if	0	;tblptru may be non-zero
  8425  000C2A                     	endif
  8426  000C2A  0008               	tblrd		*
  8427  000C2C  CFF5 F0D1          	movff	tablat,sprintf@c
  8428  000C30  0100               	movlb	0	; () banked
  8429  000C32  51D1               	movf	sprintf@c& (0+255),w,b
  8430  000C34  A4D8               	btfss	status,2,c
  8431  000C36  EF5D  F000         	goto	l5458
  8432  000C3A                     l5746:
  8433                           
  8434                           ; BSR set to: 0
  8435                           ;doprnt.c: 1538: *sp = 0;
  8436  000C3A  C0A5  FFD9         	movff	sprintf@sp,fsr2l
  8437  000C3E  C0A6  FFDA         	movff	sprintf@sp+1,fsr2h
  8438  000C42  0E00               	movlw	0
  8439  000C44  6EDF               	movwf	indf2,c
  8440  000C46  0012               	return	
  8441  000C48                     __end_of_sprintf:
  8442                           	opt stack 0
  8443                           tblptru	equ	0xFF8
  8444                           tblptrh	equ	0xFF7
  8445                           tblptrl	equ	0xFF6
  8446                           tablat	equ	0xFF5
  8447                           prodh	equ	0xFF4
  8448                           prodl	equ	0xFF3
  8449                           indf0	equ	0xFEF
  8450                           postinc0	equ	0xFEE
  8451                           fsr0h	equ	0xFEA
  8452                           fsr0l	equ	0xFE9
  8453                           wreg	equ	0xFE8
  8454                           indf1	equ	0xFE7
  8455                           postdec1	equ	0xFE5
  8456                           fsr1h	equ	0xFE2
  8457                           fsr1l	equ	0xFE1
  8458                           indf2	equ	0xFDF
  8459                           postinc2	equ	0xFDE
  8460                           postdec2	equ	0xFDD
  8461                           fsr2h	equ	0xFDA
  8462                           fsr2l	equ	0xFD9
  8463                           status	equ	0xFD8
  8464                           
  8465 ;; *************** function _scale *****************
  8466 ;; Defined at:
  8467 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  8468 ;; Parameters:    Size  Location     Type
  8469 ;;  scl             1    wreg     char 
  8470 ;; Auto vars:     Size  Location     Type
  8471 ;;  scl             1   47[BANK0 ] char 
  8472 ;; Return value:  Size  Location     Type
  8473 ;;                  3   41[BANK0 ] char 
  8474 ;; Registers used:
  8475 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8476 ;; Tracked objects:
  8477 ;;		On entry : 0/0
  8478 ;;		On exit  : 0/0
  8479 ;;		Unchanged: 0/0
  8480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8481 ;;      Params:         0       3       0       0       0       0       0
  8482 ;;      Locals:         0       4       0       0       0       0       0
  8483 ;;      Temps:          0       0       0       0       0       0       0
  8484 ;;      Totals:         0       7       0       0       0       0       0
  8485 ;;Total ram usage:        7 bytes
  8486 ;; Hardware stack levels used:    1
  8487 ;; Hardware stack levels required when called:    5
  8488 ;; This function calls:
  8489 ;;		___awdiv
  8490 ;;		___awmod
  8491 ;;		___ftmul
  8492 ;;		___wmul
  8493 ;; This function is called by:
  8494 ;;		_sprintf
  8495 ;; This function uses a non-reentrant model
  8496 ;;
  8497                           
  8498                           	psect	text32
  8499  0013EA                     __ptext32:
  8500                           	opt stack 0
  8501  0013EA                     _scale:
  8502                           	opt stack 22
  8503                           
  8504                           ; BSR set to: 0
  8505                           ;incstack = 0
  8506                           ;scale@scl stored from wreg
  8507  0013EA  0100               	movlb	0	; () banked
  8508  0013EC  6F8F               	movwf	scale@scl& (0+255),b
  8509                           
  8510                           ;doprnt.c: 428: if(scl < 0) {
  8511  0013EE  0100               	movlb	0	; () banked
  8512  0013F0  AF8F               	btfss	scale@scl& (0+255),7,b
  8513  0013F2  D12A               	goto	l5130
  8514                           
  8515                           ; BSR set to: 0
  8516                           ;doprnt.c: 429: scl = -scl;
  8517  0013F4  0100               	movlb	0	; () banked
  8518  0013F6  6D8F               	negf	scale@scl& (0+255),b
  8519                           
  8520                           ;doprnt.c: 430: if(scl>=110)
  8521  0013F8  0100               	movlb	0	; () banked
  8522  0013FA  518F               	movf	scale@scl& (0+255),w,b
  8523  0013FC  0A80               	xorlw	128
  8524  0013FE  0F12               	addlw	-238
  8525  001400  A0D8               	btfss	status,0,c
  8526  001402  D0AC               	goto	l5120
  8527                           
  8528                           ; BSR set to: 0
  8529                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8530  001404  0E00               	movlw	0
  8531  001406  0100               	movlb	0	; () banked
  8532  001408  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8533  00140A  0E03               	movlw	3
  8534  00140C  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8535  00140E  0E00               	movlw	0
  8536  001410  0100               	movlb	0	; () banked
  8537  001412  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8538  001414  0E0A               	movlw	10
  8539  001416  6F77               	movwf	___awdiv@divisor& (0+255),b
  8540  001418  0E00               	movlw	0
  8541  00141A  0100               	movlb	0	; () banked
  8542  00141C  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8543  00141E  0E64               	movlw	100
  8544  001420  6F73               	movwf	___awmod@divisor& (0+255),b
  8545  001422  0100               	movlb	0	; () banked
  8546  001424  518F               	movf	scale@scl& (0+255),w,b
  8547  001426  0100               	movlb	0	; () banked
  8548  001428  6F71               	movwf	___awmod@dividend& (0+255),b
  8549  00142A  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8550  00142C  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8551  00142E  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8552  001430  EC48  F01A         	call	___awmod	;wreg free
  8553  001434  C071  F075         	movff	?___awmod,___awdiv@dividend
  8554  001438  C072  F076         	movff	?___awmod+1,___awdiv@dividend+1
  8555  00143C  ECF5  F019         	call	___awdiv	;wreg free
  8556  001440  0E09               	movlw	9
  8557  001442  0100               	movlb	0	; () banked
  8558  001444  2575               	addwf	?___awdiv& (0+255),w,b
  8559  001446  0100               	movlb	0	; () banked
  8560  001448  6F79               	movwf	___wmul@multiplier& (0+255),b
  8561  00144A  0E00               	movlw	0
  8562  00144C  0100               	movlb	0	; () banked
  8563  00144E  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8564  001450  0100               	movlb	0	; () banked
  8565  001452  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  8566  001454  EC7A  F01D         	call	___wmul	;wreg free
  8567  001458  0E1D               	movlw	low __npowers_
  8568  00145A  0100               	movlb	0	; () banked
  8569  00145C  2579               	addwf	?___wmul& (0+255),w,b
  8570  00145E  6EF6               	movwf	tblptrl,c
  8571  001460  0E7F               	movlw	high __npowers_
  8572  001462  0100               	movlb	0	; () banked
  8573  001464  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8574  001466  6EF7               	movwf	tblptrh,c
  8575  001468                     	if	0	;There are less than 3 active tblptr bytes
  8576  001468                     	endif
  8577  001468  0009               	tblrd		*+
  8578  00146A  CFF5 F080          	movff	tablat,___ftmul@f2
  8579  00146E  0009               	tblrd		*+
  8580  001470  CFF5 F081          	movff	tablat,___ftmul@f2+1
  8581  001474  000A               	tblrd		*-
  8582  001476  CFF5 F082          	movff	tablat,___ftmul@f2+2
  8583  00147A  0E00               	movlw	0
  8584  00147C  0100               	movlb	0	; () banked
  8585  00147E  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8586  001480  0E64               	movlw	100
  8587  001482  6F77               	movwf	___awdiv@divisor& (0+255),b
  8588  001484  0100               	movlb	0	; () banked
  8589  001486  518F               	movf	scale@scl& (0+255),w,b
  8590  001488  0100               	movlb	0	; () banked
  8591  00148A  6F75               	movwf	___awdiv@dividend& (0+255),b
  8592  00148C  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  8593  00148E  BF75               	btfsc	___awdiv@dividend& (0+255),7,b
  8594  001490  0776               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8595  001492  ECF5  F019         	call	___awdiv	;wreg free
  8596  001496  0E12               	movlw	18
  8597  001498  0100               	movlb	0	; () banked
  8598  00149A  2575               	addwf	?___awdiv& (0+255),w,b
  8599  00149C  0100               	movlb	0	; () banked
  8600  00149E  6F79               	movwf	___wmul@multiplier& (0+255),b
  8601  0014A0  0E00               	movlw	0
  8602  0014A2  0100               	movlb	0	; () banked
  8603  0014A4  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8604  0014A6  0100               	movlb	0	; () banked
  8605  0014A8  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  8606  0014AA  0E00               	movlw	0
  8607  0014AC  0100               	movlb	0	; () banked
  8608  0014AE  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8609  0014B0  0E03               	movlw	3
  8610  0014B2  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8611  0014B4  EC7A  F01D         	call	___wmul	;wreg free
  8612  0014B8  0E1D               	movlw	low __npowers_
  8613  0014BA  0100               	movlb	0	; () banked
  8614  0014BC  2579               	addwf	?___wmul& (0+255),w,b
  8615  0014BE  6EF6               	movwf	tblptrl,c
  8616  0014C0  0E7F               	movlw	high __npowers_
  8617  0014C2  0100               	movlb	0	; () banked
  8618  0014C4  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8619  0014C6  6EF7               	movwf	tblptrh,c
  8620  0014C8                     	if	0	;There are less than 3 active tblptr bytes
  8621  0014C8                     	endif
  8622  0014C8  0009               	tblrd		*+
  8623  0014CA  CFF5 F07D          	movff	tablat,___ftmul@f1
  8624  0014CE  0009               	tblrd		*+
  8625  0014D0  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  8626  0014D4  000A               	tblrd		*-
  8627  0014D6  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  8628  0014DA  ECCC  F014         	call	___ftmul	;wreg free
  8629  0014DE  C07D  F08C         	movff	?___ftmul,_scale$2680
  8630  0014E2  C07E  F08D         	movff	?___ftmul+1,_scale$2680+1
  8631  0014E6  C07F  F08E         	movff	?___ftmul+2,_scale$2680+2
  8632                           
  8633                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8634  0014EA  C08C  F07D         	movff	_scale$2680,___ftmul@f1
  8635  0014EE  C08D  F07E         	movff	_scale$2680+1,___ftmul@f1+1
  8636  0014F2  C08E  F07F         	movff	_scale$2680+2,___ftmul@f1+2
  8637  0014F6  0E00               	movlw	0
  8638  0014F8  0100               	movlb	0	; () banked
  8639  0014FA  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8640  0014FC  0E03               	movlw	3
  8641  0014FE  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8642  001500  0E00               	movlw	0
  8643  001502  0100               	movlb	0	; () banked
  8644  001504  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8645  001506  0E0A               	movlw	10
  8646  001508  6F73               	movwf	___awmod@divisor& (0+255),b
  8647  00150A  0100               	movlb	0	; () banked
  8648  00150C  518F               	movf	scale@scl& (0+255),w,b
  8649  00150E  0100               	movlb	0	; () banked
  8650  001510  6F71               	movwf	___awmod@dividend& (0+255),b
  8651  001512  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8652  001514  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8653  001516  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8654  001518  EC48  F01A         	call	___awmod	;wreg free
  8655  00151C  C071  F079         	movff	?___awmod,___wmul@multiplier
  8656  001520  C072  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  8657  001524  EC7A  F01D         	call	___wmul	;wreg free
  8658  001528  0E1D               	movlw	low __npowers_
  8659  00152A  0100               	movlb	0	; () banked
  8660  00152C  2579               	addwf	?___wmul& (0+255),w,b
  8661  00152E  6EF6               	movwf	tblptrl,c
  8662  001530  0E7F               	movlw	high __npowers_
  8663  001532  0100               	movlb	0	; () banked
  8664  001534  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8665  001536  6EF7               	movwf	tblptrh,c
  8666  001538                     	if	0	;There are less than 3 active tblptr bytes
  8667  001538                     	endif
  8668  001538  0009               	tblrd		*+
  8669  00153A  CFF5 F080          	movff	tablat,___ftmul@f2
  8670  00153E  0009               	tblrd		*+
  8671  001540  CFF5 F081          	movff	tablat,___ftmul@f2+1
  8672  001544  000A               	tblrd		*-
  8673  001546  CFF5 F082          	movff	tablat,___ftmul@f2+2
  8674  00154A  ECCC  F014         	call	___ftmul	;wreg free
  8675  00154E  C07D  F089         	movff	?___ftmul,?_scale
  8676  001552  C07E  F08A         	movff	?___ftmul+1,?_scale+1
  8677  001556  C07F  F08B         	movff	?___ftmul+2,?_scale+2
  8678  00155A  0012               	return	
  8679  00155C                     l5120:
  8680                           
  8681                           ;doprnt.c: 432: else if(scl > 10)
  8682  00155C  0100               	movlb	0	; () banked
  8683  00155E  518F               	movf	scale@scl& (0+255),w,b
  8684  001560  0A80               	xorlw	128
  8685  001562  0F75               	addlw	-139
  8686  001564  A0D8               	btfss	status,0,c
  8687  001566  D05D               	goto	l5126
  8688                           
  8689                           ; BSR set to: 0
  8690                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  8691  001568  0E00               	movlw	0
  8692  00156A  0100               	movlb	0	; () banked
  8693  00156C  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8694  00156E  0E0A               	movlw	10
  8695  001570  6F77               	movwf	___awdiv@divisor& (0+255),b
  8696  001572  0100               	movlb	0	; () banked
  8697  001574  518F               	movf	scale@scl& (0+255),w,b
  8698  001576  0100               	movlb	0	; () banked
  8699  001578  6F75               	movwf	___awdiv@dividend& (0+255),b
  8700  00157A  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  8701  00157C  BF75               	btfsc	___awdiv@dividend& (0+255),7,b
  8702  00157E  0776               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8703  001580  ECF5  F019         	call	___awdiv	;wreg free
  8704  001584  0E09               	movlw	9
  8705  001586  0100               	movlb	0	; () banked
  8706  001588  2575               	addwf	?___awdiv& (0+255),w,b
  8707  00158A  0100               	movlb	0	; () banked
  8708  00158C  6F79               	movwf	___wmul@multiplier& (0+255),b
  8709  00158E  0E00               	movlw	0
  8710  001590  0100               	movlb	0	; () banked
  8711  001592  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8712  001594  0100               	movlb	0	; () banked
  8713  001596  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  8714  001598  0E00               	movlw	0
  8715  00159A  0100               	movlb	0	; () banked
  8716  00159C  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8717  00159E  0E03               	movlw	3
  8718  0015A0  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8719  0015A2  EC7A  F01D         	call	___wmul	;wreg free
  8720  0015A6  0E1D               	movlw	low __npowers_
  8721  0015A8  0100               	movlb	0	; () banked
  8722  0015AA  2579               	addwf	?___wmul& (0+255),w,b
  8723  0015AC  6EF6               	movwf	tblptrl,c
  8724  0015AE  0E7F               	movlw	high __npowers_
  8725  0015B0  0100               	movlb	0	; () banked
  8726  0015B2  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8727  0015B4  6EF7               	movwf	tblptrh,c
  8728  0015B6                     	if	0	;There are less than 3 active tblptr bytes
  8729  0015B6                     	endif
  8730  0015B6  0009               	tblrd		*+
  8731  0015B8  CFF5 F07D          	movff	tablat,___ftmul@f1
  8732  0015BC  0009               	tblrd		*+
  8733  0015BE  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  8734  0015C2  000A               	tblrd		*-
  8735  0015C4  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  8736  0015C8  0E00               	movlw	0
  8737  0015CA  0100               	movlb	0	; () banked
  8738  0015CC  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8739  0015CE  0E03               	movlw	3
  8740  0015D0  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8741  0015D2  0E00               	movlw	0
  8742  0015D4  0100               	movlb	0	; () banked
  8743  0015D6  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8744  0015D8  0E0A               	movlw	10
  8745  0015DA  6F73               	movwf	___awmod@divisor& (0+255),b
  8746  0015DC  0100               	movlb	0	; () banked
  8747  0015DE  518F               	movf	scale@scl& (0+255),w,b
  8748  0015E0  0100               	movlb	0	; () banked
  8749  0015E2  6F71               	movwf	___awmod@dividend& (0+255),b
  8750  0015E4  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8751  0015E6  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8752  0015E8  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8753  0015EA  EC48  F01A         	call	___awmod	;wreg free
  8754  0015EE  C071  F079         	movff	?___awmod,___wmul@multiplier
  8755  0015F2  C072  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  8756  0015F6  EC7A  F01D         	call	___wmul	;wreg free
  8757  0015FA  0E1D               	movlw	low __npowers_
  8758  0015FC  0100               	movlb	0	; () banked
  8759  0015FE  2579               	addwf	?___wmul& (0+255),w,b
  8760  001600  6EF6               	movwf	tblptrl,c
  8761  001602  0E7F               	movlw	high __npowers_
  8762  001604  0100               	movlb	0	; () banked
  8763  001606  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8764  001608  6EF7               	movwf	tblptrh,c
  8765  00160A                     	if	0	;There are less than 3 active tblptr bytes
  8766  00160A                     	endif
  8767  00160A  0009               	tblrd		*+
  8768  00160C  CFF5 F080          	movff	tablat,___ftmul@f2
  8769  001610  0009               	tblrd		*+
  8770  001612  CFF5 F081          	movff	tablat,___ftmul@f2+1
  8771  001616  000A               	tblrd		*-
  8772  001618  CFF5 F082          	movff	tablat,___ftmul@f2+2
  8773  00161C  ECCC  F014         	call	___ftmul	;wreg free
  8774  001620  D796               	goto	L6
  8775  001622                     l5126:
  8776                           
  8777                           ;doprnt.c: 434: return _npowers_[scl];
  8778  001622  0100               	movlb	0	; () banked
  8779  001624  518F               	movf	scale@scl& (0+255),w,b
  8780  001626  0D03               	mullw	3
  8781  001628  0E1D               	movlw	low __npowers_
  8782  00162A  24F3               	addwf	prodl,w,c
  8783  00162C  6EF6               	movwf	tblptrl,c
  8784  00162E  0E7F               	movlw	high __npowers_
  8785  001630  20F4               	addwfc	prodh,w,c
  8786  001632  6EF7               	movwf	tblptrh,c
  8787  001634                     	if	0	;There are less than 3 active tblptr bytes
  8788  001634                     	endif
  8789  001634  0009               	tblrd		*+
  8790  001636  CFF5 F089          	movff	tablat,?_scale
  8791  00163A  0009               	tblrd		*+
  8792  00163C  CFF5 F08A          	movff	tablat,?_scale+1
  8793  001640  000A               	tblrd		*-
  8794  001642  CFF5 F08B          	movff	tablat,?_scale+2
  8795                           
  8796                           ; BSR set to: 0
  8797  001646  0012               	return	
  8798  001648                     l5130:
  8799                           
  8800                           ; BSR set to: 0
  8801                           ;doprnt.c: 435: }
  8802                           ;doprnt.c: 436: if(scl>=110)
  8803  001648  0100               	movlb	0	; () banked
  8804  00164A  518F               	movf	scale@scl& (0+255),w,b
  8805  00164C  0A80               	xorlw	128
  8806  00164E  0F12               	addlw	-238
  8807  001650  A0D8               	btfss	status,0,c
  8808  001652  D0AC               	goto	l5138
  8809                           
  8810                           ; BSR set to: 0
  8811                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8812  001654  0E00               	movlw	0
  8813  001656  0100               	movlb	0	; () banked
  8814  001658  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8815  00165A  0E03               	movlw	3
  8816  00165C  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8817  00165E  0E00               	movlw	0
  8818  001660  0100               	movlb	0	; () banked
  8819  001662  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8820  001664  0E0A               	movlw	10
  8821  001666  6F77               	movwf	___awdiv@divisor& (0+255),b
  8822  001668  0E00               	movlw	0
  8823  00166A  0100               	movlb	0	; () banked
  8824  00166C  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8825  00166E  0E64               	movlw	100
  8826  001670  6F73               	movwf	___awmod@divisor& (0+255),b
  8827  001672  0100               	movlb	0	; () banked
  8828  001674  518F               	movf	scale@scl& (0+255),w,b
  8829  001676  0100               	movlb	0	; () banked
  8830  001678  6F71               	movwf	___awmod@dividend& (0+255),b
  8831  00167A  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8832  00167C  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8833  00167E  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8834  001680  EC48  F01A         	call	___awmod	;wreg free
  8835  001684  C071  F075         	movff	?___awmod,___awdiv@dividend
  8836  001688  C072  F076         	movff	?___awmod+1,___awdiv@dividend+1
  8837  00168C  ECF5  F019         	call	___awdiv	;wreg free
  8838  001690  0E09               	movlw	9
  8839  001692  0100               	movlb	0	; () banked
  8840  001694  2575               	addwf	?___awdiv& (0+255),w,b
  8841  001696  0100               	movlb	0	; () banked
  8842  001698  6F79               	movwf	___wmul@multiplier& (0+255),b
  8843  00169A  0E00               	movlw	0
  8844  00169C  0100               	movlb	0	; () banked
  8845  00169E  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8846  0016A0  0100               	movlb	0	; () banked
  8847  0016A2  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  8848  0016A4  EC7A  F01D         	call	___wmul	;wreg free
  8849  0016A8  0E44               	movlw	low __powers_
  8850  0016AA  0100               	movlb	0	; () banked
  8851  0016AC  2579               	addwf	?___wmul& (0+255),w,b
  8852  0016AE  6EF6               	movwf	tblptrl,c
  8853  0016B0  0E7F               	movlw	high __powers_
  8854  0016B2  0100               	movlb	0	; () banked
  8855  0016B4  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8856  0016B6  6EF7               	movwf	tblptrh,c
  8857  0016B8                     	if	0	;There are less than 3 active tblptr bytes
  8858  0016B8                     	endif
  8859  0016B8  0009               	tblrd		*+
  8860  0016BA  CFF5 F080          	movff	tablat,___ftmul@f2
  8861  0016BE  0009               	tblrd		*+
  8862  0016C0  CFF5 F081          	movff	tablat,___ftmul@f2+1
  8863  0016C4  000A               	tblrd		*-
  8864  0016C6  CFF5 F082          	movff	tablat,___ftmul@f2+2
  8865  0016CA  0E00               	movlw	0
  8866  0016CC  0100               	movlb	0	; () banked
  8867  0016CE  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8868  0016D0  0E64               	movlw	100
  8869  0016D2  6F77               	movwf	___awdiv@divisor& (0+255),b
  8870  0016D4  0100               	movlb	0	; () banked
  8871  0016D6  518F               	movf	scale@scl& (0+255),w,b
  8872  0016D8  0100               	movlb	0	; () banked
  8873  0016DA  6F75               	movwf	___awdiv@dividend& (0+255),b
  8874  0016DC  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  8875  0016DE  BF75               	btfsc	___awdiv@dividend& (0+255),7,b
  8876  0016E0  0776               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8877  0016E2  ECF5  F019         	call	___awdiv	;wreg free
  8878  0016E6  0E12               	movlw	18
  8879  0016E8  0100               	movlb	0	; () banked
  8880  0016EA  2575               	addwf	?___awdiv& (0+255),w,b
  8881  0016EC  0100               	movlb	0	; () banked
  8882  0016EE  6F79               	movwf	___wmul@multiplier& (0+255),b
  8883  0016F0  0E00               	movlw	0
  8884  0016F2  0100               	movlb	0	; () banked
  8885  0016F4  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8886  0016F6  0100               	movlb	0	; () banked
  8887  0016F8  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  8888  0016FA  0E00               	movlw	0
  8889  0016FC  0100               	movlb	0	; () banked
  8890  0016FE  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8891  001700  0E03               	movlw	3
  8892  001702  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8893  001704  EC7A  F01D         	call	___wmul	;wreg free
  8894  001708  0E44               	movlw	low __powers_
  8895  00170A  0100               	movlb	0	; () banked
  8896  00170C  2579               	addwf	?___wmul& (0+255),w,b
  8897  00170E  6EF6               	movwf	tblptrl,c
  8898  001710  0E7F               	movlw	high __powers_
  8899  001712  0100               	movlb	0	; () banked
  8900  001714  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8901  001716  6EF7               	movwf	tblptrh,c
  8902  001718                     	if	0	;There are less than 3 active tblptr bytes
  8903  001718                     	endif
  8904  001718  0009               	tblrd		*+
  8905  00171A  CFF5 F07D          	movff	tablat,___ftmul@f1
  8906  00171E  0009               	tblrd		*+
  8907  001720  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  8908  001724  000A               	tblrd		*-
  8909  001726  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  8910  00172A  ECCC  F014         	call	___ftmul	;wreg free
  8911  00172E  C07D  F08C         	movff	?___ftmul,_scale$2680
  8912  001732  C07E  F08D         	movff	?___ftmul+1,_scale$2680+1
  8913  001736  C07F  F08E         	movff	?___ftmul+2,_scale$2680+2
  8914                           
  8915                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8916  00173A  C08C  F07D         	movff	_scale$2680,___ftmul@f1
  8917  00173E  C08D  F07E         	movff	_scale$2680+1,___ftmul@f1+1
  8918  001742  C08E  F07F         	movff	_scale$2680+2,___ftmul@f1+2
  8919  001746  0E00               	movlw	0
  8920  001748  0100               	movlb	0	; () banked
  8921  00174A  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8922  00174C  0E03               	movlw	3
  8923  00174E  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  8924  001750  0E00               	movlw	0
  8925  001752  0100               	movlb	0	; () banked
  8926  001754  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8927  001756  0E0A               	movlw	10
  8928  001758  6F73               	movwf	___awmod@divisor& (0+255),b
  8929  00175A  0100               	movlb	0	; () banked
  8930  00175C  518F               	movf	scale@scl& (0+255),w,b
  8931  00175E  0100               	movlb	0	; () banked
  8932  001760  6F71               	movwf	___awmod@dividend& (0+255),b
  8933  001762  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8934  001764  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8935  001766  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8936  001768  EC48  F01A         	call	___awmod	;wreg free
  8937  00176C  C071  F079         	movff	?___awmod,___wmul@multiplier
  8938  001770  C072  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  8939  001774  EC7A  F01D         	call	___wmul	;wreg free
  8940  001778  0E44               	movlw	low __powers_
  8941  00177A  0100               	movlb	0	; () banked
  8942  00177C  2579               	addwf	?___wmul& (0+255),w,b
  8943  00177E  6EF6               	movwf	tblptrl,c
  8944  001780  0E7F               	movlw	high __powers_
  8945  001782  0100               	movlb	0	; () banked
  8946  001784  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  8947  001786  6EF7               	movwf	tblptrh,c
  8948  001788                     	if	0	;There are less than 3 active tblptr bytes
  8949  001788                     	endif
  8950  001788  0009               	tblrd		*+
  8951  00178A  CFF5 F080          	movff	tablat,___ftmul@f2
  8952  00178E  0009               	tblrd		*+
  8953  001790  CFF5 F081          	movff	tablat,___ftmul@f2+1
  8954  001794  000A               	tblrd		*-
  8955  001796  CFF5 F082          	movff	tablat,___ftmul@f2+2
  8956  00179A  ECCC  F014         	call	___ftmul	;wreg free
  8957  00179E  C07D  F089         	movff	?___ftmul,?_scale
  8958  0017A2  C07E  F08A         	movff	?___ftmul+1,?_scale+1
  8959  0017A6  C07F  F08B         	movff	?___ftmul+2,?_scale+2
  8960  0017AA  0012               	return	
  8961  0017AC                     l5138:
  8962                           
  8963                           ;doprnt.c: 438: else if(scl > 10)
  8964  0017AC  0100               	movlb	0	; () banked
  8965  0017AE  518F               	movf	scale@scl& (0+255),w,b
  8966  0017B0  0A80               	xorlw	128
  8967  0017B2  0F75               	addlw	-139
  8968  0017B4  A0D8               	btfss	status,0,c
  8969  0017B6  D05D               	goto	l5144
  8970                           
  8971                           ; BSR set to: 0
  8972                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  8973  0017B8  0E00               	movlw	0
  8974  0017BA  0100               	movlb	0	; () banked
  8975  0017BC  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8976  0017BE  0E0A               	movlw	10
  8977  0017C0  6F77               	movwf	___awdiv@divisor& (0+255),b
  8978  0017C2  0100               	movlb	0	; () banked
  8979  0017C4  518F               	movf	scale@scl& (0+255),w,b
  8980  0017C6  0100               	movlb	0	; () banked
  8981  0017C8  6F75               	movwf	___awdiv@dividend& (0+255),b
  8982  0017CA  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  8983  0017CC  BF75               	btfsc	___awdiv@dividend& (0+255),7,b
  8984  0017CE  0776               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8985  0017D0  ECF5  F019         	call	___awdiv	;wreg free
  8986  0017D4  0E09               	movlw	9
  8987  0017D6  0100               	movlb	0	; () banked
  8988  0017D8  2575               	addwf	?___awdiv& (0+255),w,b
  8989  0017DA  0100               	movlb	0	; () banked
  8990  0017DC  6F79               	movwf	___wmul@multiplier& (0+255),b
  8991  0017DE  0E00               	movlw	0
  8992  0017E0  0100               	movlb	0	; () banked
  8993  0017E2  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8994  0017E4  0100               	movlb	0	; () banked
  8995  0017E6  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  8996  0017E8  0E00               	movlw	0
  8997  0017EA  0100               	movlb	0	; () banked
  8998  0017EC  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8999  0017EE  0E03               	movlw	3
  9000  0017F0  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9001  0017F2  EC7A  F01D         	call	___wmul	;wreg free
  9002  0017F6  0E44               	movlw	low __powers_
  9003  0017F8  0100               	movlb	0	; () banked
  9004  0017FA  2579               	addwf	?___wmul& (0+255),w,b
  9005  0017FC  6EF6               	movwf	tblptrl,c
  9006  0017FE  0E7F               	movlw	high __powers_
  9007  001800  0100               	movlb	0	; () banked
  9008  001802  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9009  001804  6EF7               	movwf	tblptrh,c
  9010  001806                     	if	0	;There are less than 3 active tblptr bytes
  9011  001806                     	endif
  9012  001806  0009               	tblrd		*+
  9013  001808  CFF5 F07D          	movff	tablat,___ftmul@f1
  9014  00180C  0009               	tblrd		*+
  9015  00180E  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  9016  001812  000A               	tblrd		*-
  9017  001814  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  9018  001818  0E00               	movlw	0
  9019  00181A  0100               	movlb	0	; () banked
  9020  00181C  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9021  00181E  0E03               	movlw	3
  9022  001820  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9023  001822  0E00               	movlw	0
  9024  001824  0100               	movlb	0	; () banked
  9025  001826  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9026  001828  0E0A               	movlw	10
  9027  00182A  6F73               	movwf	___awmod@divisor& (0+255),b
  9028  00182C  0100               	movlb	0	; () banked
  9029  00182E  518F               	movf	scale@scl& (0+255),w,b
  9030  001830  0100               	movlb	0	; () banked
  9031  001832  6F71               	movwf	___awmod@dividend& (0+255),b
  9032  001834  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9033  001836  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  9034  001838  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  9035  00183A  EC48  F01A         	call	___awmod	;wreg free
  9036  00183E  C071  F079         	movff	?___awmod,___wmul@multiplier
  9037  001842  C072  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  9038  001846  EC7A  F01D         	call	___wmul	;wreg free
  9039  00184A  0E44               	movlw	low __powers_
  9040  00184C  0100               	movlb	0	; () banked
  9041  00184E  2579               	addwf	?___wmul& (0+255),w,b
  9042  001850  6EF6               	movwf	tblptrl,c
  9043  001852  0E7F               	movlw	high __powers_
  9044  001854  0100               	movlb	0	; () banked
  9045  001856  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9046  001858  6EF7               	movwf	tblptrh,c
  9047  00185A                     	if	0	;There are less than 3 active tblptr bytes
  9048  00185A                     	endif
  9049  00185A  0009               	tblrd		*+
  9050  00185C  CFF5 F080          	movff	tablat,___ftmul@f2
  9051  001860  0009               	tblrd		*+
  9052  001862  CFF5 F081          	movff	tablat,___ftmul@f2+1
  9053  001866  000A               	tblrd		*-
  9054  001868  CFF5 F082          	movff	tablat,___ftmul@f2+2
  9055  00186C  ECCC  F014         	call	___ftmul	;wreg free
  9056  001870  D796               	goto	L7
  9057  001872                     l5144:
  9058                           
  9059                           ;doprnt.c: 440: return _powers_[scl];
  9060  001872  0100               	movlb	0	; () banked
  9061  001874  518F               	movf	scale@scl& (0+255),w,b
  9062  001876  0D03               	mullw	3
  9063  001878  0E44               	movlw	low __powers_
  9064  00187A  24F3               	addwf	prodl,w,c
  9065  00187C  6EF6               	movwf	tblptrl,c
  9066  00187E  0E7F               	movlw	high __powers_
  9067  001880  20F4               	addwfc	prodh,w,c
  9068  001882  6EF7               	movwf	tblptrh,c
  9069  001884                     	if	0	;There are less than 3 active tblptr bytes
  9070  001884                     	endif
  9071  001884  0009               	tblrd		*+
  9072  001886  CFF5 F089          	movff	tablat,?_scale
  9073  00188A  0009               	tblrd		*+
  9074  00188C  CFF5 F08A          	movff	tablat,?_scale+1
  9075  001890  000A               	tblrd		*-
  9076  001892  CFF5 F08B          	movff	tablat,?_scale+2
  9077  001896  0012               	return	
  9078  001898                     __end_of_scale:
  9079                           	opt stack 0
  9080                           tblptru	equ	0xFF8
  9081                           tblptrh	equ	0xFF7
  9082                           tblptrl	equ	0xFF6
  9083                           tablat	equ	0xFF5
  9084                           prodh	equ	0xFF4
  9085                           prodl	equ	0xFF3
  9086                           indf0	equ	0xFEF
  9087                           postinc0	equ	0xFEE
  9088                           fsr0h	equ	0xFEA
  9089                           fsr0l	equ	0xFE9
  9090                           wreg	equ	0xFE8
  9091                           indf1	equ	0xFE7
  9092                           postdec1	equ	0xFE5
  9093                           fsr1h	equ	0xFE2
  9094                           fsr1l	equ	0xFE1
  9095                           indf2	equ	0xFDF
  9096                           postinc2	equ	0xFDE
  9097                           postdec2	equ	0xFDD
  9098                           fsr2h	equ	0xFDA
  9099                           fsr2l	equ	0xFD9
  9100                           status	equ	0xFD8
  9101                           
  9102 ;; *************** function _isdigit *****************
  9103 ;; Defined at:
  9104 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
  9105 ;; Parameters:    Size  Location     Type
  9106 ;;  c               1    wreg     unsigned char 
  9107 ;; Auto vars:     Size  Location     Type
  9108 ;;  c               1   35[COMRAM] unsigned char 
  9109 ;; Return value:  Size  Location     Type
  9110 ;;		None               void
  9111 ;; Registers used:
  9112 ;;		wreg, status,2, status,0
  9113 ;; Tracked objects:
  9114 ;;		On entry : 0/0
  9115 ;;		On exit  : 0/0
  9116 ;;		Unchanged: 0/0
  9117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9118 ;;      Params:         0       0       0       0       0       0       0
  9119 ;;      Locals:         2       0       0       0       0       0       0
  9120 ;;      Temps:          1       0       0       0       0       0       0
  9121 ;;      Totals:         3       0       0       0       0       0       0
  9122 ;;Total ram usage:        3 bytes
  9123 ;; Hardware stack levels used:    1
  9124 ;; Hardware stack levels required when called:    3
  9125 ;; This function calls:
  9126 ;;		Nothing
  9127 ;; This function is called by:
  9128 ;;		_sprintf
  9129 ;; This function uses a non-reentrant model
  9130 ;;
  9131                           
  9132                           	psect	text33
  9133  003C5A                     __ptext33:
  9134                           	opt stack 0
  9135  003C5A                     _isdigit:
  9136                           	opt stack 24
  9137                           
  9138                           ;incstack = 0
  9139                           ;isdigit@c stored from wreg
  9140  003C5A  6E24               	movwf	isdigit@c,c
  9141  003C5C  0E00               	movlw	0
  9142  003C5E  6E23               	movwf	_isdigit$2306,c
  9143  003C60  0E3A               	movlw	58
  9144  003C62  6024               	cpfslt	isdigit@c,c
  9145  003C64  D005               	goto	l5156
  9146  003C66  0E2F               	movlw	47
  9147  003C68  6424               	cpfsgt	isdigit@c,c
  9148  003C6A  D002               	goto	l5156
  9149  003C6C  0E01               	movlw	1
  9150  003C6E  6E23               	movwf	_isdigit$2306,c
  9151  003C70                     l5156:
  9152  003C70  C023  F022         	movff	_isdigit$2306,??_isdigit
  9153  003C74  3022               	rrcf	??_isdigit,w,c
  9154  003C76  0012               	return	
  9155  003C78                     __end_of_isdigit:
  9156                           	opt stack 0
  9157                           tblptru	equ	0xFF8
  9158                           tblptrh	equ	0xFF7
  9159                           tblptrl	equ	0xFF6
  9160                           tablat	equ	0xFF5
  9161                           prodh	equ	0xFF4
  9162                           prodl	equ	0xFF3
  9163                           indf0	equ	0xFEF
  9164                           postinc0	equ	0xFEE
  9165                           fsr0h	equ	0xFEA
  9166                           fsr0l	equ	0xFE9
  9167                           wreg	equ	0xFE8
  9168                           indf1	equ	0xFE7
  9169                           postdec1	equ	0xFE5
  9170                           fsr1h	equ	0xFE2
  9171                           fsr1l	equ	0xFE1
  9172                           indf2	equ	0xFDF
  9173                           postinc2	equ	0xFDE
  9174                           postdec2	equ	0xFDD
  9175                           fsr2h	equ	0xFDA
  9176                           fsr2l	equ	0xFD9
  9177                           status	equ	0xFD8
  9178                           
  9179 ;; *************** function _fround *****************
  9180 ;; Defined at:
  9181 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  9182 ;; Parameters:    Size  Location     Type
  9183 ;;  prec            1    wreg     unsigned char 
  9184 ;; Auto vars:     Size  Location     Type
  9185 ;;  prec            1   50[BANK0 ] unsigned char 
  9186 ;; Return value:  Size  Location     Type
  9187 ;;                  3   41[BANK0 ] unsigned char 
  9188 ;; Registers used:
  9189 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9190 ;; Tracked objects:
  9191 ;;		On entry : 0/0
  9192 ;;		On exit  : 0/0
  9193 ;;		Unchanged: 0/0
  9194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9195 ;;      Params:         0       3       0       0       0       0       0
  9196 ;;      Locals:         0       7       0       0       0       0       0
  9197 ;;      Temps:          0       0       0       0       0       0       0
  9198 ;;      Totals:         0      10       0       0       0       0       0
  9199 ;;Total ram usage:       10 bytes
  9200 ;; Hardware stack levels used:    1
  9201 ;; Hardware stack levels required when called:    5
  9202 ;; This function calls:
  9203 ;;		___awdiv
  9204 ;;		___awmod
  9205 ;;		___ftmul
  9206 ;;		___wmul
  9207 ;; This function is called by:
  9208 ;;		_sprintf
  9209 ;; This function uses a non-reentrant model
  9210 ;;
  9211                           
  9212                           	psect	text34
  9213  001C88                     __ptext34:
  9214                           	opt stack 0
  9215  001C88                     _fround:
  9216                           	opt stack 22
  9217                           
  9218                           ;incstack = 0
  9219                           ;fround@prec stored from wreg
  9220  001C88  0100               	movlb	0	; () banked
  9221  001C8A  6F92               	movwf	fround@prec& (0+255),b
  9222                           
  9223                           ;doprnt.c: 413: if(prec>=110)
  9224  001C8C  0E6D               	movlw	109
  9225  001C8E  0100               	movlb	0	; () banked
  9226  001C90  6592               	cpfsgt	fround@prec& (0+255),b
  9227  001C92  D0BA               	goto	l5098
  9228                           
  9229                           ; BSR set to: 0
  9230                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9231  001C94  0E00               	movlw	0
  9232  001C96  0100               	movlb	0	; () banked
  9233  001C98  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9234  001C9A  0E03               	movlw	3
  9235  001C9C  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9236  001C9E  0E00               	movlw	0
  9237  001CA0  0100               	movlb	0	; () banked
  9238  001CA2  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  9239  001CA4  0E0A               	movlw	10
  9240  001CA6  6F77               	movwf	___awdiv@divisor& (0+255),b
  9241  001CA8  0E00               	movlw	0
  9242  001CAA  0100               	movlb	0	; () banked
  9243  001CAC  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9244  001CAE  0E64               	movlw	100
  9245  001CB0  6F73               	movwf	___awmod@divisor& (0+255),b
  9246  001CB2  C092  F071         	movff	fround@prec,___awmod@dividend
  9247  001CB6  0100               	movlb	0	; () banked
  9248  001CB8  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9249  001CBA  EC48  F01A         	call	___awmod	;wreg free
  9250  001CBE  C071  F075         	movff	?___awmod,___awdiv@dividend
  9251  001CC2  C072  F076         	movff	?___awmod+1,___awdiv@dividend+1
  9252  001CC6  ECF5  F019         	call	___awdiv	;wreg free
  9253  001CCA  0E09               	movlw	9
  9254  001CCC  0100               	movlb	0	; () banked
  9255  001CCE  2575               	addwf	?___awdiv& (0+255),w,b
  9256  001CD0  0100               	movlb	0	; () banked
  9257  001CD2  6F79               	movwf	___wmul@multiplier& (0+255),b
  9258  001CD4  0E00               	movlw	0
  9259  001CD6  0100               	movlb	0	; () banked
  9260  001CD8  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  9261  001CDA  0100               	movlb	0	; () banked
  9262  001CDC  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  9263  001CDE  EC7A  F01D         	call	___wmul	;wreg free
  9264  001CE2  0E1D               	movlw	low __npowers_
  9265  001CE4  0100               	movlb	0	; () banked
  9266  001CE6  2579               	addwf	?___wmul& (0+255),w,b
  9267  001CE8  6EF6               	movwf	tblptrl,c
  9268  001CEA  0E7F               	movlw	high __npowers_
  9269  001CEC  0100               	movlb	0	; () banked
  9270  001CEE  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9271  001CF0  6EF7               	movwf	tblptrh,c
  9272  001CF2                     	if	0	;There are less than 3 active tblptr bytes
  9273  001CF2                     	endif
  9274  001CF2  0009               	tblrd		*+
  9275  001CF4  CFF5 F080          	movff	tablat,___ftmul@f2
  9276  001CF8  0009               	tblrd		*+
  9277  001CFA  CFF5 F081          	movff	tablat,___ftmul@f2+1
  9278  001CFE  000A               	tblrd		*-
  9279  001D00  CFF5 F082          	movff	tablat,___ftmul@f2+2
  9280  001D04  0E00               	movlw	0
  9281  001D06  0100               	movlb	0	; () banked
  9282  001D08  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  9283  001D0A  0E64               	movlw	100
  9284  001D0C  6F77               	movwf	___awdiv@divisor& (0+255),b
  9285  001D0E  C092  F075         	movff	fround@prec,___awdiv@dividend
  9286  001D12  0100               	movlb	0	; () banked
  9287  001D14  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  9288  001D16  ECF5  F019         	call	___awdiv	;wreg free
  9289  001D1A  0E12               	movlw	18
  9290  001D1C  0100               	movlb	0	; () banked
  9291  001D1E  2575               	addwf	?___awdiv& (0+255),w,b
  9292  001D20  0100               	movlb	0	; () banked
  9293  001D22  6F79               	movwf	___wmul@multiplier& (0+255),b
  9294  001D24  0E00               	movlw	0
  9295  001D26  0100               	movlb	0	; () banked
  9296  001D28  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  9297  001D2A  0100               	movlb	0	; () banked
  9298  001D2C  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  9299  001D2E  0E00               	movlw	0
  9300  001D30  0100               	movlb	0	; () banked
  9301  001D32  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9302  001D34  0E03               	movlw	3
  9303  001D36  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9304  001D38  EC7A  F01D         	call	___wmul	;wreg free
  9305  001D3C  0E1D               	movlw	low __npowers_
  9306  001D3E  0100               	movlb	0	; () banked
  9307  001D40  2579               	addwf	?___wmul& (0+255),w,b
  9308  001D42  6EF6               	movwf	tblptrl,c
  9309  001D44  0E7F               	movlw	high __npowers_
  9310  001D46  0100               	movlb	0	; () banked
  9311  001D48  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9312  001D4A  6EF7               	movwf	tblptrh,c
  9313  001D4C                     	if	0	;There are less than 3 active tblptr bytes
  9314  001D4C                     	endif
  9315  001D4C  0009               	tblrd		*+
  9316  001D4E  CFF5 F07D          	movff	tablat,___ftmul@f1
  9317  001D52  0009               	tblrd		*+
  9318  001D54  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  9319  001D58  000A               	tblrd		*-
  9320  001D5A  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  9321  001D5E  ECCC  F014         	call	___ftmul	;wreg free
  9322  001D62  C07D  F08F         	movff	?___ftmul,_fround$2678
  9323  001D66  C07E  F090         	movff	?___ftmul+1,_fround$2678+1
  9324  001D6A  C07F  F091         	movff	?___ftmul+2,_fround$2678+2
  9325                           
  9326                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9327  001D6E  0E00               	movlw	0
  9328  001D70  0100               	movlb	0	; () banked
  9329  001D72  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9330  001D74  0E03               	movlw	3
  9331  001D76  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9332  001D78  0E00               	movlw	0
  9333  001D7A  0100               	movlb	0	; () banked
  9334  001D7C  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9335  001D7E  0E0A               	movlw	10
  9336  001D80  6F73               	movwf	___awmod@divisor& (0+255),b
  9337  001D82  C092  F071         	movff	fround@prec,___awmod@dividend
  9338  001D86  0100               	movlb	0	; () banked
  9339  001D88  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9340  001D8A  EC48  F01A         	call	___awmod	;wreg free
  9341  001D8E  C071  F079         	movff	?___awmod,___wmul@multiplier
  9342  001D92  C072  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  9343  001D96  EC7A  F01D         	call	___wmul	;wreg free
  9344  001D9A  0E1D               	movlw	low __npowers_
  9345  001D9C  0100               	movlb	0	; () banked
  9346  001D9E  2579               	addwf	?___wmul& (0+255),w,b
  9347  001DA0  6EF6               	movwf	tblptrl,c
  9348  001DA2  0E7F               	movlw	high __npowers_
  9349  001DA4  0100               	movlb	0	; () banked
  9350  001DA6  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9351  001DA8  6EF7               	movwf	tblptrh,c
  9352  001DAA                     	if	0	;There are less than 3 active tblptr bytes
  9353  001DAA                     	endif
  9354  001DAA  0009               	tblrd		*+
  9355  001DAC  CFF5 F080          	movff	tablat,___ftmul@f2
  9356  001DB0  0009               	tblrd		*+
  9357  001DB2  CFF5 F081          	movff	tablat,___ftmul@f2+1
  9358  001DB6  000A               	tblrd		*-
  9359  001DB8  CFF5 F082          	movff	tablat,___ftmul@f2+2
  9360  001DBC  C08F  F07D         	movff	_fround$2678,___ftmul@f1
  9361  001DC0  C090  F07E         	movff	_fround$2678+1,___ftmul@f1+1
  9362  001DC4  C091  F07F         	movff	_fround$2678+2,___ftmul@f1+2
  9363  001DC8  ECCC  F014         	call	___ftmul	;wreg free
  9364  001DCC  C07D  F08C         	movff	?___ftmul,_fround$2679
  9365  001DD0  C07E  F08D         	movff	?___ftmul+1,_fround$2679+1
  9366  001DD4  C07F  F08E         	movff	?___ftmul+2,_fround$2679+2
  9367                           
  9368                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9369  001DD8  C08C  F07D         	movff	_fround$2679,___ftmul@f1
  9370  001DDC  C08D  F07E         	movff	_fround$2679+1,___ftmul@f1+1
  9371  001DE0  C08E  F07F         	movff	_fround$2679+2,___ftmul@f1+2
  9372  001DE4  0E00               	movlw	0
  9373  001DE6  0100               	movlb	0	; () banked
  9374  001DE8  6F80               	movwf	___ftmul@f2& (0+255),b
  9375  001DEA  0E00               	movlw	0
  9376  001DEC  0100               	movlb	0	; () banked
  9377  001DEE  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  9378  001DF0  0E3F               	movlw	63
  9379  001DF2  0100               	movlb	0	; () banked
  9380  001DF4  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  9381  001DF6  ECCC  F014         	call	___ftmul	;wreg free
  9382  001DFA  C07D  F089         	movff	?___ftmul,?_fround
  9383  001DFE  C07E  F08A         	movff	?___ftmul+1,?_fround+1
  9384  001E02  C07F  F08B         	movff	?___ftmul+2,?_fround+2
  9385  001E06  0012               	return	
  9386  001E08                     l5098:
  9387                           
  9388                           ;doprnt.c: 415: else if(prec > 10)
  9389  001E08  0E0A               	movlw	10
  9390  001E0A  0100               	movlb	0	; () banked
  9391  001E0C  6592               	cpfsgt	fround@prec& (0+255),b
  9392  001E0E  D06E               	goto	l5106
  9393                           
  9394                           ; BSR set to: 0
  9395                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9396  001E10  0E00               	movlw	0
  9397  001E12  0100               	movlb	0	; () banked
  9398  001E14  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9399  001E16  0E03               	movlw	3
  9400  001E18  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9401  001E1A  0E00               	movlw	0
  9402  001E1C  0100               	movlb	0	; () banked
  9403  001E1E  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9404  001E20  0E0A               	movlw	10
  9405  001E22  6F73               	movwf	___awmod@divisor& (0+255),b
  9406  001E24  C092  F071         	movff	fround@prec,___awmod@dividend
  9407  001E28  0100               	movlb	0	; () banked
  9408  001E2A  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9409  001E2C  EC48  F01A         	call	___awmod	;wreg free
  9410  001E30  C071  F079         	movff	?___awmod,___wmul@multiplier
  9411  001E34  C072  F07A         	movff	?___awmod+1,___wmul@multiplier+1
  9412  001E38  EC7A  F01D         	call	___wmul	;wreg free
  9413  001E3C  0E1D               	movlw	low __npowers_
  9414  001E3E  0100               	movlb	0	; () banked
  9415  001E40  2579               	addwf	?___wmul& (0+255),w,b
  9416  001E42  6EF6               	movwf	tblptrl,c
  9417  001E44  0E7F               	movlw	high __npowers_
  9418  001E46  0100               	movlb	0	; () banked
  9419  001E48  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9420  001E4A  6EF7               	movwf	tblptrh,c
  9421  001E4C                     	if	0	;There are less than 3 active tblptr bytes
  9422  001E4C                     	endif
  9423  001E4C  0009               	tblrd		*+
  9424  001E4E  CFF5 F080          	movff	tablat,___ftmul@f2
  9425  001E52  0009               	tblrd		*+
  9426  001E54  CFF5 F081          	movff	tablat,___ftmul@f2+1
  9427  001E58  000A               	tblrd		*-
  9428  001E5A  CFF5 F082          	movff	tablat,___ftmul@f2+2
  9429  001E5E  0E00               	movlw	0
  9430  001E60  0100               	movlb	0	; () banked
  9431  001E62  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  9432  001E64  0E0A               	movlw	10
  9433  001E66  6F77               	movwf	___awdiv@divisor& (0+255),b
  9434  001E68  C092  F075         	movff	fround@prec,___awdiv@dividend
  9435  001E6C  0100               	movlb	0	; () banked
  9436  001E6E  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  9437  001E70  ECF5  F019         	call	___awdiv	;wreg free
  9438  001E74  0E09               	movlw	9
  9439  001E76  0100               	movlb	0	; () banked
  9440  001E78  2575               	addwf	?___awdiv& (0+255),w,b
  9441  001E7A  0100               	movlb	0	; () banked
  9442  001E7C  6F79               	movwf	___wmul@multiplier& (0+255),b
  9443  001E7E  0E00               	movlw	0
  9444  001E80  0100               	movlb	0	; () banked
  9445  001E82  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  9446  001E84  0100               	movlb	0	; () banked
  9447  001E86  6F7A               	movwf	(___wmul@multiplier+1)& (0+255),b
  9448  001E88  0E00               	movlw	0
  9449  001E8A  0100               	movlb	0	; () banked
  9450  001E8C  6F7C               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9451  001E8E  0E03               	movlw	3
  9452  001E90  6F7B               	movwf	___wmul@multiplicand& (0+255),b
  9453  001E92  EC7A  F01D         	call	___wmul	;wreg free
  9454  001E96  0E1D               	movlw	low __npowers_
  9455  001E98  0100               	movlb	0	; () banked
  9456  001E9A  2579               	addwf	?___wmul& (0+255),w,b
  9457  001E9C  6EF6               	movwf	tblptrl,c
  9458  001E9E  0E7F               	movlw	high __npowers_
  9459  001EA0  0100               	movlb	0	; () banked
  9460  001EA2  217A               	addwfc	(?___wmul+1)& (0+255),w,b
  9461  001EA4  6EF7               	movwf	tblptrh,c
  9462  001EA6                     	if	0	;There are less than 3 active tblptr bytes
  9463  001EA6                     	endif
  9464  001EA6  0009               	tblrd		*+
  9465  001EA8  CFF5 F07D          	movff	tablat,___ftmul@f1
  9466  001EAC  0009               	tblrd		*+
  9467  001EAE  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  9468  001EB2  000A               	tblrd		*-
  9469  001EB4  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  9470  001EB8  ECCC  F014         	call	___ftmul	;wreg free
  9471  001EBC  C07D  F08F         	movff	?___ftmul,_fround$2678
  9472  001EC0  C07E  F090         	movff	?___ftmul+1,_fround$2678+1
  9473  001EC4  C07F  F091         	movff	?___ftmul+2,_fround$2678+2
  9474                           
  9475                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9476  001EC8  C08F  F07D         	movff	_fround$2678,___ftmul@f1
  9477  001ECC  C090  F07E         	movff	_fround$2678+1,___ftmul@f1+1
  9478  001ED0  C091  F07F         	movff	_fround$2678+2,___ftmul@f1+2
  9479  001ED4  0E00               	movlw	0
  9480  001ED6  0100               	movlb	0	; () banked
  9481  001ED8  6F80               	movwf	___ftmul@f2& (0+255),b
  9482  001EDA  0E00               	movlw	0
  9483  001EDC  0100               	movlb	0	; () banked
  9484  001EDE  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  9485  001EE0  0E3F               	movlw	63
  9486  001EE2  0100               	movlb	0	; () banked
  9487  001EE4  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  9488  001EE6  ECCC  F014         	call	___ftmul	;wreg free
  9489  001EEA  D787               	goto	L8
  9490  001EEC                     l5106:
  9491                           
  9492                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  9493  001EEC  0100               	movlb	0	; () banked
  9494  001EEE  5192               	movf	fround@prec& (0+255),w,b
  9495  001EF0  0D03               	mullw	3
  9496  001EF2  0E1D               	movlw	low __npowers_
  9497  001EF4  24F3               	addwf	prodl,w,c
  9498  001EF6  6EF6               	movwf	tblptrl,c
  9499  001EF8  0E7F               	movlw	high __npowers_
  9500  001EFA  20F4               	addwfc	prodh,w,c
  9501  001EFC  6EF7               	movwf	tblptrh,c
  9502  001EFE                     	if	0	;There are less than 3 active tblptr bytes
  9503  001EFE                     	endif
  9504  001EFE  0009               	tblrd		*+
  9505  001F00  CFF5 F07D          	movff	tablat,___ftmul@f1
  9506  001F04  0009               	tblrd		*+
  9507  001F06  CFF5 F07E          	movff	tablat,___ftmul@f1+1
  9508  001F0A  000A               	tblrd		*-
  9509  001F0C  CFF5 F07F          	movff	tablat,___ftmul@f1+2
  9510  001F10  0E00               	movlw	0
  9511  001F12  0100               	movlb	0	; () banked
  9512  001F14  6F80               	movwf	___ftmul@f2& (0+255),b
  9513  001F16  0E00               	movlw	0
  9514  001F18  0100               	movlb	0	; () banked
  9515  001F1A  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
  9516  001F1C  0E3F               	movlw	63
  9517  001F1E  0100               	movlb	0	; () banked
  9518  001F20  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
  9519  001F22  ECCC  F014         	call	___ftmul	;wreg free
  9520  001F26  C07D  F089         	movff	?___ftmul,?_fround
  9521  001F2A  C07E  F08A         	movff	?___ftmul+1,?_fround+1
  9522  001F2E  C07F  F08B         	movff	?___ftmul+2,?_fround+2
  9523  001F32  0012               	return	
  9524  001F34                     __end_of_fround:
  9525                           	opt stack 0
  9526                           tblptru	equ	0xFF8
  9527                           tblptrh	equ	0xFF7
  9528                           tblptrl	equ	0xFF6
  9529                           tablat	equ	0xFF5
  9530                           prodh	equ	0xFF4
  9531                           prodl	equ	0xFF3
  9532                           indf0	equ	0xFEF
  9533                           postinc0	equ	0xFEE
  9534                           fsr0h	equ	0xFEA
  9535                           fsr0l	equ	0xFE9
  9536                           wreg	equ	0xFE8
  9537                           indf1	equ	0xFE7
  9538                           postdec1	equ	0xFE5
  9539                           fsr1h	equ	0xFE2
  9540                           fsr1l	equ	0xFE1
  9541                           indf2	equ	0xFDF
  9542                           postinc2	equ	0xFDE
  9543                           postdec2	equ	0xFDD
  9544                           fsr2h	equ	0xFDA
  9545                           fsr2l	equ	0xFD9
  9546                           status	equ	0xFD8
  9547                           
  9548 ;; *************** function ___wmul *****************
  9549 ;; Defined at:
  9550 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  9551 ;; Parameters:    Size  Location     Type
  9552 ;;  multiplier      2   25[BANK0 ] unsigned int 
  9553 ;;  multiplicand    2   27[BANK0 ] unsigned int 
  9554 ;; Auto vars:     Size  Location     Type
  9555 ;;  product         2   39[COMRAM] unsigned int 
  9556 ;; Return value:  Size  Location     Type
  9557 ;;                  2   25[BANK0 ] unsigned int 
  9558 ;; Registers used:
  9559 ;;		wreg, status,2, status,0, prodl, prodh
  9560 ;; Tracked objects:
  9561 ;;		On entry : 0/0
  9562 ;;		On exit  : 0/0
  9563 ;;		Unchanged: 0/0
  9564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9565 ;;      Params:         0       4       0       0       0       0       0
  9566 ;;      Locals:         2       0       0       0       0       0       0
  9567 ;;      Temps:          0       0       0       0       0       0       0
  9568 ;;      Totals:         2       4       0       0       0       0       0
  9569 ;;Total ram usage:        6 bytes
  9570 ;; Hardware stack levels used:    1
  9571 ;; Hardware stack levels required when called:    3
  9572 ;; This function calls:
  9573 ;;		Nothing
  9574 ;; This function is called by:
  9575 ;;		_fround
  9576 ;;		_scale
  9577 ;;		_sprintf
  9578 ;; This function uses a non-reentrant model
  9579 ;;
  9580                           
  9581                           	psect	text35
  9582  003AF4                     __ptext35:
  9583                           	opt stack 0
  9584  003AF4                     ___wmul:
  9585                           	opt stack 23
  9586                           
  9587                           ;incstack = 0
  9588  003AF4  0100               	movlb	0	; () banked
  9589  003AF6  5179               	movf	___wmul@multiplier& (0+255),w,b
  9590  003AF8  0100               	movlb	0	; () banked
  9591  003AFA  037B               	mulwf	___wmul@multiplicand& (0+255),b
  9592  003AFC  CFF3 F028          	movff	prodl,___wmul@product
  9593  003B00  CFF4 F029          	movff	prodh,___wmul@product+1
  9594  003B04  0100               	movlb	0	; () banked
  9595  003B06  5179               	movf	___wmul@multiplier& (0+255),w,b
  9596  003B08  0100               	movlb	0	; () banked
  9597  003B0A  037C               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9598  003B0C  50F3               	movf	prodl,w,c
  9599  003B0E  2629               	addwf	___wmul@product+1,f,c
  9600  003B10  0100               	movlb	0	; () banked
  9601  003B12  517A               	movf	(___wmul@multiplier+1)& (0+255),w,b
  9602  003B14  0100               	movlb	0	; () banked
  9603  003B16  037B               	mulwf	___wmul@multiplicand& (0+255),b
  9604  003B18  50F3               	movf	prodl,w,c
  9605  003B1A  2629               	addwf	___wmul@product+1,f,c
  9606                           
  9607                           ; BSR set to: 0
  9608  003B1C  C028  F079         	movff	___wmul@product,?___wmul
  9609  003B20  C029  F07A         	movff	___wmul@product+1,?___wmul+1
  9610  003B24  0012               	return	
  9611  003B26                     __end_of___wmul:
  9612                           	opt stack 0
  9613                           tblptru	equ	0xFF8
  9614                           tblptrh	equ	0xFF7
  9615                           tblptrl	equ	0xFF6
  9616                           tablat	equ	0xFF5
  9617                           prodh	equ	0xFF4
  9618                           prodl	equ	0xFF3
  9619                           indf0	equ	0xFEF
  9620                           postinc0	equ	0xFEE
  9621                           fsr0h	equ	0xFEA
  9622                           fsr0l	equ	0xFE9
  9623                           wreg	equ	0xFE8
  9624                           indf1	equ	0xFE7
  9625                           postdec1	equ	0xFE5
  9626                           fsr1h	equ	0xFE2
  9627                           fsr1l	equ	0xFE1
  9628                           indf2	equ	0xFDF
  9629                           postinc2	equ	0xFDE
  9630                           postdec2	equ	0xFDD
  9631                           fsr2h	equ	0xFDA
  9632                           fsr2l	equ	0xFD9
  9633                           status	equ	0xFD8
  9634                           
  9635 ;; *************** function ___ftmul *****************
  9636 ;; Defined at:
  9637 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  9638 ;; Parameters:    Size  Location     Type
  9639 ;;  f1              3   29[BANK0 ] float 
  9640 ;;  f2              3   32[BANK0 ] float 
  9641 ;; Auto vars:     Size  Location     Type
  9642 ;;  f3_as_produc    3   36[BANK0 ] unsigned um
  9643 ;;  sign            1   40[BANK0 ] unsigned char 
  9644 ;;  cntr            1   39[BANK0 ] unsigned char 
  9645 ;;  exp             1   35[BANK0 ] unsigned char 
  9646 ;; Return value:  Size  Location     Type
  9647 ;;                  3   29[BANK0 ] float 
  9648 ;; Registers used:
  9649 ;;		wreg, status,2, status,0, cstack
  9650 ;; Tracked objects:
  9651 ;;		On entry : 0/0
  9652 ;;		On exit  : 0/0
  9653 ;;		Unchanged: 0/0
  9654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9655 ;;      Params:         0       6       0       0       0       0       0
  9656 ;;      Locals:         0       6       0       0       0       0       0
  9657 ;;      Temps:          3       0       0       0       0       0       0
  9658 ;;      Totals:         3      12       0       0       0       0       0
  9659 ;;Total ram usage:       15 bytes
  9660 ;; Hardware stack levels used:    1
  9661 ;; Hardware stack levels required when called:    4
  9662 ;; This function calls:
  9663 ;;		___ftpack
  9664 ;; This function is called by:
  9665 ;;		_util_getBatteryVoltage
  9666 ;;		_util_getSolarCurrent
  9667 ;;		_util_getBatteryCurrent
  9668 ;;		_util_getTemperature
  9669 ;;		_fround
  9670 ;;		_scale
  9671 ;;		_sprintf
  9672 ;; This function uses a non-reentrant model
  9673 ;;
  9674                           
  9675                           	psect	text36
  9676  002998                     __ptext36:
  9677                           	opt stack 0
  9678  002998                     ___ftmul:
  9679                           	opt stack 24
  9680                           
  9681                           ; BSR set to: 0
  9682                           ;incstack = 0
  9683  002998  C07F  F02A         	movff	___ftmul@f1+2,??___ftmul
  9684  00299C  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  9685  00299E  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  9686  0029A0  0100               	movlb	0	; () banked
  9687  0029A2  357E               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  9688  0029A4  362A               	rlcf	??___ftmul& (0+255),f,c
  9689  0029A6  E301               	bnc	u4781
  9690  0029A8  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  9691  0029AA                     u4781:
  9692  0029AA  502A               	movf	??___ftmul,w,c
  9693  0029AC  0100               	movlb	0	; () banked
  9694  0029AE  6F83               	movwf	___ftmul@exp& (0+255),b
  9695  0029B0  0100               	movlb	0	; () banked
  9696  0029B2  5183               	movf	___ftmul@exp& (0+255),w,b
  9697  0029B4  A4D8               	btfss	status,2,c
  9698  0029B6  D00A               	goto	l4896
  9699                           
  9700                           ; BSR set to: 0
  9701  0029B8  0E00               	movlw	0
  9702  0029BA  0100               	movlb	0	; () banked
  9703  0029BC  6F7D               	movwf	?___ftmul& (0+255),b
  9704  0029BE  0E00               	movlw	0
  9705  0029C0  0100               	movlb	0	; () banked
  9706  0029C2  6F7E               	movwf	(?___ftmul+1)& (0+255),b
  9707  0029C4  0E00               	movlw	0
  9708  0029C6  0100               	movlb	0	; () banked
  9709  0029C8  6F7F               	movwf	(?___ftmul+2)& (0+255),b
  9710                           
  9711                           ; BSR set to: 0
  9712  0029CA  0012               	return	
  9713  0029CC                     l4896:
  9714                           
  9715                           ; BSR set to: 0
  9716  0029CC  C082  F02A         	movff	___ftmul@f2+2,??___ftmul
  9717  0029D0  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  9718  0029D2  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  9719  0029D4  0100               	movlb	0	; () banked
  9720  0029D6  3581               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  9721  0029D8  362A               	rlcf	??___ftmul& (0+255),f,c
  9722  0029DA  E301               	bnc	u4801
  9723  0029DC  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  9724  0029DE                     u4801:
  9725  0029DE  502A               	movf	??___ftmul,w,c
  9726  0029E0  0100               	movlb	0	; () banked
  9727  0029E2  6F88               	movwf	___ftmul@sign& (0+255),b
  9728  0029E4  0100               	movlb	0	; () banked
  9729  0029E6  5188               	movf	___ftmul@sign& (0+255),w,b
  9730  0029E8  A4D8               	btfss	status,2,c
  9731  0029EA  D00A               	goto	l4902
  9732                           
  9733                           ; BSR set to: 0
  9734  0029EC  0E00               	movlw	0
  9735  0029EE  0100               	movlb	0	; () banked
  9736  0029F0  6F7D               	movwf	?___ftmul& (0+255),b
  9737  0029F2  0E00               	movlw	0
  9738  0029F4  0100               	movlb	0	; () banked
  9739  0029F6  6F7E               	movwf	(?___ftmul+1)& (0+255),b
  9740  0029F8  0E00               	movlw	0
  9741  0029FA  0100               	movlb	0	; () banked
  9742  0029FC  6F7F               	movwf	(?___ftmul+2)& (0+255),b
  9743                           
  9744                           ; BSR set to: 0
  9745  0029FE  0012               	return	
  9746  002A00                     l4902:
  9747                           
  9748                           ; BSR set to: 0
  9749  002A00  0100               	movlb	0	; () banked
  9750  002A02  5188               	movf	___ftmul@sign& (0+255),w,b
  9751  002A04  0F7B               	addlw	123
  9752  002A06  0100               	movlb	0	; () banked
  9753  002A08  2783               	addwf	___ftmul@exp& (0+255),f,b
  9754                           
  9755                           ; BSR set to: 0
  9756  002A0A  C07F  F088         	movff	___ftmul@f1+2,___ftmul@sign
  9757  002A0E  0100               	movlb	0	; () banked
  9758  002A10  5182               	movf	(___ftmul@f2+2)& (0+255),w,b
  9759  002A12  0100               	movlb	0	; () banked
  9760  002A14  1B88               	xorwf	___ftmul@sign& (0+255),f,b
  9761  002A16  0E80               	movlw	128
  9762  002A18  0100               	movlb	0	; () banked
  9763  002A1A  1788               	andwf	___ftmul@sign& (0+255),f,b
  9764                           
  9765                           ; BSR set to: 0
  9766  002A1C  0100               	movlb	0	; () banked
  9767  002A1E  8F7E               	bsf	(___ftmul@f1+1)& (0+255),7,b
  9768                           
  9769                           ; BSR set to: 0
  9770  002A20  0100               	movlb	0	; () banked
  9771  002A22  8F81               	bsf	(___ftmul@f2+1)& (0+255),7,b
  9772                           
  9773                           ; BSR set to: 0
  9774  002A24  0EFF               	movlw	255
  9775  002A26  0100               	movlb	0	; () banked
  9776  002A28  1780               	andwf	___ftmul@f2& (0+255),f,b
  9777  002A2A  0EFF               	movlw	255
  9778  002A2C  0100               	movlb	0	; () banked
  9779  002A2E  1781               	andwf	(___ftmul@f2+1)& (0+255),f,b
  9780  002A30  0E00               	movlw	0
  9781  002A32  0100               	movlb	0	; () banked
  9782  002A34  1782               	andwf	(___ftmul@f2+2)& (0+255),f,b
  9783                           
  9784                           ; BSR set to: 0
  9785  002A36  0E00               	movlw	0
  9786  002A38  0100               	movlb	0	; () banked
  9787  002A3A  6F84               	movwf	___ftmul@f3_as_product& (0+255),b
  9788  002A3C  0E00               	movlw	0
  9789  002A3E  0100               	movlb	0	; () banked
  9790  002A40  6F85               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  9791  002A42  0E00               	movlw	0
  9792  002A44  0100               	movlb	0	; () banked
  9793  002A46  6F86               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  9794                           
  9795                           ; BSR set to: 0
  9796  002A48  0E07               	movlw	7
  9797  002A4A  0100               	movlb	0	; () banked
  9798  002A4C  6F87               	movwf	___ftmul@cntr& (0+255),b
  9799  002A4E                     l4916:
  9800                           
  9801                           ; BSR set to: 0
  9802  002A4E  0100               	movlb	0	; () banked
  9803  002A50  A17D               	btfss	___ftmul@f1& (0+255),0,b
  9804  002A52  D00C               	goto	l4920
  9805                           
  9806                           ; BSR set to: 0
  9807  002A54  0100               	movlb	0	; () banked
  9808  002A56  5180               	movf	___ftmul@f2& (0+255),w,b
  9809  002A58  0100               	movlb	0	; () banked
  9810  002A5A  2784               	addwf	___ftmul@f3_as_product& (0+255),f,b
  9811  002A5C  0100               	movlb	0	; () banked
  9812  002A5E  5181               	movf	(___ftmul@f2+1)& (0+255),w,b
  9813  002A60  0100               	movlb	0	; () banked
  9814  002A62  2385               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  9815  002A64  0100               	movlb	0	; () banked
  9816  002A66  5182               	movf	(___ftmul@f2+2)& (0+255),w,b
  9817  002A68  0100               	movlb	0	; () banked
  9818  002A6A  2386               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  9819  002A6C                     l4920:
  9820                           
  9821                           ; BSR set to: 0
  9822  002A6C  0100               	movlb	0	; () banked
  9823  002A6E  90D8               	bcf	status,0,c
  9824  002A70  337F               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  9825  002A72  337E               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  9826  002A74  337D               	rrcf	___ftmul@f1& (0+255),f,b
  9827  002A76  0100               	movlb	0	; () banked
  9828  002A78  90D8               	bcf	status,0,c
  9829  002A7A  3780               	rlcf	___ftmul@f2& (0+255),f,b
  9830  002A7C  3781               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  9831  002A7E  3782               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  9832                           
  9833                           ; BSR set to: 0
  9834  002A80  0100               	movlb	0	; () banked
  9835  002A82  2F87               	decfsz	___ftmul@cntr& (0+255),f,b
  9836  002A84  D7E4               	goto	l4916
  9837                           
  9838                           ; BSR set to: 0
  9839                           
  9840                           ; BSR set to: 0
  9841  002A86  0E09               	movlw	9
  9842  002A88  0100               	movlb	0	; () banked
  9843  002A8A  6F87               	movwf	___ftmul@cntr& (0+255),b
  9844  002A8C                     l4926:
  9845                           
  9846                           ; BSR set to: 0
  9847  002A8C  0100               	movlb	0	; () banked
  9848  002A8E  A17D               	btfss	___ftmul@f1& (0+255),0,b
  9849  002A90  D00C               	goto	l4930
  9850                           
  9851                           ; BSR set to: 0
  9852  002A92  0100               	movlb	0	; () banked
  9853  002A94  5180               	movf	___ftmul@f2& (0+255),w,b
  9854  002A96  0100               	movlb	0	; () banked
  9855  002A98  2784               	addwf	___ftmul@f3_as_product& (0+255),f,b
  9856  002A9A  0100               	movlb	0	; () banked
  9857  002A9C  5181               	movf	(___ftmul@f2+1)& (0+255),w,b
  9858  002A9E  0100               	movlb	0	; () banked
  9859  002AA0  2385               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  9860  002AA2  0100               	movlb	0	; () banked
  9861  002AA4  5182               	movf	(___ftmul@f2+2)& (0+255),w,b
  9862  002AA6  0100               	movlb	0	; () banked
  9863  002AA8  2386               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  9864  002AAA                     l4930:
  9865                           
  9866                           ; BSR set to: 0
  9867  002AAA  0100               	movlb	0	; () banked
  9868  002AAC  90D8               	bcf	status,0,c
  9869  002AAE  337F               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  9870  002AB0  337E               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  9871  002AB2  337D               	rrcf	___ftmul@f1& (0+255),f,b
  9872  002AB4  0100               	movlb	0	; () banked
  9873  002AB6  90D8               	bcf	status,0,c
  9874  002AB8  3386               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  9875  002ABA  3385               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  9876  002ABC  3384               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  9877                           
  9878                           ; BSR set to: 0
  9879  002ABE  0100               	movlb	0	; () banked
  9880  002AC0  2F87               	decfsz	___ftmul@cntr& (0+255),f,b
  9881  002AC2  D7E4               	goto	l4926
  9882                           
  9883                           ; BSR set to: 0
  9884                           
  9885                           ; BSR set to: 0
  9886  002AC4  C084  F071         	movff	___ftmul@f3_as_product,___ftpack@arg
  9887  002AC8  C085  F072         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  9888  002ACC  C086  F073         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  9889  002AD0  C083  F074         	movff	___ftmul@exp,___ftpack@exp
  9890  002AD4  C088  F075         	movff	___ftmul@sign,___ftpack@sign
  9891  002AD8  EC40  F017         	call	___ftpack	;wreg free
  9892  002ADC  C071  F07D         	movff	?___ftpack,?___ftmul
  9893  002AE0  C072  F07E         	movff	?___ftpack+1,?___ftmul+1
  9894  002AE4  C073  F07F         	movff	?___ftpack+2,?___ftmul+2
  9895  002AE8  0012               	return	
  9896  002AEA                     __end_of___ftmul:
  9897                           	opt stack 0
  9898                           tblptru	equ	0xFF8
  9899                           tblptrh	equ	0xFF7
  9900                           tblptrl	equ	0xFF6
  9901                           tablat	equ	0xFF5
  9902                           prodh	equ	0xFF4
  9903                           prodl	equ	0xFF3
  9904                           indf0	equ	0xFEF
  9905                           postinc0	equ	0xFEE
  9906                           fsr0h	equ	0xFEA
  9907                           fsr0l	equ	0xFE9
  9908                           wreg	equ	0xFE8
  9909                           indf1	equ	0xFE7
  9910                           postdec1	equ	0xFE5
  9911                           fsr1h	equ	0xFE2
  9912                           fsr1l	equ	0xFE1
  9913                           indf2	equ	0xFDF
  9914                           postinc2	equ	0xFDE
  9915                           postdec2	equ	0xFDD
  9916                           fsr2h	equ	0xFDA
  9917                           fsr2l	equ	0xFD9
  9918                           status	equ	0xFD8
  9919                           
  9920 ;; *************** function ___awmod *****************
  9921 ;; Defined at:
  9922 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  9923 ;; Parameters:    Size  Location     Type
  9924 ;;  dividend        2   17[BANK0 ] int 
  9925 ;;  divisor         2   19[BANK0 ] int 
  9926 ;; Auto vars:     Size  Location     Type
  9927 ;;  sign            1   34[COMRAM] unsigned char 
  9928 ;;  counter         1   33[COMRAM] unsigned char 
  9929 ;; Return value:  Size  Location     Type
  9930 ;;                  2   17[BANK0 ] int 
  9931 ;; Registers used:
  9932 ;;		wreg, status,2, status,0
  9933 ;; Tracked objects:
  9934 ;;		On entry : 0/0
  9935 ;;		On exit  : 0/0
  9936 ;;		Unchanged: 0/0
  9937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9938 ;;      Params:         0       4       0       0       0       0       0
  9939 ;;      Locals:         2       0       0       0       0       0       0
  9940 ;;      Temps:          0       0       0       0       0       0       0
  9941 ;;      Totals:         2       4       0       0       0       0       0
  9942 ;;Total ram usage:        6 bytes
  9943 ;; Hardware stack levels used:    1
  9944 ;; Hardware stack levels required when called:    3
  9945 ;; This function calls:
  9946 ;;		Nothing
  9947 ;; This function is called by:
  9948 ;;		_fround
  9949 ;;		_scale
  9950 ;; This function uses a non-reentrant model
  9951 ;;
  9952                           
  9953                           	psect	text37
  9954  003490                     __ptext37:
  9955                           	opt stack 0
  9956  003490                     ___awmod:
  9957                           	opt stack 23
  9958                           
  9959                           ;incstack = 0
  9960  003490  0E00               	movlw	0
  9961  003492  6E23               	movwf	___awmod@sign,c
  9962  003494  0100               	movlb	0	; () banked
  9963  003496  AF72               	btfss	(___awmod@dividend+1)& (0+255),7,b
  9964  003498  D007               	goto	l4990
  9965                           
  9966                           ; BSR set to: 0
  9967  00349A  0100               	movlb	0	; () banked
  9968  00349C  6D71               	negf	___awmod@dividend& (0+255),b
  9969  00349E  1F72               	comf	(___awmod@dividend+1)& (0+255),f,b
  9970  0034A0  B0D8               	btfsc	status,0,c
  9971  0034A2  2B72               	incf	(___awmod@dividend+1)& (0+255),f,b
  9972                           
  9973                           ; BSR set to: 0
  9974  0034A4  0E01               	movlw	1
  9975  0034A6  6E23               	movwf	___awmod@sign,c
  9976  0034A8                     l4990:
  9977                           
  9978                           ; BSR set to: 0
  9979  0034A8  0100               	movlb	0	; () banked
  9980  0034AA  AF74               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9981  0034AC  D005               	goto	l4994
  9982                           
  9983                           ; BSR set to: 0
  9984  0034AE  0100               	movlb	0	; () banked
  9985  0034B0  6D73               	negf	___awmod@divisor& (0+255),b
  9986  0034B2  1F74               	comf	(___awmod@divisor+1)& (0+255),f,b
  9987  0034B4  B0D8               	btfsc	status,0,c
  9988  0034B6  2B74               	incf	(___awmod@divisor+1)& (0+255),f,b
  9989  0034B8                     l4994:
  9990                           
  9991                           ; BSR set to: 0
  9992  0034B8  0100               	movlb	0	; () banked
  9993  0034BA  5173               	movf	___awmod@divisor& (0+255),w,b
  9994  0034BC  0100               	movlb	0	; () banked
  9995  0034BE  1174               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  9996  0034C0  B4D8               	btfsc	status,2,c
  9997  0034C2  D023               	goto	l5010
  9998                           
  9999                           ; BSR set to: 0
 10000  0034C4  0E01               	movlw	1
 10001  0034C6  6E22               	movwf	___awmod@counter,c
 10002  0034C8  D005               	goto	l5000
 10003  0034CA                     l4998:
 10004                           
 10005                           ; BSR set to: 0
 10006  0034CA  0100               	movlb	0	; () banked
 10007  0034CC  90D8               	bcf	status,0,c
 10008  0034CE  3773               	rlcf	___awmod@divisor& (0+255),f,b
 10009  0034D0  3774               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 10010  0034D2  2A22               	incf	___awmod@counter,f,c
 10011  0034D4                     l5000:
 10012                           
 10013                           ; BSR set to: 0
 10014  0034D4  0100               	movlb	0	; () banked
 10015  0034D6  AF74               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10016  0034D8  D7F8               	goto	l4998
 10017  0034DA                     l5002:
 10018                           
 10019                           ; BSR set to: 0
 10020  0034DA  0100               	movlb	0	; () banked
 10021  0034DC  5173               	movf	___awmod@divisor& (0+255),w,b
 10022  0034DE  0100               	movlb	0	; () banked
 10023  0034E0  5D71               	subwf	___awmod@dividend& (0+255),w,b
 10024  0034E2  0100               	movlb	0	; () banked
 10025  0034E4  5174               	movf	(___awmod@divisor+1)& (0+255),w,b
 10026  0034E6  0100               	movlb	0	; () banked
 10027  0034E8  5972               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 10028  0034EA  A0D8               	btfss	status,0,c
 10029  0034EC  D008               	goto	l5006
 10030                           
 10031                           ; BSR set to: 0
 10032  0034EE  0100               	movlb	0	; () banked
 10033  0034F0  5173               	movf	___awmod@divisor& (0+255),w,b
 10034  0034F2  0100               	movlb	0	; () banked
 10035  0034F4  5F71               	subwf	___awmod@dividend& (0+255),f,b
 10036  0034F6  0100               	movlb	0	; () banked
 10037  0034F8  5174               	movf	(___awmod@divisor+1)& (0+255),w,b
 10038  0034FA  0100               	movlb	0	; () banked
 10039  0034FC  5B72               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 10040  0034FE                     l5006:
 10041                           
 10042                           ; BSR set to: 0
 10043  0034FE  0100               	movlb	0	; () banked
 10044  003500  90D8               	bcf	status,0,c
 10045  003502  3374               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 10046  003504  3373               	rrcf	___awmod@divisor& (0+255),f,b
 10047                           
 10048                           ; BSR set to: 0
 10049  003506  2E22               	decfsz	___awmod@counter,f,c
 10050  003508  D7E8               	goto	l5002
 10051  00350A                     l5010:
 10052                           
 10053                           ; BSR set to: 0
 10054  00350A  5023               	movf	___awmod@sign,w,c
 10055  00350C  B4D8               	btfsc	status,2,c
 10056  00350E  D005               	goto	l5014
 10057                           
 10058                           ; BSR set to: 0
 10059  003510  0100               	movlb	0	; () banked
 10060  003512  6D71               	negf	___awmod@dividend& (0+255),b
 10061  003514  1F72               	comf	(___awmod@dividend+1)& (0+255),f,b
 10062  003516  B0D8               	btfsc	status,0,c
 10063  003518  2B72               	incf	(___awmod@dividend+1)& (0+255),f,b
 10064  00351A                     l5014:
 10065                           
 10066                           ; BSR set to: 0
 10067  00351A  C071  F071         	movff	___awmod@dividend,?___awmod
 10068  00351E  C072  F072         	movff	___awmod@dividend+1,?___awmod+1
 10069  003522  0012               	return	
 10070  003524                     __end_of___awmod:
 10071                           	opt stack 0
 10072                           tblptru	equ	0xFF8
 10073                           tblptrh	equ	0xFF7
 10074                           tblptrl	equ	0xFF6
 10075                           tablat	equ	0xFF5
 10076                           prodh	equ	0xFF4
 10077                           prodl	equ	0xFF3
 10078                           indf0	equ	0xFEF
 10079                           postinc0	equ	0xFEE
 10080                           fsr0h	equ	0xFEA
 10081                           fsr0l	equ	0xFE9
 10082                           wreg	equ	0xFE8
 10083                           indf1	equ	0xFE7
 10084                           postdec1	equ	0xFE5
 10085                           fsr1h	equ	0xFE2
 10086                           fsr1l	equ	0xFE1
 10087                           indf2	equ	0xFDF
 10088                           postinc2	equ	0xFDE
 10089                           postdec2	equ	0xFDD
 10090                           fsr2h	equ	0xFDA
 10091                           fsr2l	equ	0xFD9
 10092                           status	equ	0xFD8
 10093                           
 10094 ;; *************** function ___awdiv *****************
 10095 ;; Defined at:
 10096 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 10097 ;; Parameters:    Size  Location     Type
 10098 ;;  dividend        2   21[BANK0 ] int 
 10099 ;;  divisor         2   23[BANK0 ] int 
 10100 ;; Auto vars:     Size  Location     Type
 10101 ;;  quotient        2   37[COMRAM] int 
 10102 ;;  sign            1   36[COMRAM] unsigned char 
 10103 ;;  counter         1   35[COMRAM] unsigned char 
 10104 ;; Return value:  Size  Location     Type
 10105 ;;                  2   21[BANK0 ] int 
 10106 ;; Registers used:
 10107 ;;		wreg, status,2, status,0
 10108 ;; Tracked objects:
 10109 ;;		On entry : 0/0
 10110 ;;		On exit  : 0/0
 10111 ;;		Unchanged: 0/0
 10112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10113 ;;      Params:         0       4       0       0       0       0       0
 10114 ;;      Locals:         4       0       0       0       0       0       0
 10115 ;;      Temps:          0       0       0       0       0       0       0
 10116 ;;      Totals:         4       4       0       0       0       0       0
 10117 ;;Total ram usage:        8 bytes
 10118 ;; Hardware stack levels used:    1
 10119 ;; Hardware stack levels required when called:    3
 10120 ;; This function calls:
 10121 ;;		Nothing
 10122 ;; This function is called by:
 10123 ;;		_fround
 10124 ;;		_scale
 10125 ;;		_sprintf
 10126 ;; This function uses a non-reentrant model
 10127 ;;
 10128                           
 10129                           	psect	text38
 10130  0033EA                     __ptext38:
 10131                           	opt stack 0
 10132  0033EA                     ___awdiv:
 10133                           	opt stack 23
 10134                           
 10135                           ; BSR set to: 0
 10136                           ;incstack = 0
 10137  0033EA  0E00               	movlw	0
 10138  0033EC  6E25               	movwf	___awdiv@sign,c
 10139  0033EE  0100               	movlb	0	; () banked
 10140  0033F0  AF78               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10141  0033F2  D007               	goto	l4946
 10142                           
 10143                           ; BSR set to: 0
 10144  0033F4  0100               	movlb	0	; () banked
 10145  0033F6  6D77               	negf	___awdiv@divisor& (0+255),b
 10146  0033F8  1F78               	comf	(___awdiv@divisor+1)& (0+255),f,b
 10147  0033FA  B0D8               	btfsc	status,0,c
 10148  0033FC  2B78               	incf	(___awdiv@divisor+1)& (0+255),f,b
 10149                           
 10150                           ; BSR set to: 0
 10151  0033FE  0E01               	movlw	1
 10152  003400  6E25               	movwf	___awdiv@sign,c
 10153  003402                     l4946:
 10154                           
 10155                           ; BSR set to: 0
 10156  003402  0100               	movlb	0	; () banked
 10157  003404  AF76               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 10158  003406  D007               	goto	l4952
 10159                           
 10160                           ; BSR set to: 0
 10161  003408  0100               	movlb	0	; () banked
 10162  00340A  6D75               	negf	___awdiv@dividend& (0+255),b
 10163  00340C  1F76               	comf	(___awdiv@dividend+1)& (0+255),f,b
 10164  00340E  B0D8               	btfsc	status,0,c
 10165  003410  2B76               	incf	(___awdiv@dividend+1)& (0+255),f,b
 10166                           
 10167                           ; BSR set to: 0
 10168  003412  0E01               	movlw	1
 10169  003414  1A25               	xorwf	___awdiv@sign,f,c
 10170  003416                     l4952:
 10171                           
 10172                           ; BSR set to: 0
 10173  003416  0E00               	movlw	0
 10174  003418  6E27               	movwf	___awdiv@quotient+1,c
 10175  00341A  0E00               	movlw	0
 10176  00341C  6E26               	movwf	___awdiv@quotient,c
 10177                           
 10178                           ; BSR set to: 0
 10179  00341E  0100               	movlb	0	; () banked
 10180  003420  5177               	movf	___awdiv@divisor& (0+255),w,b
 10181  003422  0100               	movlb	0	; () banked
 10182  003424  1178               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 10183  003426  B4D8               	btfsc	status,2,c
 10184  003428  D027               	goto	l4974
 10185                           
 10186                           ; BSR set to: 0
 10187  00342A  0E01               	movlw	1
 10188  00342C  6E24               	movwf	___awdiv@counter,c
 10189  00342E  D005               	goto	l4960
 10190  003430                     l4958:
 10191                           
 10192                           ; BSR set to: 0
 10193  003430  0100               	movlb	0	; () banked
 10194  003432  90D8               	bcf	status,0,c
 10195  003434  3777               	rlcf	___awdiv@divisor& (0+255),f,b
 10196  003436  3778               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 10197  003438  2A24               	incf	___awdiv@counter,f,c
 10198  00343A                     l4960:
 10199                           
 10200                           ; BSR set to: 0
 10201  00343A  0100               	movlb	0	; () banked
 10202  00343C  AF78               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10203  00343E  D7F8               	goto	l4958
 10204  003440                     l4962:
 10205                           
 10206                           ; BSR set to: 0
 10207  003440  90D8               	bcf	status,0,c
 10208  003442  3626               	rlcf	___awdiv@quotient,f,c
 10209  003444  3627               	rlcf	___awdiv@quotient+1,f,c
 10210                           
 10211                           ; BSR set to: 0
 10212  003446  0100               	movlb	0	; () banked
 10213  003448  5177               	movf	___awdiv@divisor& (0+255),w,b
 10214  00344A  0100               	movlb	0	; () banked
 10215  00344C  5D75               	subwf	___awdiv@dividend& (0+255),w,b
 10216  00344E  0100               	movlb	0	; () banked
 10217  003450  5178               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10218  003452  0100               	movlb	0	; () banked
 10219  003454  5976               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 10220  003456  A0D8               	btfss	status,0,c
 10221  003458  D009               	goto	l4970
 10222                           
 10223                           ; BSR set to: 0
 10224  00345A  0100               	movlb	0	; () banked
 10225  00345C  5177               	movf	___awdiv@divisor& (0+255),w,b
 10226  00345E  0100               	movlb	0	; () banked
 10227  003460  5F75               	subwf	___awdiv@dividend& (0+255),f,b
 10228  003462  0100               	movlb	0	; () banked
 10229  003464  5178               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10230  003466  0100               	movlb	0	; () banked
 10231  003468  5B76               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 10232                           
 10233                           ; BSR set to: 0
 10234  00346A  8026               	bsf	___awdiv@quotient,0,c
 10235  00346C                     l4970:
 10236                           
 10237                           ; BSR set to: 0
 10238  00346C  0100               	movlb	0	; () banked
 10239  00346E  90D8               	bcf	status,0,c
 10240  003470  3378               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 10241  003472  3377               	rrcf	___awdiv@divisor& (0+255),f,b
 10242                           
 10243                           ; BSR set to: 0
 10244  003474  2E24               	decfsz	___awdiv@counter,f,c
 10245  003476  D7E4               	goto	l4962
 10246  003478                     l4974:
 10247                           
 10248                           ; BSR set to: 0
 10249  003478  5025               	movf	___awdiv@sign,w,c
 10250  00347A  B4D8               	btfsc	status,2,c
 10251  00347C  D004               	goto	l4978
 10252                           
 10253                           ; BSR set to: 0
 10254  00347E  6C26               	negf	___awdiv@quotient,c
 10255  003480  1E27               	comf	___awdiv@quotient+1,f,c
 10256  003482  B0D8               	btfsc	status,0,c
 10257  003484  2A27               	incf	___awdiv@quotient+1,f,c
 10258  003486                     l4978:
 10259                           
 10260                           ; BSR set to: 0
 10261  003486  C026  F075         	movff	___awdiv@quotient,?___awdiv
 10262  00348A  C027  F076         	movff	___awdiv@quotient+1,?___awdiv+1
 10263  00348E  0012               	return	
 10264  003490                     __end_of___awdiv:
 10265                           	opt stack 0
 10266                           tblptru	equ	0xFF8
 10267                           tblptrh	equ	0xFF7
 10268                           tblptrl	equ	0xFF6
 10269                           tablat	equ	0xFF5
 10270                           prodh	equ	0xFF4
 10271                           prodl	equ	0xFF3
 10272                           indf0	equ	0xFEF
 10273                           postinc0	equ	0xFEE
 10274                           fsr0h	equ	0xFEA
 10275                           fsr0l	equ	0xFE9
 10276                           wreg	equ	0xFE8
 10277                           indf1	equ	0xFE7
 10278                           postdec1	equ	0xFE5
 10279                           fsr1h	equ	0xFE2
 10280                           fsr1l	equ	0xFE1
 10281                           indf2	equ	0xFDF
 10282                           postinc2	equ	0xFDE
 10283                           postdec2	equ	0xFDD
 10284                           fsr2h	equ	0xFDA
 10285                           fsr2l	equ	0xFD9
 10286                           status	equ	0xFD8
 10287                           
 10288 ;; *************** function __tdiv_to_l_ *****************
 10289 ;; Defined at:
 10290 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdivl.c"
 10291 ;; Parameters:    Size  Location     Type
 10292 ;;  f1              3   17[BANK0 ] float 
 10293 ;;  f2              3   20[BANK0 ] float 
 10294 ;; Auto vars:     Size  Location     Type
 10295 ;;  quot            4   36[COMRAM] unsigned long 
 10296 ;;  exp1            1   41[COMRAM] unsigned char 
 10297 ;;  cntr            1   40[COMRAM] unsigned char 
 10298 ;; Return value:  Size  Location     Type
 10299 ;;                  4   17[BANK0 ] unsigned long 
 10300 ;; Registers used:
 10301 ;;		wreg, status,2, status,0
 10302 ;; Tracked objects:
 10303 ;;		On entry : 0/0
 10304 ;;		On exit  : 0/0
 10305 ;;		Unchanged: 0/0
 10306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10307 ;;      Params:         0       6       0       0       0       0       0
 10308 ;;      Locals:         6       0       0       0       0       0       0
 10309 ;;      Temps:          3       0       0       0       0       0       0
 10310 ;;      Totals:         9       6       0       0       0       0       0
 10311 ;;Total ram usage:       15 bytes
 10312 ;; Hardware stack levels used:    1
 10313 ;; Hardware stack levels required when called:    3
 10314 ;; This function calls:
 10315 ;;		Nothing
 10316 ;; This function is called by:
 10317 ;;		_sprintf
 10318 ;; This function uses a non-reentrant model
 10319 ;;
 10320                           
 10321                           	psect	text39
 10322  0026D2                     __ptext39:
 10323                           	opt stack 0
 10324  0026D2                     __tdiv_to_l_:
 10325                           	opt stack 24
 10326                           
 10327                           ; BSR set to: 0
 10328                           ;incstack = 0
 10329  0026D2  C073  F022         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 10330  0026D6  6A23               	clrf	(??__tdiv_to_l_+1)& (0+255),c
 10331  0026D8  6A24               	clrf	(??__tdiv_to_l_+2)& (0+255),c
 10332  0026DA  0100               	movlb	0	; () banked
 10333  0026DC  3572               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10334  0026DE  3622               	rlcf	??__tdiv_to_l_& (0+255),f,c
 10335  0026E0  E301               	bnc	u5111
 10336  0026E2  8023               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
 10337  0026E4                     u5111:
 10338  0026E4  5022               	movf	??__tdiv_to_l_,w,c
 10339  0026E6  6E2A               	movwf	__tdiv_to_l_@exp1,c
 10340  0026E8  502A               	movf	__tdiv_to_l_@exp1,w,c
 10341  0026EA  A4D8               	btfss	status,2,c
 10342  0026EC  D00A               	goto	l5166
 10343                           
 10344                           ; BSR set to: 0
 10345  0026EE  0E00               	movlw	0
 10346  0026F0  0100               	movlb	0	; () banked
 10347  0026F2  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 10348  0026F4  0E00               	movlw	0
 10349  0026F6  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10350  0026F8  0E00               	movlw	0
 10351  0026FA  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10352  0026FC  0E00               	movlw	0
 10353  0026FE  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10354                           
 10355                           ; BSR set to: 0
 10356  002700  0012               	return	
 10357  002702                     l5166:
 10358                           
 10359                           ; BSR set to: 0
 10360  002702  C076  F022         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 10361  002706  6A23               	clrf	(??__tdiv_to_l_+1)& (0+255),c
 10362  002708  6A24               	clrf	(??__tdiv_to_l_+2)& (0+255),c
 10363  00270A  0100               	movlb	0	; () banked
 10364  00270C  3575               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10365  00270E  3622               	rlcf	??__tdiv_to_l_& (0+255),f,c
 10366  002710  E301               	bnc	u5131
 10367  002712  8023               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
 10368  002714                     u5131:
 10369  002714  5022               	movf	??__tdiv_to_l_,w,c
 10370  002716  6E29               	movwf	__tdiv_to_l_@cntr,c
 10371  002718  5029               	movf	__tdiv_to_l_@cntr,w,c
 10372  00271A  A4D8               	btfss	status,2,c
 10373  00271C  D00A               	goto	l5172
 10374                           
 10375                           ; BSR set to: 0
 10376  00271E  0E00               	movlw	0
 10377  002720  0100               	movlb	0	; () banked
 10378  002722  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 10379  002724  0E00               	movlw	0
 10380  002726  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10381  002728  0E00               	movlw	0
 10382  00272A  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10383  00272C  0E00               	movlw	0
 10384  00272E  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10385                           
 10386                           ; BSR set to: 0
 10387  002730  0012               	return	
 10388  002732                     l5172:
 10389                           
 10390                           ; BSR set to: 0
 10391  002732  0100               	movlb	0	; () banked
 10392  002734  8F72               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 10393                           
 10394                           ; BSR set to: 0
 10395  002736  0EFF               	movlw	255
 10396  002738  0100               	movlb	0	; () banked
 10397  00273A  1771               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 10398  00273C  0EFF               	movlw	255
 10399  00273E  0100               	movlb	0	; () banked
 10400  002740  1772               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10401  002742  0E00               	movlw	0
 10402  002744  0100               	movlb	0	; () banked
 10403  002746  1773               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10404  002748  0100               	movlb	0	; () banked
 10405  00274A  8F75               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 10406                           
 10407                           ; BSR set to: 0
 10408  00274C  0EFF               	movlw	255
 10409  00274E  0100               	movlb	0	; () banked
 10410  002750  1774               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 10411  002752  0EFF               	movlw	255
 10412  002754  0100               	movlb	0	; () banked
 10413  002756  1775               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 10414  002758  0E00               	movlw	0
 10415  00275A  0100               	movlb	0	; () banked
 10416  00275C  1776               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 10417                           
 10418                           ; BSR set to: 0
 10419  00275E  0E00               	movlw	0
 10420  002760  6E25               	movwf	__tdiv_to_l_@quot,c
 10421  002762  0E00               	movlw	0
 10422  002764  6E26               	movwf	__tdiv_to_l_@quot+1,c
 10423  002766  0E00               	movlw	0
 10424  002768  6E27               	movwf	__tdiv_to_l_@quot+2,c
 10425  00276A  0E00               	movlw	0
 10426  00276C  6E28               	movwf	__tdiv_to_l_@quot+3,c
 10427                           
 10428                           ; BSR set to: 0
 10429  00276E  0E7F               	movlw	127
 10430  002770  5E2A               	subwf	__tdiv_to_l_@exp1,f,c
 10431                           
 10432                           ; BSR set to: 0
 10433  002772  5029               	movf	__tdiv_to_l_@cntr,w,c
 10434  002774  0F98               	addlw	152
 10435  002776  5E2A               	subwf	__tdiv_to_l_@exp1,f,c
 10436                           
 10437                           ; BSR set to: 0
 10438  002778  0E18               	movlw	24
 10439  00277A  6E29               	movwf	__tdiv_to_l_@cntr,c
 10440  00277C                     l851:
 10441                           
 10442                           ; BSR set to: 0
 10443  00277C  90D8               	bcf	status,0,c
 10444  00277E  3625               	rlcf	__tdiv_to_l_@quot,f,c
 10445  002780  3626               	rlcf	__tdiv_to_l_@quot+1,f,c
 10446  002782  3627               	rlcf	__tdiv_to_l_@quot+2,f,c
 10447  002784  3628               	rlcf	__tdiv_to_l_@quot+3,f,c
 10448                           
 10449                           ; BSR set to: 0
 10450  002786  0100               	movlb	0	; () banked
 10451  002788  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10452  00278A  0100               	movlb	0	; () banked
 10453  00278C  5D71               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 10454  00278E  0100               	movlb	0	; () banked
 10455  002790  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10456  002792  0100               	movlb	0	; () banked
 10457  002794  5972               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10458  002796  0100               	movlb	0	; () banked
 10459  002798  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10460  00279A  0100               	movlb	0	; () banked
 10461  00279C  5973               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 10462  00279E  A0D8               	btfss	status,0,c
 10463  0027A0  D00D               	goto	l852
 10464                           
 10465                           ; BSR set to: 0
 10466  0027A2  0100               	movlb	0	; () banked
 10467  0027A4  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10468  0027A6  0100               	movlb	0	; () banked
 10469  0027A8  5F71               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 10470  0027AA  0100               	movlb	0	; () banked
 10471  0027AC  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10472  0027AE  0100               	movlb	0	; () banked
 10473  0027B0  5B72               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10474  0027B2  0100               	movlb	0	; () banked
 10475  0027B4  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10476  0027B6  0100               	movlb	0	; () banked
 10477  0027B8  5B73               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10478                           
 10479                           ; BSR set to: 0
 10480  0027BA  8025               	bsf	__tdiv_to_l_@quot,0,c
 10481  0027BC                     l852:
 10482                           
 10483                           ; BSR set to: 0
 10484  0027BC  0100               	movlb	0	; () banked
 10485  0027BE  90D8               	bcf	status,0,c
 10486  0027C0  3771               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 10487  0027C2  3772               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10488  0027C4  3773               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10489                           
 10490                           ; BSR set to: 0
 10491  0027C6  2E29               	decfsz	__tdiv_to_l_@cntr,f,c
 10492  0027C8  D7D9               	goto	l851
 10493                           
 10494                           ; BSR set to: 0
 10495                           
 10496                           ; BSR set to: 0
 10497  0027CA  AE2A               	btfss	__tdiv_to_l_@exp1,7,c
 10498  0027CC  D017               	goto	l5206
 10499                           
 10500                           ; BSR set to: 0
 10501  0027CE  502A               	movf	__tdiv_to_l_@exp1,w,c
 10502  0027D0  0A80               	xorlw	128
 10503  0027D2  0F97               	addlw	151
 10504  0027D4  B0D8               	btfsc	status,0,c
 10505  0027D6  D00A               	goto	l5202
 10506                           
 10507                           ; BSR set to: 0
 10508  0027D8  0E00               	movlw	0
 10509  0027DA  0100               	movlb	0	; () banked
 10510  0027DC  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 10511  0027DE  0E00               	movlw	0
 10512  0027E0  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10513  0027E2  0E00               	movlw	0
 10514  0027E4  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10515  0027E6  0E00               	movlw	0
 10516  0027E8  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10517                           
 10518                           ; BSR set to: 0
 10519  0027EA  0012               	return	
 10520  0027EC                     l5202:
 10521  0027EC  90D8               	bcf	status,0,c
 10522  0027EE  3228               	rrcf	__tdiv_to_l_@quot+3,f,c
 10523  0027F0  3227               	rrcf	__tdiv_to_l_@quot+2,f,c
 10524  0027F2  3226               	rrcf	__tdiv_to_l_@quot+1,f,c
 10525  0027F4  3225               	rrcf	__tdiv_to_l_@quot,f,c
 10526  0027F6  3E2A               	incfsz	__tdiv_to_l_@exp1,f,c
 10527  0027F8  D7F9               	goto	l5202
 10528  0027FA  D016               	goto	l858
 10529  0027FC                     l5206:
 10530  0027FC  0E17               	movlw	23
 10531  0027FE  642A               	cpfsgt	__tdiv_to_l_@exp1,c
 10532  002800  D010               	goto	l5214
 10533  002802  0E00               	movlw	0
 10534  002804  0100               	movlb	0	; () banked
 10535  002806  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 10536  002808  0E00               	movlw	0
 10537  00280A  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10538  00280C  0E00               	movlw	0
 10539  00280E  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10540  002810  0E00               	movlw	0
 10541  002812  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10542                           
 10543                           ; BSR set to: 0
 10544  002814  0012               	return	
 10545  002816                     l5212:
 10546  002816  90D8               	bcf	status,0,c
 10547  002818  3625               	rlcf	__tdiv_to_l_@quot,f,c
 10548  00281A  3626               	rlcf	__tdiv_to_l_@quot+1,f,c
 10549  00281C  3627               	rlcf	__tdiv_to_l_@quot+2,f,c
 10550  00281E  3628               	rlcf	__tdiv_to_l_@quot+3,f,c
 10551  002820  062A               	decf	__tdiv_to_l_@exp1,f,c
 10552  002822                     l5214:
 10553  002822  502A               	movf	__tdiv_to_l_@exp1,w,c
 10554  002824  A4D8               	btfss	status,2,c
 10555  002826  D7F7               	goto	l5212
 10556  002828                     l858:
 10557  002828  C025  F071         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 10558  00282C  C026  F072         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 10559  002830  C027  F073         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 10560  002834  C028  F074         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 10561  002838  0012               	return		;funcret
 10562  00283A                     __end_of__tdiv_to_l_:
 10563                           	opt stack 0
 10564                           tblptru	equ	0xFF8
 10565                           tblptrh	equ	0xFF7
 10566                           tblptrl	equ	0xFF6
 10567                           tablat	equ	0xFF5
 10568                           prodh	equ	0xFF4
 10569                           prodl	equ	0xFF3
 10570                           indf0	equ	0xFEF
 10571                           postinc0	equ	0xFEE
 10572                           fsr0h	equ	0xFEA
 10573                           fsr0l	equ	0xFE9
 10574                           wreg	equ	0xFE8
 10575                           indf1	equ	0xFE7
 10576                           postdec1	equ	0xFE5
 10577                           fsr1h	equ	0xFE2
 10578                           fsr1l	equ	0xFE1
 10579                           indf2	equ	0xFDF
 10580                           postinc2	equ	0xFDE
 10581                           postdec2	equ	0xFDD
 10582                           fsr2h	equ	0xFDA
 10583                           fsr2l	equ	0xFD9
 10584                           status	equ	0xFD8
 10585                           
 10586 ;; *************** function __div_to_l_ *****************
 10587 ;; Defined at:
 10588 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fldivl.c"
 10589 ;; Parameters:    Size  Location     Type
 10590 ;;  f1              3   17[BANK0 ] unsigned long 
 10591 ;;  f2              3   20[BANK0 ] unsigned long 
 10592 ;; Auto vars:     Size  Location     Type
 10593 ;;  quot            4   33[COMRAM] unsigned long 
 10594 ;;  exp1            1   38[COMRAM] unsigned char 
 10595 ;;  cntr            1   37[COMRAM] unsigned char 
 10596 ;; Return value:  Size  Location     Type
 10597 ;;                  4   17[BANK0 ] unsigned long 
 10598 ;; Registers used:
 10599 ;;		wreg, status,2, status,0
 10600 ;; Tracked objects:
 10601 ;;		On entry : 0/0
 10602 ;;		On exit  : 0/0
 10603 ;;		Unchanged: 0/0
 10604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10605 ;;      Params:         0       6       0       0       0       0       0
 10606 ;;      Locals:         6       0       0       0       0       0       0
 10607 ;;      Temps:          0       0       0       0       0       0       0
 10608 ;;      Totals:         6       6       0       0       0       0       0
 10609 ;;Total ram usage:       12 bytes
 10610 ;; Hardware stack levels used:    1
 10611 ;; Hardware stack levels required when called:    3
 10612 ;; This function calls:
 10613 ;;		Nothing
 10614 ;; This function is called by:
 10615 ;;		_sprintf
 10616 ;; This function uses a non-reentrant model
 10617 ;;
 10618                           
 10619                           	psect	text40
 10620  00283A                     __ptext40:
 10621                           	opt stack 0
 10622  00283A                     __div_to_l_:
 10623                           	opt stack 24
 10624                           
 10625                           ;incstack = 0
 10626  00283A  0100               	movlb	0	; () banked
 10627  00283C  3573               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 10628  00283E  3574               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 10629  002840  6E27               	movwf	__div_to_l_@exp1,c
 10630  002842  5027               	movf	__div_to_l_@exp1,w,c
 10631  002844  A4D8               	btfss	status,2,c
 10632  002846  D00A               	goto	l5222
 10633                           
 10634                           ; BSR set to: 0
 10635  002848  0E00               	movlw	0
 10636  00284A  0100               	movlb	0	; () banked
 10637  00284C  6F71               	movwf	?__div_to_l_& (0+255),b
 10638  00284E  0E00               	movlw	0
 10639  002850  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 10640  002852  0E00               	movlw	0
 10641  002854  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 10642  002856  0E00               	movlw	0
 10643  002858  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 10644                           
 10645                           ; BSR set to: 0
 10646  00285A  0012               	return	
 10647  00285C                     l5222:
 10648                           
 10649                           ; BSR set to: 0
 10650  00285C  0100               	movlb	0	; () banked
 10651  00285E  3576               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 10652  002860  3577               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 10653  002862  6E26               	movwf	__div_to_l_@cntr,c
 10654  002864  5026               	movf	__div_to_l_@cntr,w,c
 10655  002866  A4D8               	btfss	status,2,c
 10656  002868  D00A               	goto	l5228
 10657                           
 10658                           ; BSR set to: 0
 10659  00286A  0E00               	movlw	0
 10660  00286C  0100               	movlb	0	; () banked
 10661  00286E  6F71               	movwf	?__div_to_l_& (0+255),b
 10662  002870  0E00               	movlw	0
 10663  002872  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 10664  002874  0E00               	movlw	0
 10665  002876  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 10666  002878  0E00               	movlw	0
 10667  00287A  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 10668                           
 10669                           ; BSR set to: 0
 10670  00287C  0012               	return	
 10671  00287E                     l5228:
 10672                           
 10673                           ; BSR set to: 0
 10674  00287E  0100               	movlb	0	; () banked
 10675  002880  8F73               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 10676                           
 10677                           ; BSR set to: 0
 10678  002882  0EFF               	movlw	255
 10679  002884  0100               	movlb	0	; () banked
 10680  002886  1771               	andwf	__div_to_l_@f1& (0+255),f,b
 10681  002888  0EFF               	movlw	255
 10682  00288A  1772               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 10683  00288C  0EFF               	movlw	255
 10684  00288E  1773               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 10685  002890  0E00               	movlw	0
 10686  002892  1774               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 10687                           
 10688                           ; BSR set to: 0
 10689  002894  0100               	movlb	0	; () banked
 10690  002896  8F76               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 10691  002898  0EFF               	movlw	255
 10692  00289A  0100               	movlb	0	; () banked
 10693  00289C  1774               	andwf	__div_to_l_@f2& (0+255),f,b
 10694  00289E  0EFF               	movlw	255
 10695  0028A0  1775               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 10696  0028A2  0EFF               	movlw	255
 10697  0028A4  1776               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 10698  0028A6  0E00               	movlw	0
 10699  0028A8  1777               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 10700                           
 10701                           ; BSR set to: 0
 10702  0028AA  0E00               	movlw	0
 10703  0028AC  6E22               	movwf	__div_to_l_@quot,c
 10704  0028AE  0E00               	movlw	0
 10705  0028B0  6E23               	movwf	__div_to_l_@quot+1,c
 10706  0028B2  0E00               	movlw	0
 10707  0028B4  6E24               	movwf	__div_to_l_@quot+2,c
 10708  0028B6  0E00               	movlw	0
 10709  0028B8  6E25               	movwf	__div_to_l_@quot+3,c
 10710                           
 10711                           ; BSR set to: 0
 10712  0028BA  0E7F               	movlw	127
 10713  0028BC  5E27               	subwf	__div_to_l_@exp1,f,c
 10714                           
 10715                           ; BSR set to: 0
 10716  0028BE  5026               	movf	__div_to_l_@cntr,w,c
 10717  0028C0  0FA0               	addlw	160
 10718  0028C2  5E27               	subwf	__div_to_l_@exp1,f,c
 10719                           
 10720                           ; BSR set to: 0
 10721  0028C4  0E20               	movlw	32
 10722  0028C6  6E26               	movwf	__div_to_l_@cntr,c
 10723  0028C8                     l5242:
 10724                           
 10725                           ; BSR set to: 0
 10726  0028C8  90D8               	bcf	status,0,c
 10727  0028CA  3622               	rlcf	__div_to_l_@quot,f,c
 10728  0028CC  3623               	rlcf	__div_to_l_@quot+1,f,c
 10729  0028CE  3624               	rlcf	__div_to_l_@quot+2,f,c
 10730  0028D0  3625               	rlcf	__div_to_l_@quot+3,f,c
 10731                           
 10732                           ; BSR set to: 0
 10733  0028D2  0100               	movlb	0	; () banked
 10734  0028D4  5174               	movf	__div_to_l_@f2& (0+255),w,b
 10735  0028D6  0100               	movlb	0	; () banked
 10736  0028D8  5D71               	subwf	__div_to_l_@f1& (0+255),w,b
 10737  0028DA  0100               	movlb	0	; () banked
 10738  0028DC  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10739  0028DE  0100               	movlb	0	; () banked
 10740  0028E0  5972               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 10741  0028E2  0100               	movlb	0	; () banked
 10742  0028E4  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10743  0028E6  0100               	movlb	0	; () banked
 10744  0028E8  5973               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 10745  0028EA  0100               	movlb	0	; () banked
 10746  0028EC  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10747  0028EE  0100               	movlb	0	; () banked
 10748  0028F0  5974               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 10749  0028F2  A0D8               	btfss	status,0,c
 10750  0028F4  D011               	goto	l5250
 10751                           
 10752                           ; BSR set to: 0
 10753  0028F6  0100               	movlb	0	; () banked
 10754  0028F8  5174               	movf	__div_to_l_@f2& (0+255),w,b
 10755  0028FA  0100               	movlb	0	; () banked
 10756  0028FC  5F71               	subwf	__div_to_l_@f1& (0+255),f,b
 10757  0028FE  0100               	movlb	0	; () banked
 10758  002900  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10759  002902  0100               	movlb	0	; () banked
 10760  002904  5B72               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 10761  002906  0100               	movlb	0	; () banked
 10762  002908  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10763  00290A  0100               	movlb	0	; () banked
 10764  00290C  5B73               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 10765  00290E  0100               	movlb	0	; () banked
 10766  002910  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10767  002912  0100               	movlb	0	; () banked
 10768  002914  5B74               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 10769                           
 10770                           ; BSR set to: 0
 10771  002916  8022               	bsf	__div_to_l_@quot,0,c
 10772  002918                     l5250:
 10773                           
 10774                           ; BSR set to: 0
 10775  002918  0100               	movlb	0	; () banked
 10776  00291A  90D8               	bcf	status,0,c
 10777  00291C  3771               	rlcf	__div_to_l_@f1& (0+255),f,b
 10778  00291E  3772               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 10779  002920  3773               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 10780  002922  3774               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 10781                           
 10782                           ; BSR set to: 0
 10783  002924  2E26               	decfsz	__div_to_l_@cntr,f,c
 10784  002926  D7D0               	goto	l5242
 10785                           
 10786                           ; BSR set to: 0
 10787                           
 10788                           ; BSR set to: 0
 10789  002928  AE27               	btfss	__div_to_l_@exp1,7,c
 10790  00292A  D017               	goto	l5266
 10791                           
 10792                           ; BSR set to: 0
 10793  00292C  5027               	movf	__div_to_l_@exp1,w,c
 10794  00292E  0A80               	xorlw	128
 10795  002930  0F9F               	addlw	159
 10796  002932  B0D8               	btfsc	status,0,c
 10797  002934  D00A               	goto	l5262
 10798                           
 10799                           ; BSR set to: 0
 10800  002936  0E00               	movlw	0
 10801  002938  0100               	movlb	0	; () banked
 10802  00293A  6F71               	movwf	?__div_to_l_& (0+255),b
 10803  00293C  0E00               	movlw	0
 10804  00293E  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 10805  002940  0E00               	movlw	0
 10806  002942  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 10807  002944  0E00               	movlw	0
 10808  002946  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 10809                           
 10810                           ; BSR set to: 0
 10811  002948  0012               	return	
 10812  00294A                     l5262:
 10813  00294A  90D8               	bcf	status,0,c
 10814  00294C  3225               	rrcf	__div_to_l_@quot+3,f,c
 10815  00294E  3224               	rrcf	__div_to_l_@quot+2,f,c
 10816  002950  3223               	rrcf	__div_to_l_@quot+1,f,c
 10817  002952  3222               	rrcf	__div_to_l_@quot,f,c
 10818  002954  3E27               	incfsz	__div_to_l_@exp1,f,c
 10819  002956  D7F9               	goto	l5262
 10820  002958  D016               	goto	l754
 10821  00295A                     l5266:
 10822  00295A  0E1F               	movlw	31
 10823  00295C  6427               	cpfsgt	__div_to_l_@exp1,c
 10824  00295E  D010               	goto	l5274
 10825  002960  0E00               	movlw	0
 10826  002962  0100               	movlb	0	; () banked
 10827  002964  6F71               	movwf	?__div_to_l_& (0+255),b
 10828  002966  0E00               	movlw	0
 10829  002968  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 10830  00296A  0E00               	movlw	0
 10831  00296C  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 10832  00296E  0E00               	movlw	0
 10833  002970  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 10834                           
 10835                           ; BSR set to: 0
 10836  002972  0012               	return	
 10837  002974                     l5272:
 10838  002974  90D8               	bcf	status,0,c
 10839  002976  3622               	rlcf	__div_to_l_@quot,f,c
 10840  002978  3623               	rlcf	__div_to_l_@quot+1,f,c
 10841  00297A  3624               	rlcf	__div_to_l_@quot+2,f,c
 10842  00297C  3625               	rlcf	__div_to_l_@quot+3,f,c
 10843  00297E  0627               	decf	__div_to_l_@exp1,f,c
 10844  002980                     l5274:
 10845  002980  5027               	movf	__div_to_l_@exp1,w,c
 10846  002982  A4D8               	btfss	status,2,c
 10847  002984  D7F7               	goto	l5272
 10848  002986                     l754:
 10849  002986  C022  F071         	movff	__div_to_l_@quot,?__div_to_l_
 10850  00298A  C023  F072         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 10851  00298E  C024  F073         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 10852  002992  C025  F074         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 10853  002996  0012               	return		;funcret
 10854  002998                     __end_of__div_to_l_:
 10855                           	opt stack 0
 10856                           tblptru	equ	0xFF8
 10857                           tblptrh	equ	0xFF7
 10858                           tblptrl	equ	0xFF6
 10859                           tablat	equ	0xFF5
 10860                           prodh	equ	0xFF4
 10861                           prodl	equ	0xFF3
 10862                           indf0	equ	0xFEF
 10863                           postinc0	equ	0xFEE
 10864                           fsr0h	equ	0xFEA
 10865                           fsr0l	equ	0xFE9
 10866                           wreg	equ	0xFE8
 10867                           indf1	equ	0xFE7
 10868                           postdec1	equ	0xFE5
 10869                           fsr1h	equ	0xFE2
 10870                           fsr1l	equ	0xFE1
 10871                           indf2	equ	0xFDF
 10872                           postinc2	equ	0xFDE
 10873                           postdec2	equ	0xFDD
 10874                           fsr2h	equ	0xFDA
 10875                           fsr2l	equ	0xFD9
 10876                           status	equ	0xFD8
 10877                           
 10878 ;; *************** function ___lltoft *****************
 10879 ;; Defined at:
 10880 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lltoft.c"
 10881 ;; Parameters:    Size  Location     Type
 10882 ;;  c               4   22[BANK0 ] unsigned long 
 10883 ;; Auto vars:     Size  Location     Type
 10884 ;;  exp             1   40[COMRAM] unsigned char 
 10885 ;; Return value:  Size  Location     Type
 10886 ;;                  3   22[BANK0 ] float 
 10887 ;; Registers used:
 10888 ;;		wreg, status,2, status,0, cstack
 10889 ;; Tracked objects:
 10890 ;;		On entry : 0/0
 10891 ;;		On exit  : 0/0
 10892 ;;		Unchanged: 0/0
 10893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10894 ;;      Params:         0       4       0       0       0       0       0
 10895 ;;      Locals:         1       0       0       0       0       0       0
 10896 ;;      Temps:          4       0       0       0       0       0       0
 10897 ;;      Totals:         5       4       0       0       0       0       0
 10898 ;;Total ram usage:        9 bytes
 10899 ;; Hardware stack levels used:    1
 10900 ;; Hardware stack levels required when called:    4
 10901 ;; This function calls:
 10902 ;;		___ftpack
 10903 ;; This function is called by:
 10904 ;;		_sprintf
 10905 ;; This function uses a non-reentrant model
 10906 ;;
 10907                           
 10908                           	psect	text41
 10909  0036AE                     __ptext41:
 10910                           	opt stack 0
 10911  0036AE                     ___lltoft:
 10912                           	opt stack 23
 10913                           
 10914                           ;incstack = 0
 10915  0036AE  0E8E               	movlw	142
 10916  0036B0  6E29               	movwf	___lltoft@exp,c
 10917  0036B2  D007               	goto	l5348
 10918  0036B4                     l5346:
 10919  0036B4  0100               	movlb	0	; () banked
 10920  0036B6  90D8               	bcf	status,0,c
 10921  0036B8  3379               	rrcf	(___lltoft@c+3)& (0+255),f,b
 10922  0036BA  3378               	rrcf	(___lltoft@c+2)& (0+255),f,b
 10923  0036BC  3377               	rrcf	(___lltoft@c+1)& (0+255),f,b
 10924  0036BE  3376               	rrcf	___lltoft@c& (0+255),f,b
 10925  0036C0  2A29               	incf	___lltoft@exp,f,c
 10926  0036C2                     l5348:
 10927  0036C2  0E00               	movlw	0
 10928  0036C4  0100               	movlb	0	; () banked
 10929  0036C6  1576               	andwf	___lltoft@c& (0+255),w,b
 10930  0036C8  6E25               	movwf	??___lltoft& (0+255),c
 10931  0036CA  0E00               	movlw	0
 10932  0036CC  0100               	movlb	0	; () banked
 10933  0036CE  1577               	andwf	(___lltoft@c+1)& (0+255),w,b
 10934  0036D0  6E26               	movwf	(??___lltoft+1)& (0+255),c
 10935  0036D2  0E00               	movlw	0
 10936  0036D4  0100               	movlb	0	; () banked
 10937  0036D6  1578               	andwf	(___lltoft@c+2)& (0+255),w,b
 10938  0036D8  6E27               	movwf	(??___lltoft+2)& (0+255),c
 10939  0036DA  0EFF               	movlw	255
 10940  0036DC  0100               	movlb	0	; () banked
 10941  0036DE  1579               	andwf	(___lltoft@c+3)& (0+255),w,b
 10942  0036E0  6E28               	movwf	(??___lltoft+3)& (0+255),c
 10943  0036E2  5025               	movf	??___lltoft,w,c
 10944  0036E4  1026               	iorwf	??___lltoft+1,w,c
 10945  0036E6  1027               	iorwf	??___lltoft+2,w,c
 10946  0036E8  1028               	iorwf	??___lltoft+3,w,c
 10947  0036EA  A4D8               	btfss	status,2,c
 10948  0036EC  D7E3               	goto	l5346
 10949                           
 10950                           ; BSR set to: 0
 10951                           
 10952                           ; BSR set to: 0
 10953  0036EE  C076  F071         	movff	___lltoft@c,___ftpack@arg
 10954  0036F2  C077  F072         	movff	___lltoft@c+1,___ftpack@arg+1
 10955  0036F6  C078  F073         	movff	___lltoft@c+2,___ftpack@arg+2
 10956  0036FA  C029  F074         	movff	___lltoft@exp,___ftpack@exp
 10957  0036FE  0E00               	movlw	0
 10958  003700  0100               	movlb	0	; () banked
 10959  003702  6F75               	movwf	___ftpack@sign& (0+255),b
 10960  003704  EC40  F017         	call	___ftpack	;wreg free
 10961  003708  C071  F076         	movff	?___ftpack,?___lltoft
 10962  00370C  C072  F077         	movff	?___ftpack+1,?___lltoft+1
 10963  003710  C073  F078         	movff	?___ftpack+2,?___lltoft+2
 10964  003714  0012               	return	
 10965  003716                     __end_of___lltoft:
 10966                           	opt stack 0
 10967                           tblptru	equ	0xFF8
 10968                           tblptrh	equ	0xFF7
 10969                           tblptrl	equ	0xFF6
 10970                           tablat	equ	0xFF5
 10971                           prodh	equ	0xFF4
 10972                           prodl	equ	0xFF3
 10973                           indf0	equ	0xFEF
 10974                           postinc0	equ	0xFEE
 10975                           fsr0h	equ	0xFEA
 10976                           fsr0l	equ	0xFE9
 10977                           wreg	equ	0xFE8
 10978                           indf1	equ	0xFE7
 10979                           postdec1	equ	0xFE5
 10980                           fsr1h	equ	0xFE2
 10981                           fsr1l	equ	0xFE1
 10982                           indf2	equ	0xFDF
 10983                           postinc2	equ	0xFDE
 10984                           postdec2	equ	0xFDD
 10985                           fsr2h	equ	0xFDA
 10986                           fsr2l	equ	0xFD9
 10987                           status	equ	0xFD8
 10988                           
 10989 ;; *************** function ___llmod *****************
 10990 ;; Defined at:
 10991 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
 10992 ;; Parameters:    Size  Location     Type
 10993 ;;  dividend        4   25[BANK0 ] unsigned long 
 10994 ;;  divisor         4   29[BANK0 ] unsigned long 
 10995 ;; Auto vars:     Size  Location     Type
 10996 ;;  counter         1   38[COMRAM] unsigned char 
 10997 ;; Return value:  Size  Location     Type
 10998 ;;                  4   25[BANK0 ] unsigned long 
 10999 ;; Registers used:
 11000 ;;		wreg, status,2, status,0
 11001 ;; Tracked objects:
 11002 ;;		On entry : 0/0
 11003 ;;		On exit  : 0/0
 11004 ;;		Unchanged: 0/0
 11005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11006 ;;      Params:         0       8       0       0       0       0       0
 11007 ;;      Locals:         1       0       0       0       0       0       0
 11008 ;;      Temps:          0       0       0       0       0       0       0
 11009 ;;      Totals:         1       8       0       0       0       0       0
 11010 ;;Total ram usage:        9 bytes
 11011 ;; Hardware stack levels used:    1
 11012 ;; Hardware stack levels required when called:    3
 11013 ;; This function calls:
 11014 ;;		Nothing
 11015 ;; This function is called by:
 11016 ;;		_sprintf
 11017 ;; This function uses a non-reentrant model
 11018 ;;
 11019                           
 11020                           	psect	text42
 11021  003524                     __ptext42:
 11022                           	opt stack 0
 11023  003524                     ___llmod:
 11024                           	opt stack 24
 11025                           
 11026                           ;incstack = 0
 11027  003524  0100               	movlb	0	; () banked
 11028  003526  517D               	movf	___llmod@divisor& (0+255),w,b
 11029  003528  0100               	movlb	0	; () banked
 11030  00352A  117E               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 11031  00352C  0100               	movlb	0	; () banked
 11032  00352E  117F               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 11033  003530  0100               	movlb	0	; () banked
 11034  003532  1180               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 11035  003534  B4D8               	btfsc	status,2,c
 11036  003536  D037               	goto	l943
 11037                           
 11038                           ; BSR set to: 0
 11039  003538  0E01               	movlw	1
 11040  00353A  6E27               	movwf	___llmod@counter,c
 11041  00353C  D007               	goto	l5334
 11042  00353E                     l5332:
 11043                           
 11044                           ; BSR set to: 0
 11045  00353E  0100               	movlb	0	; () banked
 11046  003540  90D8               	bcf	status,0,c
 11047  003542  377D               	rlcf	___llmod@divisor& (0+255),f,b
 11048  003544  377E               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 11049  003546  377F               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 11050  003548  3780               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 11051  00354A  2A27               	incf	___llmod@counter,f,c
 11052  00354C                     l5334:
 11053                           
 11054                           ; BSR set to: 0
 11055  00354C  0100               	movlb	0	; () banked
 11056  00354E  AF80               	btfss	(___llmod@divisor+3)& (0+255),7,b
 11057  003550  D7F6               	goto	l5332
 11058  003552                     l5336:
 11059                           
 11060                           ; BSR set to: 0
 11061  003552  0100               	movlb	0	; () banked
 11062  003554  517D               	movf	___llmod@divisor& (0+255),w,b
 11063  003556  0100               	movlb	0	; () banked
 11064  003558  5D79               	subwf	___llmod@dividend& (0+255),w,b
 11065  00355A  0100               	movlb	0	; () banked
 11066  00355C  517E               	movf	(___llmod@divisor+1)& (0+255),w,b
 11067  00355E  0100               	movlb	0	; () banked
 11068  003560  597A               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 11069  003562  0100               	movlb	0	; () banked
 11070  003564  517F               	movf	(___llmod@divisor+2)& (0+255),w,b
 11071  003566  0100               	movlb	0	; () banked
 11072  003568  597B               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 11073  00356A  0100               	movlb	0	; () banked
 11074  00356C  5180               	movf	(___llmod@divisor+3)& (0+255),w,b
 11075  00356E  0100               	movlb	0	; () banked
 11076  003570  597C               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 11077  003572  A0D8               	btfss	status,0,c
 11078  003574  D010               	goto	l5340
 11079                           
 11080                           ; BSR set to: 0
 11081  003576  0100               	movlb	0	; () banked
 11082  003578  517D               	movf	___llmod@divisor& (0+255),w,b
 11083  00357A  0100               	movlb	0	; () banked
 11084  00357C  5F79               	subwf	___llmod@dividend& (0+255),f,b
 11085  00357E  0100               	movlb	0	; () banked
 11086  003580  517E               	movf	(___llmod@divisor+1)& (0+255),w,b
 11087  003582  0100               	movlb	0	; () banked
 11088  003584  5B7A               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 11089  003586  0100               	movlb	0	; () banked
 11090  003588  517F               	movf	(___llmod@divisor+2)& (0+255),w,b
 11091  00358A  0100               	movlb	0	; () banked
 11092  00358C  5B7B               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 11093  00358E  0100               	movlb	0	; () banked
 11094  003590  5180               	movf	(___llmod@divisor+3)& (0+255),w,b
 11095  003592  0100               	movlb	0	; () banked
 11096  003594  5B7C               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 11097  003596                     l5340:
 11098                           
 11099                           ; BSR set to: 0
 11100  003596  0100               	movlb	0	; () banked
 11101  003598  90D8               	bcf	status,0,c
 11102  00359A  3380               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 11103  00359C  337F               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 11104  00359E  337E               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 11105  0035A0  337D               	rrcf	___llmod@divisor& (0+255),f,b
 11106                           
 11107                           ; BSR set to: 0
 11108  0035A2  2E27               	decfsz	___llmod@counter,f,c
 11109  0035A4  D7D6               	goto	l5336
 11110  0035A6                     l943:
 11111                           
 11112                           ; BSR set to: 0
 11113  0035A6  C079  F079         	movff	___llmod@dividend,?___llmod
 11114  0035AA  C07A  F07A         	movff	___llmod@dividend+1,?___llmod+1
 11115  0035AE  C07B  F07B         	movff	___llmod@dividend+2,?___llmod+2
 11116  0035B2  C07C  F07C         	movff	___llmod@dividend+3,?___llmod+3
 11117                           
 11118                           ; BSR set to: 0
 11119  0035B6  0012               	return		;funcret
 11120  0035B8                     __end_of___llmod:
 11121                           	opt stack 0
 11122                           tblptru	equ	0xFF8
 11123                           tblptrh	equ	0xFF7
 11124                           tblptrl	equ	0xFF6
 11125                           tablat	equ	0xFF5
 11126                           prodh	equ	0xFF4
 11127                           prodl	equ	0xFF3
 11128                           indf0	equ	0xFEF
 11129                           postinc0	equ	0xFEE
 11130                           fsr0h	equ	0xFEA
 11131                           fsr0l	equ	0xFE9
 11132                           wreg	equ	0xFE8
 11133                           indf1	equ	0xFE7
 11134                           postdec1	equ	0xFE5
 11135                           fsr1h	equ	0xFE2
 11136                           fsr1l	equ	0xFE1
 11137                           indf2	equ	0xFDF
 11138                           postinc2	equ	0xFDE
 11139                           postdec2	equ	0xFDD
 11140                           fsr2h	equ	0xFDA
 11141                           fsr2l	equ	0xFD9
 11142                           status	equ	0xFD8
 11143                           
 11144 ;; *************** function ___lldiv *****************
 11145 ;; Defined at:
 11146 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
 11147 ;; Parameters:    Size  Location     Type
 11148 ;;  dividend        4   17[BANK0 ] unsigned long 
 11149 ;;  divisor         4   21[BANK0 ] unsigned long 
 11150 ;; Auto vars:     Size  Location     Type
 11151 ;;  quotient        4   33[COMRAM] unsigned long 
 11152 ;;  counter         1   37[COMRAM] unsigned char 
 11153 ;; Return value:  Size  Location     Type
 11154 ;;                  4   17[BANK0 ] unsigned long 
 11155 ;; Registers used:
 11156 ;;		wreg, status,2, status,0
 11157 ;; Tracked objects:
 11158 ;;		On entry : 0/0
 11159 ;;		On exit  : 0/0
 11160 ;;		Unchanged: 0/0
 11161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11162 ;;      Params:         0       8       0       0       0       0       0
 11163 ;;      Locals:         5       0       0       0       0       0       0
 11164 ;;      Temps:          0       0       0       0       0       0       0
 11165 ;;      Totals:         5       8       0       0       0       0       0
 11166 ;;Total ram usage:       13 bytes
 11167 ;; Hardware stack levels used:    1
 11168 ;; Hardware stack levels required when called:    3
 11169 ;; This function calls:
 11170 ;;		Nothing
 11171 ;; This function is called by:
 11172 ;;		_sprintf
 11173 ;; This function uses a non-reentrant model
 11174 ;;
 11175                           
 11176                           	psect	text43
 11177  00333A                     __ptext43:
 11178                           	opt stack 0
 11179  00333A                     ___lldiv:
 11180                           	opt stack 24
 11181                           
 11182                           ; BSR set to: 0
 11183                           ;incstack = 0
 11184  00333A  0E00               	movlw	0
 11185  00333C  6E22               	movwf	___lldiv@quotient,c
 11186  00333E  0E00               	movlw	0
 11187  003340  6E23               	movwf	___lldiv@quotient+1,c
 11188  003342  0E00               	movlw	0
 11189  003344  6E24               	movwf	___lldiv@quotient+2,c
 11190  003346  0E00               	movlw	0
 11191  003348  6E25               	movwf	___lldiv@quotient+3,c
 11192  00334A  0100               	movlb	0	; () banked
 11193  00334C  5175               	movf	___lldiv@divisor& (0+255),w,b
 11194  00334E  0100               	movlb	0	; () banked
 11195  003350  1176               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 11196  003352  0100               	movlb	0	; () banked
 11197  003354  1177               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 11198  003356  0100               	movlb	0	; () banked
 11199  003358  1178               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 11200  00335A  B4D8               	btfsc	status,2,c
 11201  00335C  D03D               	goto	l933
 11202                           
 11203                           ; BSR set to: 0
 11204  00335E  0E01               	movlw	1
 11205  003360  6E26               	movwf	___lldiv@counter,c
 11206  003362  D007               	goto	l5314
 11207  003364                     l5312:
 11208                           
 11209                           ; BSR set to: 0
 11210  003364  0100               	movlb	0	; () banked
 11211  003366  90D8               	bcf	status,0,c
 11212  003368  3775               	rlcf	___lldiv@divisor& (0+255),f,b
 11213  00336A  3776               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 11214  00336C  3777               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 11215  00336E  3778               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 11216  003370  2A26               	incf	___lldiv@counter,f,c
 11217  003372                     l5314:
 11218                           
 11219                           ; BSR set to: 0
 11220  003372  0100               	movlb	0	; () banked
 11221  003374  AF78               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 11222  003376  D7F6               	goto	l5312
 11223  003378                     l5316:
 11224                           
 11225                           ; BSR set to: 0
 11226  003378  90D8               	bcf	status,0,c
 11227  00337A  3622               	rlcf	___lldiv@quotient,f,c
 11228  00337C  3623               	rlcf	___lldiv@quotient+1,f,c
 11229  00337E  3624               	rlcf	___lldiv@quotient+2,f,c
 11230  003380  3625               	rlcf	___lldiv@quotient+3,f,c
 11231                           
 11232                           ; BSR set to: 0
 11233  003382  0100               	movlb	0	; () banked
 11234  003384  5175               	movf	___lldiv@divisor& (0+255),w,b
 11235  003386  0100               	movlb	0	; () banked
 11236  003388  5D71               	subwf	___lldiv@dividend& (0+255),w,b
 11237  00338A  0100               	movlb	0	; () banked
 11238  00338C  5176               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11239  00338E  0100               	movlb	0	; () banked
 11240  003390  5972               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 11241  003392  0100               	movlb	0	; () banked
 11242  003394  5177               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11243  003396  0100               	movlb	0	; () banked
 11244  003398  5973               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 11245  00339A  0100               	movlb	0	; () banked
 11246  00339C  5178               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11247  00339E  0100               	movlb	0	; () banked
 11248  0033A0  5974               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 11249  0033A2  A0D8               	btfss	status,0,c
 11250  0033A4  D011               	goto	l5324
 11251                           
 11252                           ; BSR set to: 0
 11253  0033A6  0100               	movlb	0	; () banked
 11254  0033A8  5175               	movf	___lldiv@divisor& (0+255),w,b
 11255  0033AA  0100               	movlb	0	; () banked
 11256  0033AC  5F71               	subwf	___lldiv@dividend& (0+255),f,b
 11257  0033AE  0100               	movlb	0	; () banked
 11258  0033B0  5176               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11259  0033B2  0100               	movlb	0	; () banked
 11260  0033B4  5B72               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 11261  0033B6  0100               	movlb	0	; () banked
 11262  0033B8  5177               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11263  0033BA  0100               	movlb	0	; () banked
 11264  0033BC  5B73               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 11265  0033BE  0100               	movlb	0	; () banked
 11266  0033C0  5178               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11267  0033C2  0100               	movlb	0	; () banked
 11268  0033C4  5B74               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 11269                           
 11270                           ; BSR set to: 0
 11271  0033C6  8022               	bsf	___lldiv@quotient,0,c
 11272  0033C8                     l5324:
 11273                           
 11274                           ; BSR set to: 0
 11275  0033C8  0100               	movlb	0	; () banked
 11276  0033CA  90D8               	bcf	status,0,c
 11277  0033CC  3378               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 11278  0033CE  3377               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 11279  0033D0  3376               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 11280  0033D2  3375               	rrcf	___lldiv@divisor& (0+255),f,b
 11281                           
 11282                           ; BSR set to: 0
 11283  0033D4  2E26               	decfsz	___lldiv@counter,f,c
 11284  0033D6  D7D0               	goto	l5316
 11285  0033D8                     l933:
 11286                           
 11287                           ; BSR set to: 0
 11288  0033D8  C022  F071         	movff	___lldiv@quotient,?___lldiv
 11289  0033DC  C023  F072         	movff	___lldiv@quotient+1,?___lldiv+1
 11290  0033E0  C024  F073         	movff	___lldiv@quotient+2,?___lldiv+2
 11291  0033E4  C025  F074         	movff	___lldiv@quotient+3,?___lldiv+3
 11292                           
 11293                           ; BSR set to: 0
 11294  0033E8  0012               	return		;funcret
 11295  0033EA                     __end_of___lldiv:
 11296                           	opt stack 0
 11297                           tblptru	equ	0xFF8
 11298                           tblptrh	equ	0xFF7
 11299                           tblptrl	equ	0xFF6
 11300                           tablat	equ	0xFF5
 11301                           prodh	equ	0xFF4
 11302                           prodl	equ	0xFF3
 11303                           indf0	equ	0xFEF
 11304                           postinc0	equ	0xFEE
 11305                           fsr0h	equ	0xFEA
 11306                           fsr0l	equ	0xFE9
 11307                           wreg	equ	0xFE8
 11308                           indf1	equ	0xFE7
 11309                           postdec1	equ	0xFE5
 11310                           fsr1h	equ	0xFE2
 11311                           fsr1l	equ	0xFE1
 11312                           indf2	equ	0xFDF
 11313                           postinc2	equ	0xFDE
 11314                           postdec2	equ	0xFDD
 11315                           fsr2h	equ	0xFDA
 11316                           fsr2l	equ	0xFD9
 11317                           status	equ	0xFD8
 11318                           
 11319 ;; *************** function ___fttol *****************
 11320 ;; Defined at:
 11321 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
 11322 ;; Parameters:    Size  Location     Type
 11323 ;;  f1              3   48[BANK0 ] float 
 11324 ;; Auto vars:     Size  Location     Type
 11325 ;;  lval            4   58[BANK0 ] unsigned long 
 11326 ;;  exp1            1   62[BANK0 ] unsigned char 
 11327 ;;  sign1           1   57[BANK0 ] unsigned char 
 11328 ;; Return value:  Size  Location     Type
 11329 ;;                  4   48[BANK0 ] long 
 11330 ;; Registers used:
 11331 ;;		wreg, status,2, status,0
 11332 ;; Tracked objects:
 11333 ;;		On entry : 0/0
 11334 ;;		On exit  : 0/0
 11335 ;;		Unchanged: 0/0
 11336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11337 ;;      Params:         0       4       0       0       0       0       0
 11338 ;;      Locals:         0       6       0       0       0       0       0
 11339 ;;      Temps:          0       5       0       0       0       0       0
 11340 ;;      Totals:         0      15       0       0       0       0       0
 11341 ;;Total ram usage:       15 bytes
 11342 ;; Hardware stack levels used:    1
 11343 ;; Hardware stack levels required when called:    3
 11344 ;; This function calls:
 11345 ;;		Nothing
 11346 ;; This function is called by:
 11347 ;;		_util_getSolarCurrent
 11348 ;;		_util_getBatteryCurrent
 11349 ;;		_sprintf
 11350 ;; This function uses a non-reentrant model
 11351 ;;
 11352                           
 11353                           	psect	text44
 11354  002AEA                     __ptext44:
 11355                           	opt stack 0
 11356  002AEA                     ___fttol:
 11357                           	opt stack 25
 11358                           
 11359                           ; BSR set to: 0
 11360                           ;incstack = 0
 11361  002AEA  C092  F094         	movff	___fttol@f1+2,??___fttol
 11362  002AEE  0100               	movlb	0	; () banked
 11363  002AF0  6B95               	clrf	(??___fttol+1)& (0+255),b
 11364  002AF2  6B96               	clrf	(??___fttol+2)& (0+255),b
 11365  002AF4  0100               	movlb	0	; () banked
 11366  002AF6  3591               	rlcf	(___fttol@f1+1)& (0+255),w,b
 11367  002AF8  0100               	movlb	0	; () banked
 11368  002AFA  3794               	rlcf	??___fttol& (0+255),f,b
 11369  002AFC  E301               	bnc	u3121
 11370  002AFE  8195               	bsf	(??___fttol+1)& (0+255),0,b
 11371  002B00                     u3121:
 11372  002B00  0100               	movlb	0	; () banked
 11373  002B02  5194               	movf	??___fttol& (0+255),w,b
 11374  002B04  0100               	movlb	0	; () banked
 11375  002B06  6F9E               	movwf	___fttol@exp1& (0+255),b
 11376  002B08  0100               	movlb	0	; () banked
 11377  002B0A  519E               	movf	___fttol@exp1& (0+255),w,b
 11378  002B0C  A4D8               	btfss	status,2,c
 11379  002B0E  D00A               	goto	l3586
 11380                           
 11381                           ; BSR set to: 0
 11382  002B10  0E00               	movlw	0
 11383  002B12  0100               	movlb	0	; () banked
 11384  002B14  6F90               	movwf	?___fttol& (0+255),b
 11385  002B16  0E00               	movlw	0
 11386  002B18  6F91               	movwf	(?___fttol+1)& (0+255),b
 11387  002B1A  0E00               	movlw	0
 11388  002B1C  6F92               	movwf	(?___fttol+2)& (0+255),b
 11389  002B1E  0E00               	movlw	0
 11390  002B20  6F93               	movwf	(?___fttol+3)& (0+255),b
 11391                           
 11392                           ; BSR set to: 0
 11393  002B22  0012               	return	
 11394  002B24                     l3586:
 11395                           
 11396                           ; BSR set to: 0
 11397  002B24  0E17               	movlw	23
 11398  002B26  0100               	movlb	0	; () banked
 11399  002B28  6F94               	movwf	??___fttol& (0+255),b
 11400  002B2A  C090  F095         	movff	___fttol@f1,??___fttol+1
 11401  002B2E  C091  F096         	movff	___fttol@f1+1,??___fttol+2
 11402  002B32  C092  F097         	movff	___fttol@f1+2,??___fttol+3
 11403  002B36  0100               	movlb	0	; () banked
 11404  002B38  2994               	incf	??___fttol& (0+255),w,b
 11405  002B3A  0100               	movlb	0	; () banked
 11406  002B3C  6F98               	movwf	(??___fttol+4)& (0+255),b
 11407  002B3E  D005               	goto	u3140
 11408  002B40                     u3145:
 11409  002B40  0100               	movlb	0	; () banked
 11410  002B42  90D8               	bcf	status,0,c
 11411  002B44  3397               	rrcf	(??___fttol+3)& (0+255),f,b
 11412  002B46  3396               	rrcf	(??___fttol+2)& (0+255),f,b
 11413  002B48  3395               	rrcf	(??___fttol+1)& (0+255),f,b
 11414  002B4A                     u3140:
 11415  002B4A  0100               	movlb	0	; () banked
 11416  002B4C  2F98               	decfsz	(??___fttol+4)& (0+255),f,b
 11417  002B4E  D7F8               	goto	u3145
 11418  002B50  0100               	movlb	0	; () banked
 11419  002B52  5195               	movf	(??___fttol+1)& (0+255),w,b
 11420  002B54  0100               	movlb	0	; () banked
 11421  002B56  6F99               	movwf	___fttol@sign1& (0+255),b
 11422                           
 11423                           ; BSR set to: 0
 11424  002B58  0100               	movlb	0	; () banked
 11425  002B5A  8F91               	bsf	(___fttol@f1+1)& (0+255),7,b
 11426                           
 11427                           ; BSR set to: 0
 11428  002B5C  0EFF               	movlw	255
 11429  002B5E  0100               	movlb	0	; () banked
 11430  002B60  1790               	andwf	___fttol@f1& (0+255),f,b
 11431  002B62  0EFF               	movlw	255
 11432  002B64  0100               	movlb	0	; () banked
 11433  002B66  1791               	andwf	(___fttol@f1+1)& (0+255),f,b
 11434  002B68  0E00               	movlw	0
 11435  002B6A  0100               	movlb	0	; () banked
 11436  002B6C  1792               	andwf	(___fttol@f1+2)& (0+255),f,b
 11437                           
 11438                           ; BSR set to: 0
 11439  002B6E  0100               	movlb	0	; () banked
 11440  002B70  5190               	movf	___fttol@f1& (0+255),w,b
 11441  002B72  0100               	movlb	0	; () banked
 11442  002B74  6F9A               	movwf	___fttol@lval& (0+255),b
 11443  002B76  0100               	movlb	0	; () banked
 11444  002B78  5191               	movf	(___fttol@f1+1)& (0+255),w,b
 11445  002B7A  0100               	movlb	0	; () banked
 11446  002B7C  6F9B               	movwf	(___fttol@lval+1)& (0+255),b
 11447  002B7E  0100               	movlb	0	; () banked
 11448  002B80  5192               	movf	(___fttol@f1+2)& (0+255),w,b
 11449  002B82  0100               	movlb	0	; () banked
 11450  002B84  6F9C               	movwf	(___fttol@lval+2)& (0+255),b
 11451  002B86  0100               	movlb	0	; () banked
 11452  002B88  6B9D               	clrf	(___fttol@lval+3)& (0+255),b
 11453                           
 11454                           ; BSR set to: 0
 11455  002B8A  0E8E               	movlw	142
 11456  002B8C  0100               	movlb	0	; () banked
 11457  002B8E  5F9E               	subwf	___fttol@exp1& (0+255),f,b
 11458                           
 11459                           ; BSR set to: 0
 11460  002B90  0100               	movlb	0	; () banked
 11461  002B92  AF9E               	btfss	___fttol@exp1& (0+255),7,b
 11462  002B94  D01A               	goto	l3608
 11463                           
 11464                           ; BSR set to: 0
 11465  002B96  0100               	movlb	0	; () banked
 11466  002B98  519E               	movf	___fttol@exp1& (0+255),w,b
 11467  002B9A  0A80               	xorlw	128
 11468  002B9C  0F8F               	addlw	143
 11469  002B9E  B0D8               	btfsc	status,0,c
 11470  002BA0  D00A               	goto	l3604
 11471                           
 11472                           ; BSR set to: 0
 11473  002BA2  0E00               	movlw	0
 11474  002BA4  0100               	movlb	0	; () banked
 11475  002BA6  6F90               	movwf	?___fttol& (0+255),b
 11476  002BA8  0E00               	movlw	0
 11477  002BAA  6F91               	movwf	(?___fttol+1)& (0+255),b
 11478  002BAC  0E00               	movlw	0
 11479  002BAE  6F92               	movwf	(?___fttol+2)& (0+255),b
 11480  002BB0  0E00               	movlw	0
 11481  002BB2  6F93               	movwf	(?___fttol+3)& (0+255),b
 11482                           
 11483                           ; BSR set to: 0
 11484  002BB4  0012               	return	
 11485  002BB6                     l3604:
 11486                           
 11487                           ; BSR set to: 0
 11488  002BB6  0100               	movlb	0	; () banked
 11489  002BB8  90D8               	bcf	status,0,c
 11490  002BBA  339D               	rrcf	(___fttol@lval+3)& (0+255),f,b
 11491  002BBC  339C               	rrcf	(___fttol@lval+2)& (0+255),f,b
 11492  002BBE  339B               	rrcf	(___fttol@lval+1)& (0+255),f,b
 11493  002BC0  339A               	rrcf	___fttol@lval& (0+255),f,b
 11494                           
 11495                           ; BSR set to: 0
 11496  002BC2  0100               	movlb	0	; () banked
 11497  002BC4  3F9E               	incfsz	___fttol@exp1& (0+255),f,b
 11498  002BC6  D7F7               	goto	l3604
 11499                           
 11500                           ; BSR set to: 0
 11501  002BC8  D01B               	goto	l3618
 11502  002BCA                     l3608:
 11503                           
 11504                           ; BSR set to: 0
 11505  002BCA  0E17               	movlw	23
 11506  002BCC  0100               	movlb	0	; () banked
 11507  002BCE  659E               	cpfsgt	___fttol@exp1& (0+255),b
 11508  002BD0  D012               	goto	l3616
 11509                           
 11510                           ; BSR set to: 0
 11511  002BD2  0E00               	movlw	0
 11512  002BD4  0100               	movlb	0	; () banked
 11513  002BD6  6F90               	movwf	?___fttol& (0+255),b
 11514  002BD8  0E00               	movlw	0
 11515  002BDA  6F91               	movwf	(?___fttol+1)& (0+255),b
 11516  002BDC  0E00               	movlw	0
 11517  002BDE  6F92               	movwf	(?___fttol+2)& (0+255),b
 11518  002BE0  0E00               	movlw	0
 11519  002BE2  6F93               	movwf	(?___fttol+3)& (0+255),b
 11520                           
 11521                           ; BSR set to: 0
 11522  002BE4  0012               	return	
 11523  002BE6                     l3614:
 11524                           
 11525                           ; BSR set to: 0
 11526  002BE6  0100               	movlb	0	; () banked
 11527  002BE8  90D8               	bcf	status,0,c
 11528  002BEA  379A               	rlcf	___fttol@lval& (0+255),f,b
 11529  002BEC  379B               	rlcf	(___fttol@lval+1)& (0+255),f,b
 11530  002BEE  379C               	rlcf	(___fttol@lval+2)& (0+255),f,b
 11531  002BF0  379D               	rlcf	(___fttol@lval+3)& (0+255),f,b
 11532  002BF2  0100               	movlb	0	; () banked
 11533  002BF4  079E               	decf	___fttol@exp1& (0+255),f,b
 11534  002BF6                     l3616:
 11535                           
 11536                           ; BSR set to: 0
 11537  002BF6  0100               	movlb	0	; () banked
 11538  002BF8  519E               	movf	___fttol@exp1& (0+255),w,b
 11539  002BFA  0100               	movlb	0	; () banked
 11540  002BFC  A4D8               	btfss	status,2,c
 11541  002BFE  D7F3               	goto	l3614
 11542  002C00                     l3618:
 11543                           
 11544                           ; BSR set to: 0
 11545  002C00  0100               	movlb	0	; () banked
 11546  002C02  5199               	movf	___fttol@sign1& (0+255),w,b
 11547  002C04  0100               	movlb	0	; () banked
 11548  002C06  B4D8               	btfsc	status,2,c
 11549  002C08  D009               	goto	l3622
 11550                           
 11551                           ; BSR set to: 0
 11552  002C0A  0100               	movlb	0	; () banked
 11553  002C0C  1F9D               	comf	(___fttol@lval+3)& (0+255),f,b
 11554  002C0E  1F9C               	comf	(___fttol@lval+2)& (0+255),f,b
 11555  002C10  1F9B               	comf	(___fttol@lval+1)& (0+255),f,b
 11556  002C12  6D9A               	negf	___fttol@lval& (0+255),b
 11557  002C14  0E00               	movlw	0
 11558  002C16  239B               	addwfc	(___fttol@lval+1)& (0+255),f,b
 11559  002C18  239C               	addwfc	(___fttol@lval+2)& (0+255),f,b
 11560  002C1A  239D               	addwfc	(___fttol@lval+3)& (0+255),f,b
 11561  002C1C                     l3622:
 11562                           
 11563                           ; BSR set to: 0
 11564  002C1C  C09A  F090         	movff	___fttol@lval,?___fttol
 11565  002C20  C09B  F091         	movff	___fttol@lval+1,?___fttol+1
 11566  002C24  C09C  F092         	movff	___fttol@lval+2,?___fttol+2
 11567  002C28  C09D  F093         	movff	___fttol@lval+3,?___fttol+3
 11568  002C2C  0012               	return	
 11569  002C2E                     __end_of___fttol:
 11570                           	opt stack 0
 11571                           tblptru	equ	0xFF8
 11572                           tblptrh	equ	0xFF7
 11573                           tblptrl	equ	0xFF6
 11574                           tablat	equ	0xFF5
 11575                           prodh	equ	0xFF4
 11576                           prodl	equ	0xFF3
 11577                           indf0	equ	0xFEF
 11578                           postinc0	equ	0xFEE
 11579                           fsr0h	equ	0xFEA
 11580                           fsr0l	equ	0xFE9
 11581                           wreg	equ	0xFE8
 11582                           indf1	equ	0xFE7
 11583                           postdec1	equ	0xFE5
 11584                           fsr1h	equ	0xFE2
 11585                           fsr1l	equ	0xFE1
 11586                           indf2	equ	0xFDF
 11587                           postinc2	equ	0xFDE
 11588                           postdec2	equ	0xFDD
 11589                           fsr2h	equ	0xFDA
 11590                           fsr2l	equ	0xFD9
 11591                           status	equ	0xFD8
 11592                           
 11593 ;; *************** function ___ftsub *****************
 11594 ;; Defined at:
 11595 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
 11596 ;; Parameters:    Size  Location     Type
 11597 ;;  f1              3   63[BANK0 ] float 
 11598 ;;  f2              3   66[BANK0 ] float 
 11599 ;; Auto vars:     Size  Location     Type
 11600 ;;		None
 11601 ;; Return value:  Size  Location     Type
 11602 ;;                  3   63[BANK0 ] float 
 11603 ;; Registers used:
 11604 ;;		wreg, status,2, status,0, cstack
 11605 ;; Tracked objects:
 11606 ;;		On entry : 0/0
 11607 ;;		On exit  : 0/0
 11608 ;;		Unchanged: 0/0
 11609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11610 ;;      Params:         0       6       0       0       0       0       0
 11611 ;;      Locals:         0       0       0       0       0       0       0
 11612 ;;      Temps:          0       0       0       0       0       0       0
 11613 ;;      Totals:         0       6       0       0       0       0       0
 11614 ;;Total ram usage:        6 bytes
 11615 ;; Hardware stack levels used:    1
 11616 ;; Hardware stack levels required when called:    5
 11617 ;; This function calls:
 11618 ;;		___ftadd
 11619 ;; This function is called by:
 11620 ;;		_sprintf
 11621 ;; This function uses a non-reentrant model
 11622 ;;
 11623                           
 11624                           	psect	text45
 11625  003824                     __ptext45:
 11626                           	opt stack 0
 11627  003824                     ___ftsub:
 11628                           	opt stack 22
 11629                           
 11630                           ; BSR set to: 0
 11631                           ;incstack = 0
 11632  003824  0100               	movlb	0	; () banked
 11633  003826  51A2               	movf	___ftsub@f2& (0+255),w,b
 11634  003828  0100               	movlb	0	; () banked
 11635  00382A  11A3               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 11636  00382C  0100               	movlb	0	; () banked
 11637  00382E  11A4               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 11638  003830  B4D8               	btfsc	status,2,c
 11639  003832  D009               	goto	l5280
 11640                           
 11641                           ; BSR set to: 0
 11642  003834  0E00               	movlw	0
 11643  003836  0100               	movlb	0	; () banked
 11644  003838  1BA2               	xorwf	___ftsub@f2& (0+255),f,b
 11645  00383A  0E00               	movlw	0
 11646  00383C  0100               	movlb	0	; () banked
 11647  00383E  1BA3               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 11648  003840  0E80               	movlw	128
 11649  003842  0100               	movlb	0	; () banked
 11650  003844  1BA4               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 11651  003846                     l5280:
 11652                           
 11653                           ; BSR set to: 0
 11654  003846  C09F  F093         	movff	___ftsub@f1,___ftadd@f1
 11655  00384A  C0A0  F094         	movff	___ftsub@f1+1,___ftadd@f1+1
 11656  00384E  C0A1  F095         	movff	___ftsub@f1+2,___ftadd@f1+2
 11657  003852  C0A2  F096         	movff	___ftsub@f2,___ftadd@f2
 11658  003856  C0A3  F097         	movff	___ftsub@f2+1,___ftadd@f2+1
 11659  00385A  C0A4  F098         	movff	___ftsub@f2+2,___ftadd@f2+2
 11660  00385E  EC9A  F00F         	call	___ftadd	;wreg free
 11661  003862  C093  F09F         	movff	?___ftadd,?___ftsub
 11662  003866  C094  F0A0         	movff	?___ftadd+1,?___ftsub+1
 11663  00386A  C095  F0A1         	movff	?___ftadd+2,?___ftsub+2
 11664  00386E  0012               	return	
 11665  003870                     __end_of___ftsub:
 11666                           	opt stack 0
 11667                           tblptru	equ	0xFF8
 11668                           tblptrh	equ	0xFF7
 11669                           tblptrl	equ	0xFF6
 11670                           tablat	equ	0xFF5
 11671                           prodh	equ	0xFF4
 11672                           prodl	equ	0xFF3
 11673                           indf0	equ	0xFEF
 11674                           postinc0	equ	0xFEE
 11675                           fsr0h	equ	0xFEA
 11676                           fsr0l	equ	0xFE9
 11677                           wreg	equ	0xFE8
 11678                           indf1	equ	0xFE7
 11679                           postdec1	equ	0xFE5
 11680                           fsr1h	equ	0xFE2
 11681                           fsr1l	equ	0xFE1
 11682                           indf2	equ	0xFDF
 11683                           postinc2	equ	0xFDE
 11684                           postdec2	equ	0xFDD
 11685                           fsr2h	equ	0xFDA
 11686                           fsr2l	equ	0xFD9
 11687                           status	equ	0xFD8
 11688                           
 11689 ;; *************** function ___ftadd *****************
 11690 ;; Defined at:
 11691 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
 11692 ;; Parameters:    Size  Location     Type
 11693 ;;  f1              3   51[BANK0 ] float 
 11694 ;;  f2              3   54[BANK0 ] float 
 11695 ;; Auto vars:     Size  Location     Type
 11696 ;;  exp1            1   62[BANK0 ] unsigned char 
 11697 ;;  exp2            1   61[BANK0 ] unsigned char 
 11698 ;;  sign            1   60[BANK0 ] unsigned char 
 11699 ;; Return value:  Size  Location     Type
 11700 ;;                  3   51[BANK0 ] float 
 11701 ;; Registers used:
 11702 ;;		wreg, status,2, status,0, cstack
 11703 ;; Tracked objects:
 11704 ;;		On entry : 0/0
 11705 ;;		On exit  : 0/0
 11706 ;;		Unchanged: 0/0
 11707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11708 ;;      Params:         0       6       0       0       0       0       0
 11709 ;;      Locals:         0       3       0       0       0       0       0
 11710 ;;      Temps:          0       3       0       0       0       0       0
 11711 ;;      Totals:         0      12       0       0       0       0       0
 11712 ;;Total ram usage:       12 bytes
 11713 ;; Hardware stack levels used:    1
 11714 ;; Hardware stack levels required when called:    4
 11715 ;; This function calls:
 11716 ;;		___ftpack
 11717 ;; This function is called by:
 11718 ;;		_util_getTemperature
 11719 ;;		_sprintf
 11720 ;;		___ftsub
 11721 ;; This function uses a non-reentrant model
 11722 ;;
 11723                           
 11724                           	psect	text46
 11725  001F34                     __ptext46:
 11726                           	opt stack 0
 11727  001F34                     ___ftadd:
 11728                           	opt stack 24
 11729                           
 11730                           ;incstack = 0
 11731  001F34  C095  F099         	movff	___ftadd@f1+2,??___ftadd
 11732  001F38  0100               	movlb	0	; () banked
 11733  001F3A  6B9A               	clrf	(??___ftadd+1)& (0+255),b
 11734  001F3C  6B9B               	clrf	(??___ftadd+2)& (0+255),b
 11735  001F3E  0100               	movlb	0	; () banked
 11736  001F40  3594               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 11737  001F42  0100               	movlb	0	; () banked
 11738  001F44  3799               	rlcf	??___ftadd& (0+255),f,b
 11739  001F46  E301               	bnc	u4571
 11740  001F48  819A               	bsf	(??___ftadd+1)& (0+255),0,b
 11741  001F4A                     u4571:
 11742  001F4A  0100               	movlb	0	; () banked
 11743  001F4C  5199               	movf	??___ftadd& (0+255),w,b
 11744  001F4E  0100               	movlb	0	; () banked
 11745  001F50  6F9E               	movwf	___ftadd@exp1& (0+255),b
 11746  001F52  C098  F099         	movff	___ftadd@f2+2,??___ftadd
 11747  001F56  0100               	movlb	0	; () banked
 11748  001F58  6B9A               	clrf	(??___ftadd+1)& (0+255),b
 11749  001F5A  6B9B               	clrf	(??___ftadd+2)& (0+255),b
 11750  001F5C  0100               	movlb	0	; () banked
 11751  001F5E  3597               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 11752  001F60  0100               	movlb	0	; () banked
 11753  001F62  3799               	rlcf	??___ftadd& (0+255),f,b
 11754  001F64  E301               	bnc	u4581
 11755  001F66  819A               	bsf	(??___ftadd+1)& (0+255),0,b
 11756  001F68                     u4581:
 11757  001F68  0100               	movlb	0	; () banked
 11758  001F6A  5199               	movf	??___ftadd& (0+255),w,b
 11759  001F6C  0100               	movlb	0	; () banked
 11760  001F6E  6F9D               	movwf	___ftadd@exp2& (0+255),b
 11761                           
 11762                           ; BSR set to: 0
 11763  001F70  0100               	movlb	0	; () banked
 11764  001F72  519E               	movf	___ftadd@exp1& (0+255),w,b
 11765  001F74  0100               	movlb	0	; () banked
 11766  001F76  B4D8               	btfsc	status,2,c
 11767  001F78  D011               	goto	l809
 11768                           
 11769                           ; BSR set to: 0
 11770  001F7A  0100               	movlb	0	; () banked
 11771  001F7C  519D               	movf	___ftadd@exp2& (0+255),w,b
 11772  001F7E  0100               	movlb	0	; () banked
 11773  001F80  5D9E               	subwf	___ftadd@exp1& (0+255),w,b
 11774  001F82  B0D8               	btfsc	status,0,c
 11775  001F84  D012               	goto	l4828
 11776                           
 11777                           ; BSR set to: 0
 11778  001F86  0100               	movlb	0	; () banked
 11779  001F88  519E               	movf	___ftadd@exp1& (0+255),w,b
 11780  001F8A  0800               	sublw	0
 11781  001F8C  0100               	movlb	0	; () banked
 11782  001F8E  259D               	addwf	___ftadd@exp2& (0+255),w,b
 11783  001F90  0100               	movlb	0	; () banked
 11784  001F92  6F99               	movwf	??___ftadd& (0+255),b
 11785  001F94  0E18               	movlw	24
 11786  001F96  0100               	movlb	0	; () banked
 11787  001F98  6599               	cpfsgt	??___ftadd& (0+255),b
 11788  001F9A  D007               	goto	l4828
 11789  001F9C                     l809:
 11790                           
 11791                           ; BSR set to: 0
 11792  001F9C  C096  F093         	movff	___ftadd@f2,?___ftadd
 11793  001FA0  C097  F094         	movff	___ftadd@f2+1,?___ftadd+1
 11794  001FA4  C098  F095         	movff	___ftadd@f2+2,?___ftadd+2
 11795  001FA8  0012               	return	
 11796  001FAA                     l4828:
 11797                           
 11798                           ; BSR set to: 0
 11799  001FAA  0100               	movlb	0	; () banked
 11800  001FAC  519D               	movf	___ftadd@exp2& (0+255),w,b
 11801  001FAE  0100               	movlb	0	; () banked
 11802  001FB0  B4D8               	btfsc	status,2,c
 11803  001FB2  D011               	goto	l813
 11804                           
 11805                           ; BSR set to: 0
 11806  001FB4  0100               	movlb	0	; () banked
 11807  001FB6  519E               	movf	___ftadd@exp1& (0+255),w,b
 11808  001FB8  0100               	movlb	0	; () banked
 11809  001FBA  5D9D               	subwf	___ftadd@exp2& (0+255),w,b
 11810  001FBC  B0D8               	btfsc	status,0,c
 11811  001FBE  D012               	goto	l4834
 11812                           
 11813                           ; BSR set to: 0
 11814  001FC0  0100               	movlb	0	; () banked
 11815  001FC2  519D               	movf	___ftadd@exp2& (0+255),w,b
 11816  001FC4  0800               	sublw	0
 11817  001FC6  0100               	movlb	0	; () banked
 11818  001FC8  259E               	addwf	___ftadd@exp1& (0+255),w,b
 11819  001FCA  0100               	movlb	0	; () banked
 11820  001FCC  6F99               	movwf	??___ftadd& (0+255),b
 11821  001FCE  0E18               	movlw	24
 11822  001FD0  0100               	movlb	0	; () banked
 11823  001FD2  6599               	cpfsgt	??___ftadd& (0+255),b
 11824  001FD4  D007               	goto	l4834
 11825  001FD6                     l813:
 11826                           
 11827                           ; BSR set to: 0
 11828  001FD6  C093  F093         	movff	___ftadd@f1,?___ftadd
 11829  001FDA  C094  F094         	movff	___ftadd@f1+1,?___ftadd+1
 11830  001FDE  C095  F095         	movff	___ftadd@f1+2,?___ftadd+2
 11831  001FE2  0012               	return	
 11832  001FE4                     l4834:
 11833                           
 11834                           ; BSR set to: 0
 11835  001FE4  0E06               	movlw	6
 11836  001FE6  0100               	movlb	0	; () banked
 11837  001FE8  6F9C               	movwf	___ftadd@sign& (0+255),b
 11838                           
 11839                           ; BSR set to: 0
 11840  001FEA  0100               	movlb	0	; () banked
 11841  001FEC  AF95               	btfss	(___ftadd@f1+2)& (0+255),7,b
 11842  001FEE  D002               	goto	l4840
 11843                           
 11844                           ; BSR set to: 0
 11845  001FF0  0100               	movlb	0	; () banked
 11846  001FF2  8F9C               	bsf	___ftadd@sign& (0+255),7,b
 11847  001FF4                     l4840:
 11848                           
 11849                           ; BSR set to: 0
 11850  001FF4  0100               	movlb	0	; () banked
 11851  001FF6  AF98               	btfss	(___ftadd@f2+2)& (0+255),7,b
 11852  001FF8  D002               	goto	l815
 11853                           
 11854                           ; BSR set to: 0
 11855  001FFA  0100               	movlb	0	; () banked
 11856  001FFC  8D9C               	bsf	___ftadd@sign& (0+255),6,b
 11857  001FFE                     l815:
 11858                           
 11859                           ; BSR set to: 0
 11860  001FFE  0100               	movlb	0	; () banked
 11861  002000  8F94               	bsf	(___ftadd@f1+1)& (0+255),7,b
 11862                           
 11863                           ; BSR set to: 0
 11864  002002  0EFF               	movlw	255
 11865  002004  0100               	movlb	0	; () banked
 11866  002006  1793               	andwf	___ftadd@f1& (0+255),f,b
 11867  002008  0EFF               	movlw	255
 11868  00200A  0100               	movlb	0	; () banked
 11869  00200C  1794               	andwf	(___ftadd@f1+1)& (0+255),f,b
 11870  00200E  0E00               	movlw	0
 11871  002010  0100               	movlb	0	; () banked
 11872  002012  1795               	andwf	(___ftadd@f1+2)& (0+255),f,b
 11873  002014  0100               	movlb	0	; () banked
 11874  002016  8F97               	bsf	(___ftadd@f2+1)& (0+255),7,b
 11875                           
 11876                           ; BSR set to: 0
 11877  002018  0EFF               	movlw	255
 11878  00201A  0100               	movlb	0	; () banked
 11879  00201C  1796               	andwf	___ftadd@f2& (0+255),f,b
 11880  00201E  0EFF               	movlw	255
 11881  002020  0100               	movlb	0	; () banked
 11882  002022  1797               	andwf	(___ftadd@f2+1)& (0+255),f,b
 11883  002024  0E00               	movlw	0
 11884  002026  0100               	movlb	0	; () banked
 11885  002028  1798               	andwf	(___ftadd@f2+2)& (0+255),f,b
 11886                           
 11887                           ; BSR set to: 0
 11888  00202A  0100               	movlb	0	; () banked
 11889  00202C  519D               	movf	___ftadd@exp2& (0+255),w,b
 11890  00202E  0100               	movlb	0	; () banked
 11891  002030  5D9E               	subwf	___ftadd@exp1& (0+255),w,b
 11892  002032  B0D8               	btfsc	status,0,c
 11893  002034  D025               	goto	l4860
 11894  002036                     l4850:
 11895                           
 11896                           ; BSR set to: 0
 11897  002036  0100               	movlb	0	; () banked
 11898  002038  90D8               	bcf	status,0,c
 11899  00203A  3796               	rlcf	___ftadd@f2& (0+255),f,b
 11900  00203C  3797               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 11901  00203E  3798               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 11902  002040  0100               	movlb	0	; () banked
 11903  002042  079D               	decf	___ftadd@exp2& (0+255),f,b
 11904                           
 11905                           ; BSR set to: 0
 11906  002044  0100               	movlb	0	; () banked
 11907  002046  519E               	movf	___ftadd@exp1& (0+255),w,b
 11908  002048  0100               	movlb	0	; () banked
 11909  00204A  199D               	xorwf	___ftadd@exp2& (0+255),w,b
 11910  00204C  B4D8               	btfsc	status,2,c
 11911  00204E  D011               	goto	l4858
 11912                           
 11913                           ; BSR set to: 0
 11914  002050  0100               	movlb	0	; () banked
 11915  002052  079C               	decf	___ftadd@sign& (0+255),f,b
 11916  002054  C09C  F099         	movff	___ftadd@sign,??___ftadd
 11917  002058  0E07               	movlw	7
 11918  00205A  0100               	movlb	0	; () banked
 11919  00205C  1799               	andwf	??___ftadd& (0+255),f,b
 11920  00205E  B4D8               	btfsc	status,2,c
 11921  002060  D008               	goto	l4858
 11922  002062  D7E9               	goto	l4850
 11923  002064                     l4856:
 11924                           
 11925                           ; BSR set to: 0
 11926  002064  0100               	movlb	0	; () banked
 11927  002066  90D8               	bcf	status,0,c
 11928  002068  3395               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 11929  00206A  3394               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 11930  00206C  3393               	rrcf	___ftadd@f1& (0+255),f,b
 11931  00206E  0100               	movlb	0	; () banked
 11932  002070  2B9E               	incf	___ftadd@exp1& (0+255),f,b
 11933  002072                     l4858:
 11934                           
 11935                           ; BSR set to: 0
 11936  002072  0100               	movlb	0	; () banked
 11937  002074  519D               	movf	___ftadd@exp2& (0+255),w,b
 11938  002076  0100               	movlb	0	; () banked
 11939  002078  199E               	xorwf	___ftadd@exp1& (0+255),w,b
 11940  00207A  B4D8               	btfsc	status,2,c
 11941  00207C  D02B               	goto	l824
 11942  00207E  D7F2               	goto	l4856
 11943  002080                     l4860:
 11944                           
 11945                           ; BSR set to: 0
 11946  002080  0100               	movlb	0	; () banked
 11947  002082  519E               	movf	___ftadd@exp1& (0+255),w,b
 11948  002084  0100               	movlb	0	; () banked
 11949  002086  5D9D               	subwf	___ftadd@exp2& (0+255),w,b
 11950  002088  B0D8               	btfsc	status,0,c
 11951  00208A  D024               	goto	l824
 11952  00208C                     l4862:
 11953                           
 11954                           ; BSR set to: 0
 11955  00208C  0100               	movlb	0	; () banked
 11956  00208E  90D8               	bcf	status,0,c
 11957  002090  3793               	rlcf	___ftadd@f1& (0+255),f,b
 11958  002092  3794               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 11959  002094  3795               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 11960  002096  0100               	movlb	0	; () banked
 11961  002098  079E               	decf	___ftadd@exp1& (0+255),f,b
 11962                           
 11963                           ; BSR set to: 0
 11964  00209A  0100               	movlb	0	; () banked
 11965  00209C  519E               	movf	___ftadd@exp1& (0+255),w,b
 11966  00209E  0100               	movlb	0	; () banked
 11967  0020A0  199D               	xorwf	___ftadd@exp2& (0+255),w,b
 11968  0020A2  B4D8               	btfsc	status,2,c
 11969  0020A4  D011               	goto	l4870
 11970                           
 11971                           ; BSR set to: 0
 11972  0020A6  0100               	movlb	0	; () banked
 11973  0020A8  079C               	decf	___ftadd@sign& (0+255),f,b
 11974  0020AA  C09C  F099         	movff	___ftadd@sign,??___ftadd
 11975  0020AE  0E07               	movlw	7
 11976  0020B0  0100               	movlb	0	; () banked
 11977  0020B2  1799               	andwf	??___ftadd& (0+255),f,b
 11978  0020B4  B4D8               	btfsc	status,2,c
 11979  0020B6  D008               	goto	l4870
 11980  0020B8  D7E9               	goto	l4862
 11981  0020BA                     l4868:
 11982                           
 11983                           ; BSR set to: 0
 11984  0020BA  0100               	movlb	0	; () banked
 11985  0020BC  90D8               	bcf	status,0,c
 11986  0020BE  3398               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 11987  0020C0  3397               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 11988  0020C2  3396               	rrcf	___ftadd@f2& (0+255),f,b
 11989  0020C4  0100               	movlb	0	; () banked
 11990  0020C6  2B9D               	incf	___ftadd@exp2& (0+255),f,b
 11991  0020C8                     l4870:
 11992                           
 11993                           ; BSR set to: 0
 11994  0020C8  0100               	movlb	0	; () banked
 11995  0020CA  519D               	movf	___ftadd@exp2& (0+255),w,b
 11996  0020CC  0100               	movlb	0	; () banked
 11997  0020CE  199E               	xorwf	___ftadd@exp1& (0+255),w,b
 11998  0020D0  A4D8               	btfss	status,2,c
 11999  0020D2  D7F3               	goto	l4868
 12000  0020D4                     l824:
 12001                           
 12002                           ; BSR set to: 0
 12003  0020D4  0100               	movlb	0	; () banked
 12004  0020D6  AF9C               	btfss	___ftadd@sign& (0+255),7,b
 12005  0020D8  D012               	goto	l833
 12006                           
 12007                           ; BSR set to: 0
 12008  0020DA  0EFF               	movlw	255
 12009  0020DC  0100               	movlb	0	; () banked
 12010  0020DE  1B93               	xorwf	___ftadd@f1& (0+255),f,b
 12011  0020E0  0EFF               	movlw	255
 12012  0020E2  0100               	movlb	0	; () banked
 12013  0020E4  1B94               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 12014  0020E6  0EFF               	movlw	255
 12015  0020E8  0100               	movlb	0	; () banked
 12016  0020EA  1B95               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 12017  0020EC  0E01               	movlw	1
 12018  0020EE  0100               	movlb	0	; () banked
 12019  0020F0  2793               	addwf	___ftadd@f1& (0+255),f,b
 12020  0020F2  0E00               	movlw	0
 12021  0020F4  0100               	movlb	0	; () banked
 12022  0020F6  2394               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 12023  0020F8  0E00               	movlw	0
 12024  0020FA  0100               	movlb	0	; () banked
 12025  0020FC  2395               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 12026  0020FE                     l833:
 12027                           
 12028                           ; BSR set to: 0
 12029  0020FE  0100               	movlb	0	; () banked
 12030  002100  AD9C               	btfss	___ftadd@sign& (0+255),6,b
 12031  002102  D012               	goto	l4876
 12032                           
 12033                           ; BSR set to: 0
 12034  002104  0EFF               	movlw	255
 12035  002106  0100               	movlb	0	; () banked
 12036  002108  1B96               	xorwf	___ftadd@f2& (0+255),f,b
 12037  00210A  0EFF               	movlw	255
 12038  00210C  0100               	movlb	0	; () banked
 12039  00210E  1B97               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 12040  002110  0EFF               	movlw	255
 12041  002112  0100               	movlb	0	; () banked
 12042  002114  1B98               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 12043  002116  0E01               	movlw	1
 12044  002118  0100               	movlb	0	; () banked
 12045  00211A  2796               	addwf	___ftadd@f2& (0+255),f,b
 12046  00211C  0E00               	movlw	0
 12047  00211E  0100               	movlb	0	; () banked
 12048  002120  2397               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12049  002122  0E00               	movlw	0
 12050  002124  0100               	movlb	0	; () banked
 12051  002126  2398               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12052  002128                     l4876:
 12053                           
 12054                           ; BSR set to: 0
 12055  002128  0E00               	movlw	0
 12056  00212A  0100               	movlb	0	; () banked
 12057  00212C  6F9C               	movwf	___ftadd@sign& (0+255),b
 12058                           
 12059                           ; BSR set to: 0
 12060  00212E  0100               	movlb	0	; () banked
 12061  002130  5193               	movf	___ftadd@f1& (0+255),w,b
 12062  002132  0100               	movlb	0	; () banked
 12063  002134  2796               	addwf	___ftadd@f2& (0+255),f,b
 12064  002136  0100               	movlb	0	; () banked
 12065  002138  5194               	movf	(___ftadd@f1+1)& (0+255),w,b
 12066  00213A  0100               	movlb	0	; () banked
 12067  00213C  2397               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12068  00213E  0100               	movlb	0	; () banked
 12069  002140  5195               	movf	(___ftadd@f1+2)& (0+255),w,b
 12070  002142  0100               	movlb	0	; () banked
 12071  002144  2398               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12072                           
 12073                           ; BSR set to: 0
 12074  002146  0100               	movlb	0	; () banked
 12075  002148  AF98               	btfss	(___ftadd@f2+2)& (0+255),7,b
 12076  00214A  D015               	goto	l4886
 12077                           
 12078                           ; BSR set to: 0
 12079  00214C  0EFF               	movlw	255
 12080  00214E  0100               	movlb	0	; () banked
 12081  002150  1B96               	xorwf	___ftadd@f2& (0+255),f,b
 12082  002152  0EFF               	movlw	255
 12083  002154  0100               	movlb	0	; () banked
 12084  002156  1B97               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 12085  002158  0EFF               	movlw	255
 12086  00215A  0100               	movlb	0	; () banked
 12087  00215C  1B98               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 12088  00215E  0E01               	movlw	1
 12089  002160  0100               	movlb	0	; () banked
 12090  002162  2796               	addwf	___ftadd@f2& (0+255),f,b
 12091  002164  0E00               	movlw	0
 12092  002166  0100               	movlb	0	; () banked
 12093  002168  2397               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12094  00216A  0E00               	movlw	0
 12095  00216C  0100               	movlb	0	; () banked
 12096  00216E  2398               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12097                           
 12098                           ; BSR set to: 0
 12099  002170  0E01               	movlw	1
 12100  002172  0100               	movlb	0	; () banked
 12101  002174  6F9C               	movwf	___ftadd@sign& (0+255),b
 12102  002176                     l4886:
 12103                           
 12104                           ; BSR set to: 0
 12105  002176  C096  F071         	movff	___ftadd@f2,___ftpack@arg
 12106  00217A  C097  F072         	movff	___ftadd@f2+1,___ftpack@arg+1
 12107  00217E  C098  F073         	movff	___ftadd@f2+2,___ftpack@arg+2
 12108  002182  C09E  F074         	movff	___ftadd@exp1,___ftpack@exp
 12109  002186  C09C  F075         	movff	___ftadd@sign,___ftpack@sign
 12110  00218A  EC40  F017         	call	___ftpack	;wreg free
 12111  00218E  C071  F093         	movff	?___ftpack,?___ftadd
 12112  002192  C072  F094         	movff	?___ftpack+1,?___ftadd+1
 12113  002196  C073  F095         	movff	?___ftpack+2,?___ftadd+2
 12114  00219A  0012               	return	
 12115  00219C                     __end_of___ftadd:
 12116                           	opt stack 0
 12117                           tblptru	equ	0xFF8
 12118                           tblptrh	equ	0xFF7
 12119                           tblptrl	equ	0xFF6
 12120                           tablat	equ	0xFF5
 12121                           prodh	equ	0xFF4
 12122                           prodl	equ	0xFF3
 12123                           indf0	equ	0xFEF
 12124                           postinc0	equ	0xFEE
 12125                           fsr0h	equ	0xFEA
 12126                           fsr0l	equ	0xFE9
 12127                           wreg	equ	0xFE8
 12128                           indf1	equ	0xFE7
 12129                           postdec1	equ	0xFE5
 12130                           fsr1h	equ	0xFE2
 12131                           fsr1l	equ	0xFE1
 12132                           indf2	equ	0xFDF
 12133                           postinc2	equ	0xFDE
 12134                           postdec2	equ	0xFDD
 12135                           fsr2h	equ	0xFDA
 12136                           fsr2l	equ	0xFD9
 12137                           status	equ	0xFD8
 12138                           
 12139 ;; *************** function ___ftpack *****************
 12140 ;; Defined at:
 12141 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
 12142 ;; Parameters:    Size  Location     Type
 12143 ;;  arg             3   17[BANK0 ] unsigned um
 12144 ;;  exp             1   20[BANK0 ] unsigned char 
 12145 ;;  sign            1   21[BANK0 ] unsigned char 
 12146 ;; Auto vars:     Size  Location     Type
 12147 ;;		None
 12148 ;; Return value:  Size  Location     Type
 12149 ;;                  3   17[BANK0 ] float 
 12150 ;; Registers used:
 12151 ;;		wreg, status,2, status,0
 12152 ;; Tracked objects:
 12153 ;;		On entry : 0/0
 12154 ;;		On exit  : 0/0
 12155 ;;		Unchanged: 0/0
 12156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12157 ;;      Params:         0       5       0       0       0       0       0
 12158 ;;      Locals:         0       0       0       0       0       0       0
 12159 ;;      Temps:          3       0       0       0       0       0       0
 12160 ;;      Totals:         3       5       0       0       0       0       0
 12161 ;;Total ram usage:        8 bytes
 12162 ;; Hardware stack levels used:    1
 12163 ;; Hardware stack levels required when called:    3
 12164 ;; This function calls:
 12165 ;;		Nothing
 12166 ;; This function is called by:
 12167 ;;		___awtoft
 12168 ;;		___ftadd
 12169 ;;		___ftdiv
 12170 ;;		___ftmul
 12171 ;;		___lltoft
 12172 ;;		___lwtoft
 12173 ;; This function uses a non-reentrant model
 12174 ;;
 12175                           
 12176                           	psect	text47
 12177  002E80                     __ptext47:
 12178                           	opt stack 0
 12179  002E80                     ___ftpack:
 12180                           	opt stack 24
 12181                           
 12182                           ;incstack = 0
 12183  002E80  0100               	movlb	0	; () banked
 12184  002E82  5174               	movf	___ftpack@exp& (0+255),w,b
 12185  002E84  0100               	movlb	0	; () banked
 12186  002E86  B4D8               	btfsc	status,2,c
 12187  002E88  D008               	goto	l4738
 12188                           
 12189                           ; BSR set to: 0
 12190  002E8A  0100               	movlb	0	; () banked
 12191  002E8C  5171               	movf	___ftpack@arg& (0+255),w,b
 12192  002E8E  0100               	movlb	0	; () banked
 12193  002E90  1172               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 12194  002E92  0100               	movlb	0	; () banked
 12195  002E94  1173               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 12196  002E96  A4D8               	btfss	status,2,c
 12197  002E98  D011               	goto	l4744
 12198  002E9A                     l4738:
 12199                           
 12200                           ; BSR set to: 0
 12201  002E9A  0E00               	movlw	0
 12202  002E9C  0100               	movlb	0	; () banked
 12203  002E9E  6F71               	movwf	?___ftpack& (0+255),b
 12204  002EA0  0E00               	movlw	0
 12205  002EA2  0100               	movlb	0	; () banked
 12206  002EA4  6F72               	movwf	(?___ftpack+1)& (0+255),b
 12207  002EA6  0E00               	movlw	0
 12208  002EA8  0100               	movlb	0	; () banked
 12209  002EAA  6F73               	movwf	(?___ftpack+2)& (0+255),b
 12210                           
 12211                           ; BSR set to: 0
 12212  002EAC  0012               	return	
 12213  002EAE                     l4742:
 12214                           
 12215                           ; BSR set to: 0
 12216  002EAE  0100               	movlb	0	; () banked
 12217  002EB0  2B74               	incf	___ftpack@exp& (0+255),f,b
 12218  002EB2  0100               	movlb	0	; () banked
 12219  002EB4  90D8               	bcf	status,0,c
 12220  002EB6  3373               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 12221  002EB8  3372               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 12222  002EBA  3371               	rrcf	___ftpack@arg& (0+255),f,b
 12223  002EBC                     l4744:
 12224                           
 12225                           ; BSR set to: 0
 12226  002EBC  0E00               	movlw	0
 12227  002EBE  0100               	movlb	0	; () banked
 12228  002EC0  1571               	andwf	___ftpack@arg& (0+255),w,b
 12229  002EC2  6E22               	movwf	??___ftpack& (0+255),c
 12230  002EC4  0E00               	movlw	0
 12231  002EC6  0100               	movlb	0	; () banked
 12232  002EC8  1572               	andwf	(___ftpack@arg+1)& (0+255),w,b
 12233  002ECA  6E23               	movwf	(??___ftpack+1)& (0+255),c
 12234  002ECC  0EFE               	movlw	254
 12235  002ECE  0100               	movlb	0	; () banked
 12236  002ED0  1573               	andwf	(___ftpack@arg+2)& (0+255),w,b
 12237  002ED2  6E24               	movwf	(??___ftpack+2)& (0+255),c
 12238  002ED4  5022               	movf	??___ftpack,w,c
 12239  002ED6  1023               	iorwf	??___ftpack+1,w,c
 12240  002ED8  1024               	iorwf	??___ftpack+2,w,c
 12241  002EDA  B4D8               	btfsc	status,2,c
 12242  002EDC  D011               	goto	l4750
 12243  002EDE  D7E7               	goto	l4742
 12244  002EE0                     l4746:
 12245                           
 12246                           ; BSR set to: 0
 12247  002EE0  0100               	movlb	0	; () banked
 12248  002EE2  2B74               	incf	___ftpack@exp& (0+255),f,b
 12249                           
 12250                           ; BSR set to: 0
 12251  002EE4  0E01               	movlw	1
 12252  002EE6  0100               	movlb	0	; () banked
 12253  002EE8  2771               	addwf	___ftpack@arg& (0+255),f,b
 12254  002EEA  0E00               	movlw	0
 12255  002EEC  0100               	movlb	0	; () banked
 12256  002EEE  2372               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 12257  002EF0  0E00               	movlw	0
 12258  002EF2  0100               	movlb	0	; () banked
 12259  002EF4  2373               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 12260  002EF6  0100               	movlb	0	; () banked
 12261  002EF8  90D8               	bcf	status,0,c
 12262  002EFA  3373               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 12263  002EFC  3372               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 12264  002EFE  3371               	rrcf	___ftpack@arg& (0+255),f,b
 12265  002F00                     l4750:
 12266                           
 12267                           ; BSR set to: 0
 12268  002F00  0E00               	movlw	0
 12269  002F02  0100               	movlb	0	; () banked
 12270  002F04  1571               	andwf	___ftpack@arg& (0+255),w,b
 12271  002F06  6E22               	movwf	??___ftpack& (0+255),c
 12272  002F08  0E00               	movlw	0
 12273  002F0A  0100               	movlb	0	; () banked
 12274  002F0C  1572               	andwf	(___ftpack@arg+1)& (0+255),w,b
 12275  002F0E  6E23               	movwf	(??___ftpack+1)& (0+255),c
 12276  002F10  0EFF               	movlw	255
 12277  002F12  0100               	movlb	0	; () banked
 12278  002F14  1573               	andwf	(___ftpack@arg+2)& (0+255),w,b
 12279  002F16  6E24               	movwf	(??___ftpack+2)& (0+255),c
 12280  002F18  5022               	movf	??___ftpack,w,c
 12281  002F1A  1023               	iorwf	??___ftpack+1,w,c
 12282  002F1C  1024               	iorwf	??___ftpack+2,w,c
 12283  002F1E  B4D8               	btfsc	status,2,c
 12284  002F20  D008               	goto	l4754
 12285  002F22  D7DE               	goto	l4746
 12286  002F24                     l4752:
 12287                           
 12288                           ; BSR set to: 0
 12289  002F24  0100               	movlb	0	; () banked
 12290  002F26  0774               	decf	___ftpack@exp& (0+255),f,b
 12291  002F28  0100               	movlb	0	; () banked
 12292  002F2A  90D8               	bcf	status,0,c
 12293  002F2C  3771               	rlcf	___ftpack@arg& (0+255),f,b
 12294  002F2E  3772               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 12295  002F30  3773               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 12296  002F32                     l4754:
 12297                           
 12298                           ; BSR set to: 0
 12299  002F32  0100               	movlb	0	; () banked
 12300  002F34  BF72               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 12301  002F36  D004               	goto	l786
 12302                           
 12303                           ; BSR set to: 0
 12304  002F38  0E02               	movlw	2
 12305  002F3A  0100               	movlb	0	; () banked
 12306  002F3C  6174               	cpfslt	___ftpack@exp& (0+255),b
 12307  002F3E  D7F2               	goto	l4752
 12308  002F40                     l786:
 12309                           
 12310                           ; BSR set to: 0
 12311  002F40  0100               	movlb	0	; () banked
 12312  002F42  B174               	btfsc	___ftpack@exp& (0+255),0,b
 12313  002F44  D002               	goto	l4760
 12314                           
 12315                           ; BSR set to: 0
 12316  002F46  0100               	movlb	0	; () banked
 12317  002F48  9F72               	bcf	(___ftpack@arg+1)& (0+255),7,b
 12318  002F4A                     l4760:
 12319                           
 12320                           ; BSR set to: 0
 12321  002F4A  0100               	movlb	0	; () banked
 12322  002F4C  90D8               	bcf	status,0,c
 12323  002F4E  3374               	rrcf	___ftpack@exp& (0+255),f,b
 12324  002F50  0100               	movlb	0	; () banked
 12325  002F52  5174               	movf	___ftpack@exp& (0+255),w,b
 12326  002F54  0100               	movlb	0	; () banked
 12327  002F56  1373               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 12328                           
 12329                           ; BSR set to: 0
 12330  002F58  0100               	movlb	0	; () banked
 12331  002F5A  5175               	movf	___ftpack@sign& (0+255),w,b
 12332  002F5C  0100               	movlb	0	; () banked
 12333  002F5E  B4D8               	btfsc	status,2,c
 12334  002F60  D002               	goto	l4766
 12335                           
 12336                           ; BSR set to: 0
 12337  002F62  0100               	movlb	0	; () banked
 12338  002F64  8F73               	bsf	(___ftpack@arg+2)& (0+255),7,b
 12339  002F66                     l4766:
 12340                           
 12341                           ; BSR set to: 0
 12342  002F66  C071  F071         	movff	___ftpack@arg,?___ftpack
 12343  002F6A  C072  F072         	movff	___ftpack@arg+1,?___ftpack+1
 12344  002F6E  C073  F073         	movff	___ftpack@arg+2,?___ftpack+2
 12345  002F72  0012               	return	
 12346  002F74                     __end_of___ftpack:
 12347                           	opt stack 0
 12348                           tblptru	equ	0xFF8
 12349                           tblptrh	equ	0xFF7
 12350                           tblptrl	equ	0xFF6
 12351                           tablat	equ	0xFF5
 12352                           prodh	equ	0xFF4
 12353                           prodl	equ	0xFF3
 12354                           indf0	equ	0xFEF
 12355                           postinc0	equ	0xFEE
 12356                           fsr0h	equ	0xFEA
 12357                           fsr0l	equ	0xFE9
 12358                           wreg	equ	0xFE8
 12359                           indf1	equ	0xFE7
 12360                           postdec1	equ	0xFE5
 12361                           fsr1h	equ	0xFE2
 12362                           fsr1l	equ	0xFE1
 12363                           indf2	equ	0xFDF
 12364                           postinc2	equ	0xFDE
 12365                           postdec2	equ	0xFDD
 12366                           fsr2h	equ	0xFDA
 12367                           fsr2l	equ	0xFD9
 12368                           status	equ	0xFD8
 12369                           
 12370 ;; *************** function ___ftneg *****************
 12371 ;; Defined at:
 12372 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
 12373 ;; Parameters:    Size  Location     Type
 12374 ;;  f1              3   17[BANK0 ] float 
 12375 ;; Auto vars:     Size  Location     Type
 12376 ;;		None
 12377 ;; Return value:  Size  Location     Type
 12378 ;;                  3   17[BANK0 ] float 
 12379 ;; Registers used:
 12380 ;;		wreg, status,2, status,0
 12381 ;; Tracked objects:
 12382 ;;		On entry : 0/0
 12383 ;;		On exit  : 0/0
 12384 ;;		Unchanged: 0/0
 12385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12386 ;;      Params:         0       3       0       0       0       0       0
 12387 ;;      Locals:         0       0       0       0       0       0       0
 12388 ;;      Temps:          0       0       0       0       0       0       0
 12389 ;;      Totals:         0       3       0       0       0       0       0
 12390 ;;Total ram usage:        3 bytes
 12391 ;; Hardware stack levels used:    1
 12392 ;; Hardware stack levels required when called:    3
 12393 ;; This function calls:
 12394 ;;		Nothing
 12395 ;; This function is called by:
 12396 ;;		_sprintf
 12397 ;; This function uses a non-reentrant model
 12398 ;;
 12399                           
 12400                           	psect	text48
 12401  003BB8                     __ptext48:
 12402                           	opt stack 0
 12403  003BB8                     ___ftneg:
 12404                           	opt stack 24
 12405                           
 12406                           ; BSR set to: 0
 12407                           ;incstack = 0
 12408  003BB8  0100               	movlb	0	; () banked
 12409  003BBA  5171               	movf	___ftneg@f1& (0+255),w,b
 12410  003BBC  0100               	movlb	0	; () banked
 12411  003BBE  1172               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 12412  003BC0  0100               	movlb	0	; () banked
 12413  003BC2  1173               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 12414  003BC4  B4D8               	btfsc	status,2,c
 12415  003BC6  D009               	goto	l883
 12416                           
 12417                           ; BSR set to: 0
 12418  003BC8  0E00               	movlw	0
 12419  003BCA  0100               	movlb	0	; () banked
 12420  003BCC  1B71               	xorwf	___ftneg@f1& (0+255),f,b
 12421  003BCE  0E00               	movlw	0
 12422  003BD0  0100               	movlb	0	; () banked
 12423  003BD2  1B72               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 12424  003BD4  0E80               	movlw	128
 12425  003BD6  0100               	movlb	0	; () banked
 12426  003BD8  1B73               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 12427  003BDA                     l883:
 12428                           
 12429                           ; BSR set to: 0
 12430  003BDA  C071  F071         	movff	___ftneg@f1,?___ftneg
 12431  003BDE  C072  F072         	movff	___ftneg@f1+1,?___ftneg+1
 12432  003BE2  C073  F073         	movff	___ftneg@f1+2,?___ftneg+2
 12433                           
 12434                           ; BSR set to: 0
 12435  003BE6  0012               	return		;funcret
 12436  003BE8                     __end_of___ftneg:
 12437                           	opt stack 0
 12438                           tblptru	equ	0xFF8
 12439                           tblptrh	equ	0xFF7
 12440                           tblptrl	equ	0xFF6
 12441                           tablat	equ	0xFF5
 12442                           prodh	equ	0xFF4
 12443                           prodl	equ	0xFF3
 12444                           indf0	equ	0xFEF
 12445                           postinc0	equ	0xFEE
 12446                           fsr0h	equ	0xFEA
 12447                           fsr0l	equ	0xFE9
 12448                           wreg	equ	0xFE8
 12449                           indf1	equ	0xFE7
 12450                           postdec1	equ	0xFE5
 12451                           fsr1h	equ	0xFE2
 12452                           fsr1l	equ	0xFE1
 12453                           indf2	equ	0xFDF
 12454                           postinc2	equ	0xFDE
 12455                           postdec2	equ	0xFDD
 12456                           fsr2h	equ	0xFDA
 12457                           fsr2l	equ	0xFD9
 12458                           status	equ	0xFD8
 12459                           
 12460 ;; *************** function ___ftge *****************
 12461 ;; Defined at:
 12462 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
 12463 ;; Parameters:    Size  Location     Type
 12464 ;;  ff1             3   17[BANK0 ] float 
 12465 ;;  ff2             3   20[BANK0 ] float 
 12466 ;; Auto vars:     Size  Location     Type
 12467 ;;		None
 12468 ;; Return value:  Size  Location     Type
 12469 ;;		None               void
 12470 ;; Registers used:
 12471 ;;		wreg, status,2, status,0
 12472 ;; Tracked objects:
 12473 ;;		On entry : 0/0
 12474 ;;		On exit  : 0/0
 12475 ;;		Unchanged: 0/0
 12476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12477 ;;      Params:         0       6       0       0       0       0       0
 12478 ;;      Locals:         0       0       0       0       0       0       0
 12479 ;;      Temps:          3       0       0       0       0       0       0
 12480 ;;      Totals:         3       6       0       0       0       0       0
 12481 ;;Total ram usage:        9 bytes
 12482 ;; Hardware stack levels used:    1
 12483 ;; Hardware stack levels required when called:    3
 12484 ;; This function calls:
 12485 ;;		Nothing
 12486 ;; This function is called by:
 12487 ;;		_sprintf
 12488 ;; This function uses a non-reentrant model
 12489 ;;
 12490                           
 12491                           	psect	text49
 12492  003282                     __ptext49:
 12493                           	opt stack 0
 12494  003282                     ___ftge:
 12495                           	opt stack 24
 12496                           
 12497                           ; BSR set to: 0
 12498                           ;incstack = 0
 12499  003282  0100               	movlb	0	; () banked
 12500  003284  AF73               	btfss	(___ftge@ff1+2)& (0+255),7,b
 12501  003286  D019               	goto	l5288
 12502                           
 12503                           ; BSR set to: 0
 12504  003288  C071  F022         	movff	___ftge@ff1,??___ftge
 12505  00328C  C072  F023         	movff	___ftge@ff1+1,??___ftge+1
 12506  003290  C073  F024         	movff	___ftge@ff1+2,??___ftge+2
 12507  003294  1E22               	comf	??___ftge,f,c
 12508  003296  1E23               	comf	??___ftge+1,f,c
 12509  003298  1E24               	comf	??___ftge+2,f,c
 12510  00329A  2A22               	incf	??___ftge,f,c
 12511  00329C  0E00               	movlw	0
 12512  00329E  2223               	addwfc	??___ftge+1,f,c
 12513  0032A0  2224               	addwfc	??___ftge+2,f,c
 12514  0032A2  0E00               	movlw	0
 12515  0032A4  2422               	addwf	??___ftge,w,c
 12516  0032A6  0100               	movlb	0	; () banked
 12517  0032A8  6F71               	movwf	___ftge@ff1& (0+255),b
 12518  0032AA  0E00               	movlw	0
 12519  0032AC  2023               	addwfc	??___ftge+1,w,c
 12520  0032AE  0100               	movlb	0	; () banked
 12521  0032B0  6F72               	movwf	(___ftge@ff1+1)& (0+255),b
 12522  0032B2  0E80               	movlw	128
 12523  0032B4  2024               	addwfc	??___ftge+2,w,c
 12524  0032B6  0100               	movlb	0	; () banked
 12525  0032B8  6F73               	movwf	(___ftge@ff1+2)& (0+255),b
 12526  0032BA                     l5288:
 12527                           
 12528                           ; BSR set to: 0
 12529  0032BA  0100               	movlb	0	; () banked
 12530  0032BC  AF76               	btfss	(___ftge@ff2+2)& (0+255),7,b
 12531  0032BE  D019               	goto	l5292
 12532                           
 12533                           ; BSR set to: 0
 12534  0032C0  C074  F022         	movff	___ftge@ff2,??___ftge
 12535  0032C4  C075  F023         	movff	___ftge@ff2+1,??___ftge+1
 12536  0032C8  C076  F024         	movff	___ftge@ff2+2,??___ftge+2
 12537  0032CC  1E22               	comf	??___ftge,f,c
 12538  0032CE  1E23               	comf	??___ftge+1,f,c
 12539  0032D0  1E24               	comf	??___ftge+2,f,c
 12540  0032D2  2A22               	incf	??___ftge,f,c
 12541  0032D4  0E00               	movlw	0
 12542  0032D6  2223               	addwfc	??___ftge+1,f,c
 12543  0032D8  2224               	addwfc	??___ftge+2,f,c
 12544  0032DA  0E00               	movlw	0
 12545  0032DC  2422               	addwf	??___ftge,w,c
 12546  0032DE  0100               	movlb	0	; () banked
 12547  0032E0  6F74               	movwf	___ftge@ff2& (0+255),b
 12548  0032E2  0E00               	movlw	0
 12549  0032E4  2023               	addwfc	??___ftge+1,w,c
 12550  0032E6  0100               	movlb	0	; () banked
 12551  0032E8  6F75               	movwf	(___ftge@ff2+1)& (0+255),b
 12552  0032EA  0E80               	movlw	128
 12553  0032EC  2024               	addwfc	??___ftge+2,w,c
 12554  0032EE  0100               	movlb	0	; () banked
 12555  0032F0  6F76               	movwf	(___ftge@ff2+2)& (0+255),b
 12556  0032F2                     l5292:
 12557                           
 12558                           ; BSR set to: 0
 12559  0032F2  0E00               	movlw	0
 12560  0032F4  0100               	movlb	0	; () banked
 12561  0032F6  1B71               	xorwf	___ftge@ff1& (0+255),f,b
 12562  0032F8  0E00               	movlw	0
 12563  0032FA  0100               	movlb	0	; () banked
 12564  0032FC  1B72               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 12565  0032FE  0E80               	movlw	128
 12566  003300  0100               	movlb	0	; () banked
 12567  003302  1B73               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 12568                           
 12569                           ; BSR set to: 0
 12570  003304  0E00               	movlw	0
 12571  003306  0100               	movlb	0	; () banked
 12572  003308  1B74               	xorwf	___ftge@ff2& (0+255),f,b
 12573  00330A  0E00               	movlw	0
 12574  00330C  0100               	movlb	0	; () banked
 12575  00330E  1B75               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 12576  003310  0E80               	movlw	128
 12577  003312  0100               	movlb	0	; () banked
 12578  003314  1B76               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 12579  003316  0100               	movlb	0	; () banked
 12580  003318  5174               	movf	___ftge@ff2& (0+255),w,b
 12581  00331A  0100               	movlb	0	; () banked
 12582  00331C  5D71               	subwf	___ftge@ff1& (0+255),w,b
 12583  00331E  0100               	movlb	0	; () banked
 12584  003320  5175               	movf	(___ftge@ff2+1)& (0+255),w,b
 12585  003322  0100               	movlb	0	; () banked
 12586  003324  5972               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 12587  003326  0100               	movlb	0	; () banked
 12588  003328  5176               	movf	(___ftge@ff2+2)& (0+255),w,b
 12589  00332A  0100               	movlb	0	; () banked
 12590  00332C  5973               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 12591  00332E  B0D8               	btfsc	status,0,c
 12592  003330  D002               	goto	l5298
 12593                           
 12594                           ; BSR set to: 0
 12595  003332  90D8               	bcf	status,0,c
 12596  003334  0012               	return	
 12597  003336                     l5298:
 12598                           
 12599                           ; BSR set to: 0
 12600  003336  80D8               	bsf	status,0,c
 12601                           
 12602                           ; BSR set to: 0
 12603  003338  0012               	return	
 12604  00333A                     __end_of___ftge:
 12605                           	opt stack 0
 12606                           tblptru	equ	0xFF8
 12607                           tblptrh	equ	0xFF7
 12608                           tblptrl	equ	0xFF6
 12609                           tablat	equ	0xFF5
 12610                           prodh	equ	0xFF4
 12611                           prodl	equ	0xFF3
 12612                           indf0	equ	0xFEF
 12613                           postinc0	equ	0xFEE
 12614                           fsr0h	equ	0xFEA
 12615                           fsr0l	equ	0xFE9
 12616                           wreg	equ	0xFE8
 12617                           indf1	equ	0xFE7
 12618                           postdec1	equ	0xFE5
 12619                           fsr1h	equ	0xFE2
 12620                           fsr1l	equ	0xFE1
 12621                           indf2	equ	0xFDF
 12622                           postinc2	equ	0xFDE
 12623                           postdec2	equ	0xFDD
 12624                           fsr2h	equ	0xFDA
 12625                           fsr2l	equ	0xFD9
 12626                           status	equ	0xFD8
 12627                           
 12628 ;; *************** function _memset *****************
 12629 ;; Defined at:
 12630 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memset.c"
 12631 ;; Parameters:    Size  Location     Type
 12632 ;;  p1              2   17[BANK0 ] PTR void 
 12633 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), util_beacon_transmission@BEACON_MESSAGE(128), 
 12634 ;;  c               2   19[BANK0 ] int 
 12635 ;;  n               2   21[BANK0 ] unsigned int 
 12636 ;; Auto vars:     Size  Location     Type
 12637 ;;  p               2   33[COMRAM] PTR unsigned char 
 12638 ;;		 -> util_beacon_transmission@BEACON_BUFFER(64), util_beacon_transmission@BEACON_MESSAGE(128), 
 12639 ;; Return value:  Size  Location     Type
 12640 ;;                  2   17[BANK0 ] PTR void 
 12641 ;; Registers used:
 12642 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12643 ;; Tracked objects:
 12644 ;;		On entry : 0/0
 12645 ;;		On exit  : 0/0
 12646 ;;		Unchanged: 0/0
 12647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12648 ;;      Params:         0       6       0       0       0       0       0
 12649 ;;      Locals:         2       0       0       0       0       0       0
 12650 ;;      Temps:          0       0       0       0       0       0       0
 12651 ;;      Totals:         2       6       0       0       0       0       0
 12652 ;;Total ram usage:        8 bytes
 12653 ;; Hardware stack levels used:    1
 12654 ;; Hardware stack levels required when called:    3
 12655 ;; This function calls:
 12656 ;;		Nothing
 12657 ;; This function is called by:
 12658 ;;		_util_beacon_transmission
 12659 ;; This function uses a non-reentrant model
 12660 ;;
 12661                           
 12662                           	psect	text50
 12663  003B26                     __ptext50:
 12664                           	opt stack 0
 12665  003B26                     _memset:
 12666                           	opt stack 25
 12667                           
 12668                           ; BSR set to: 0
 12669                           ;incstack = 0
 12670  003B26  C071  F022         	movff	memset@p1,memset@p
 12671  003B2A  C072  F023         	movff	memset@p1+1,memset@p+1
 12672  003B2E  D008               	goto	l5448
 12673  003B30                     l5444:
 12674  003B30  C022  FFD9         	movff	memset@p,fsr2l
 12675  003B34  C023  FFDA         	movff	memset@p+1,fsr2h
 12676  003B38  C073  FFDF         	movff	memset@c,indf2
 12677  003B3C  4A22               	infsnz	memset@p,f,c
 12678  003B3E  2A23               	incf	memset@p+1,f,c
 12679  003B40                     l5448:
 12680  003B40  0100               	movlb	0	; () banked
 12681  003B42  0775               	decf	memset@n& (0+255),f,b
 12682  003B44  A0D8               	btfss	status,0,c
 12683  003B46  0776               	decf	(memset@n+1)& (0+255),f,b
 12684  003B48  0100               	movlb	0	; () banked
 12685  003B4A  2975               	incf	memset@n& (0+255),w,b
 12686  003B4C  E1F1               	bnz	l5444
 12687  003B4E  0100               	movlb	0	; () banked
 12688  003B50  2976               	incf	(memset@n+1)& (0+255),w,b
 12689  003B52  B4D8               	btfsc	status,2,c
 12690  003B54  0012               	return	
 12691  003B56  D7EC               	goto	l5444
 12692  003B58                     __end_of_memset:
 12693                           	opt stack 0
 12694                           tblptru	equ	0xFF8
 12695                           tblptrh	equ	0xFF7
 12696                           tblptrl	equ	0xFF6
 12697                           tablat	equ	0xFF5
 12698                           prodh	equ	0xFF4
 12699                           prodl	equ	0xFF3
 12700                           indf0	equ	0xFEF
 12701                           postinc0	equ	0xFEE
 12702                           fsr0h	equ	0xFEA
 12703                           fsr0l	equ	0xFE9
 12704                           wreg	equ	0xFE8
 12705                           indf1	equ	0xFE7
 12706                           postdec1	equ	0xFE5
 12707                           fsr1h	equ	0xFE2
 12708                           fsr1l	equ	0xFE1
 12709                           indf2	equ	0xFDF
 12710                           postinc2	equ	0xFDE
 12711                           postdec2	equ	0xFDD
 12712                           fsr2h	equ	0xFDA
 12713                           fsr2l	equ	0xFD9
 12714                           status	equ	0xFD8
 12715                           
 12716 ;; *************** function _init_initialize *****************
 12717 ;; Defined at:
 12718 ;;		line 17 in file "easat2_init_initialize.c"
 12719 ;; Parameters:    Size  Location     Type
 12720 ;;		None
 12721 ;; Auto vars:     Size  Location     Type
 12722 ;;		None
 12723 ;; Return value:  Size  Location     Type
 12724 ;;                  1    wreg      void 
 12725 ;; Registers used:
 12726 ;;		wreg, status,2, cstack
 12727 ;; Tracked objects:
 12728 ;;		On entry : 0/0
 12729 ;;		On exit  : 0/0
 12730 ;;		Unchanged: 0/0
 12731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12732 ;;      Params:         0       0       0       0       0       0       0
 12733 ;;      Locals:         0       0       0       0       0       0       0
 12734 ;;      Temps:          0       0       0       0       0       0       0
 12735 ;;      Totals:         0       0       0       0       0       0       0
 12736 ;;Total ram usage:        0 bytes
 12737 ;; Hardware stack levels used:    1
 12738 ;; Hardware stack levels required when called:    4
 12739 ;; This function calls:
 12740 ;;		_init_io_initialize
 12741 ;;		_util_timer1_initialize
 12742 ;; This function is called by:
 12743 ;;		_main
 12744 ;; This function uses a non-reentrant model
 12745 ;;
 12746                           
 12747                           	psect	text51
 12748  003CB4                     __ptext51:
 12749                           	opt stack 0
 12750  003CB4                     _init_initialize:
 12751                           	opt stack 26
 12752                           
 12753                           ;easat2_init_initialize.c: 19: init_io_initialize();
 12754                           
 12755                           ; BSR set to: 0
 12756                           ;incstack = 0
 12757  003CB4  ECE3  F018         	call	_init_io_initialize	;wreg free
 12758                           
 12759                           ;easat2_init_initialize.c: 20: util_timer1_initialize();
 12760  003CB8  EC09  F01E         	call	_util_timer1_initialize	;wreg free
 12761  003CBC  0012               	return		;funcret
 12762  003CBE                     __end_of_init_initialize:
 12763                           	opt stack 0
 12764                           tblptru	equ	0xFF8
 12765                           tblptrh	equ	0xFF7
 12766                           tblptrl	equ	0xFF6
 12767                           tablat	equ	0xFF5
 12768                           prodh	equ	0xFF4
 12769                           prodl	equ	0xFF3
 12770                           indf0	equ	0xFEF
 12771                           postinc0	equ	0xFEE
 12772                           fsr0h	equ	0xFEA
 12773                           fsr0l	equ	0xFE9
 12774                           wreg	equ	0xFE8
 12775                           indf1	equ	0xFE7
 12776                           postdec1	equ	0xFE5
 12777                           fsr1h	equ	0xFE2
 12778                           fsr1l	equ	0xFE1
 12779                           indf2	equ	0xFDF
 12780                           postinc2	equ	0xFDE
 12781                           postdec2	equ	0xFDD
 12782                           fsr2h	equ	0xFDA
 12783                           fsr2l	equ	0xFD9
 12784                           status	equ	0xFD8
 12785                           
 12786 ;; *************** function _util_timer1_initialize *****************
 12787 ;; Defined at:
 12788 ;;		line 19 in file "easat2_util_timer.c"
 12789 ;; Parameters:    Size  Location     Type
 12790 ;;		None
 12791 ;; Auto vars:     Size  Location     Type
 12792 ;;		None
 12793 ;; Return value:  Size  Location     Type
 12794 ;;                  1    wreg      void 
 12795 ;; Registers used:
 12796 ;;		wreg, status,2
 12797 ;; Tracked objects:
 12798 ;;		On entry : 0/0
 12799 ;;		On exit  : 0/0
 12800 ;;		Unchanged: 0/0
 12801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12802 ;;      Params:         0       0       0       0       0       0       0
 12803 ;;      Locals:         0       0       0       0       0       0       0
 12804 ;;      Temps:          0       0       0       0       0       0       0
 12805 ;;      Totals:         0       0       0       0       0       0       0
 12806 ;;Total ram usage:        0 bytes
 12807 ;; Hardware stack levels used:    1
 12808 ;; Hardware stack levels required when called:    3
 12809 ;; This function calls:
 12810 ;;		Nothing
 12811 ;; This function is called by:
 12812 ;;		_init_initialize
 12813 ;; This function uses a non-reentrant model
 12814 ;;
 12815                           
 12816                           	psect	text52
 12817  003C12                     __ptext52:
 12818                           	opt stack 0
 12819  003C12                     _util_timer1_initialize:
 12820                           	opt stack 26
 12821                           
 12822                           ;easat2_util_timer.c: 32: RCONbits.IPEN = 1;
 12823                           
 12824                           ;incstack = 0
 12825  003C12  8ED0               	bsf	4048,7,c	;volatile
 12826                           
 12827                           ;easat2_util_timer.c: 36: T1CONbits.TMR1ON = 0;
 12828  003C14  90CD               	bcf	4045,0,c	;volatile
 12829                           
 12830                           ;easat2_util_timer.c: 39: T1CONbits.TMR1CS0 = 0;
 12831  003C16  9CCD               	bcf	4045,6,c	;volatile
 12832                           
 12833                           ;easat2_util_timer.c: 40: T1CONbits.TMR1CS1 = 0;
 12834  003C18  9ECD               	bcf	4045,7,c	;volatile
 12835                           
 12836                           ;easat2_util_timer.c: 43: T1CONbits.T1CKPS1 = 0;
 12837  003C1A  9ACD               	bcf	4045,5,c	;volatile
 12838                           
 12839                           ;easat2_util_timer.c: 44: T1CONbits.T1CKPS0 = 0;
 12840  003C1C  98CD               	bcf	4045,4,c	;volatile
 12841                           
 12842                           ;easat2_util_timer.c: 47: T1CONbits.T1OSCEN = 0;
 12843  003C1E  96CD               	bcf	4045,3,c	;volatile
 12844                           
 12845                           ;easat2_util_timer.c: 50: T1CONbits.RD16 = 1;
 12846  003C20  82CD               	bsf	4045,1,c	;volatile
 12847                           
 12848                           ;easat2_util_timer.c: 53: TMR1H = 0xEC;
 12849  003C22  0EEC               	movlw	236
 12850  003C24  6ECF               	movwf	4047,c	;volatile
 12851                           
 12852                           ;easat2_util_timer.c: 54: TMR1L = 0x77 ; 60535;
 12853  003C26  0E77               	movlw	119
 12854  003C28  6ECE               	movwf	4046,c	;volatile
 12855                           
 12856                           ;easat2_util_timer.c: 57: PIE1bits.TMR1IE = 1;
 12857  003C2A  809D               	bsf	3997,0,c	;volatile
 12858                           
 12859                           ;easat2_util_timer.c: 58: IPR1bits.TMR1IP = 1;
 12860  003C2C  809F               	bsf	3999,0,c	;volatile
 12861                           
 12862                           ;easat2_util_timer.c: 59: PIR1bits.TMR1IF = 0;
 12863  003C2E  909E               	bcf	3998,0,c	;volatile
 12864                           
 12865                           ;easat2_util_timer.c: 61: T1CONbits.TMR1ON = 1;
 12866  003C30  80CD               	bsf	4045,0,c	;volatile
 12867                           
 12868                           ;easat2_util_timer.c: 63: INTCONbits.PEIE = 0;
 12869  003C32  9CF2               	bcf	intcon,6,c	;volatile
 12870                           
 12871                           ;easat2_util_timer.c: 64: INTCONbits.GIE = 1;
 12872  003C34  8EF2               	bsf	intcon,7,c	;volatile
 12873  003C36  0012               	return		;funcret
 12874  003C38                     __end_of_util_timer1_initialize:
 12875                           	opt stack 0
 12876                           tblptru	equ	0xFF8
 12877                           tblptrh	equ	0xFF7
 12878                           tblptrl	equ	0xFF6
 12879                           tablat	equ	0xFF5
 12880                           prodh	equ	0xFF4
 12881                           prodl	equ	0xFF3
 12882                           intcon	equ	0xFF2
 12883                           indf0	equ	0xFEF
 12884                           postinc0	equ	0xFEE
 12885                           fsr0h	equ	0xFEA
 12886                           fsr0l	equ	0xFE9
 12887                           wreg	equ	0xFE8
 12888                           indf1	equ	0xFE7
 12889                           postdec1	equ	0xFE5
 12890                           fsr1h	equ	0xFE2
 12891                           fsr1l	equ	0xFE1
 12892                           indf2	equ	0xFDF
 12893                           postinc2	equ	0xFDE
 12894                           postdec2	equ	0xFDD
 12895                           fsr2h	equ	0xFDA
 12896                           fsr2l	equ	0xFD9
 12897                           status	equ	0xFD8
 12898                           
 12899 ;; *************** function _init_io_initialize *****************
 12900 ;; Defined at:
 12901 ;;		line 27 in file "easat2_init_initialize.c"
 12902 ;; Parameters:    Size  Location     Type
 12903 ;;		None
 12904 ;; Auto vars:     Size  Location     Type
 12905 ;;		None
 12906 ;; Return value:  Size  Location     Type
 12907 ;;                  1    wreg      void 
 12908 ;; Registers used:
 12909 ;;		wreg, status,2
 12910 ;; Tracked objects:
 12911 ;;		On entry : 0/0
 12912 ;;		On exit  : 0/0
 12913 ;;		Unchanged: 0/0
 12914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12915 ;;      Params:         0       0       0       0       0       0       0
 12916 ;;      Locals:         0       0       0       0       0       0       0
 12917 ;;      Temps:          0       0       0       0       0       0       0
 12918 ;;      Totals:         0       0       0       0       0       0       0
 12919 ;;Total ram usage:        0 bytes
 12920 ;; Hardware stack levels used:    1
 12921 ;; Hardware stack levels required when called:    3
 12922 ;; This function calls:
 12923 ;;		Nothing
 12924 ;; This function is called by:
 12925 ;;		_init_initialize
 12926 ;; This function uses a non-reentrant model
 12927 ;;
 12928                           
 12929                           	psect	text53
 12930  0031C6                     __ptext53:
 12931                           	opt stack 0
 12932  0031C6                     _init_io_initialize:
 12933                           	opt stack 26
 12934                           
 12935                           ;easat2_init_initialize.c: 36: VREFCON0bits.FVREN = 1;
 12936                           
 12937                           ;incstack = 0
 12938  0031C6  010F               	movlb	15	; () banked
 12939  0031C8  8F42               	bsf	66,7,b	;volatile
 12940                           
 12941                           ;easat2_init_initialize.c: 37: VREFCON0bits.FVRS0 = 0;
 12942  0031CA  010F               	movlb	15	; () banked
 12943  0031CC  9942               	bcf	66,4,b	;volatile
 12944                           
 12945                           ;easat2_init_initialize.c: 38: VREFCON0bits.FVRS1 = 1;
 12946  0031CE  010F               	movlb	15	; () banked
 12947  0031D0  8B42               	bsf	66,5,b	;volatile
 12948                           
 12949                           ;easat2_init_initialize.c: 40: VREFCON0bits.FVRST = 1;
 12950  0031D2  010F               	movlb	15	; () banked
 12951  0031D4  8D42               	bsf	66,6,b	;volatile
 12952                           
 12953                           ; BSR set to: 15
 12954                           ;easat2_init_initialize.c: 45: ADCON1 = 0x08;
 12955  0031D6  0E08               	movlw	8
 12956  0031D8  6EC1               	movwf	4033,c	;volatile
 12957                           
 12958                           ;easat2_init_initialize.c: 46: ADCON2 = 0xAF;
 12959  0031DA  0EAF               	movlw	175
 12960  0031DC  6EC0               	movwf	4032,c	;volatile
 12961                           
 12962                           ; BSR set to: 15
 12963                           ;easat2_init_initialize.c: 50: TRISAbits.TRISA0 = 1;
 12964  0031DE  8092               	bsf	3986,0,c	;volatile
 12965                           
 12966                           ; BSR set to: 15
 12967                           ;easat2_init_initialize.c: 51: TRISAbits.TRISA1 = 1;
 12968  0031E0  8292               	bsf	3986,1,c	;volatile
 12969                           
 12970                           ; BSR set to: 15
 12971                           ;easat2_init_initialize.c: 52: TRISAbits.TRISA2 = 0;
 12972  0031E2  9492               	bcf	3986,2,c	;volatile
 12973                           
 12974                           ; BSR set to: 15
 12975                           ;easat2_init_initialize.c: 53: TRISAbits.TRISA3 = 1;
 12976  0031E4  8692               	bsf	3986,3,c	;volatile
 12977                           
 12978                           ; BSR set to: 15
 12979                           ;easat2_init_initialize.c: 54: TRISAbits.TRISA4 = 1;
 12980  0031E6  8892               	bsf	3986,4,c	;volatile
 12981                           
 12982                           ; BSR set to: 15
 12983                           ;easat2_init_initialize.c: 55: TRISAbits.TRISA5 = 1;
 12984  0031E8  8A92               	bsf	3986,5,c	;volatile
 12985                           
 12986                           ; BSR set to: 15
 12987                           ;easat2_init_initialize.c: 62: ANSELAbits.ANSA0 = 1;
 12988  0031EA  010F               	movlb	15	; () banked
 12989  0031EC  8138               	bsf	56,0,b	;volatile
 12990                           
 12991                           ; BSR set to: 15
 12992                           ;easat2_init_initialize.c: 63: ANSELAbits.ANSA1 = 1;
 12993  0031EE  010F               	movlb	15	; () banked
 12994  0031F0  8338               	bsf	56,1,b	;volatile
 12995                           
 12996                           ; BSR set to: 15
 12997                           ;easat2_init_initialize.c: 64: ANSELAbits.ANSA2 = 1;
 12998  0031F2  010F               	movlb	15	; () banked
 12999  0031F4  8538               	bsf	56,2,b	;volatile
 13000                           
 13001                           ; BSR set to: 15
 13002                           ;easat2_init_initialize.c: 65: ANSELAbits.ANSA3 = 0;
 13003  0031F6  010F               	movlb	15	; () banked
 13004  0031F8  9738               	bcf	56,3,b	;volatile
 13005                           
 13006                           ; BSR set to: 15
 13007                           ;easat2_init_initialize.c: 67: ANSELAbits.ANSA5 = 1;
 13008  0031FA  010F               	movlb	15	; () banked
 13009  0031FC  8B38               	bsf	56,5,b	;volatile
 13010                           
 13011                           ; BSR set to: 15
 13012                           ;easat2_init_initialize.c: 71: LATAbits.LATA0 = 0;
 13013  0031FE  9089               	bcf	3977,0,c	;volatile
 13014                           
 13015                           ; BSR set to: 15
 13016                           ;easat2_init_initialize.c: 72: LATAbits.LATA1 = 0;
 13017  003200  9289               	bcf	3977,1,c	;volatile
 13018                           
 13019                           ; BSR set to: 15
 13020                           ;easat2_init_initialize.c: 73: LATAbits.LATA2 = 0;
 13021  003202  9489               	bcf	3977,2,c	;volatile
 13022                           
 13023                           ; BSR set to: 15
 13024                           ;easat2_init_initialize.c: 74: LATAbits.LATA3 = 0;
 13025  003204  9689               	bcf	3977,3,c	;volatile
 13026                           
 13027                           ; BSR set to: 15
 13028                           ;easat2_init_initialize.c: 75: LATAbits.LATA4 = 0;
 13029  003206  9889               	bcf	3977,4,c	;volatile
 13030                           
 13031                           ; BSR set to: 15
 13032                           ;easat2_init_initialize.c: 76: LATAbits.LATA5 = 0;
 13033  003208  9A89               	bcf	3977,5,c	;volatile
 13034                           
 13035                           ;easat2_init_initialize.c: 84: WPUB = 0b00000000;
 13036  00320A  0E00               	movlw	0
 13037  00320C  6E61               	movwf	3937,c	;volatile
 13038                           
 13039                           ; BSR set to: 15
 13040                           ;easat2_init_initialize.c: 85: RBPU = 0b11111111;
 13041  00320E  8EF1               	bsf	intcon2,7,c	;volatile
 13042                           
 13043                           ; BSR set to: 15
 13044                           ;easat2_init_initialize.c: 89: TRISBbits.TRISB0 = 1;
 13045  003210  8093               	bsf	3987,0,c	;volatile
 13046                           
 13047                           ; BSR set to: 15
 13048                           ;easat2_init_initialize.c: 90: TRISBbits.TRISB1 = 0;
 13049  003212  9293               	bcf	3987,1,c	;volatile
 13050                           
 13051                           ; BSR set to: 15
 13052                           ;easat2_init_initialize.c: 91: TRISBbits.TRISB2 = 0;
 13053  003214  9493               	bcf	3987,2,c	;volatile
 13054                           
 13055                           ; BSR set to: 15
 13056                           ;easat2_init_initialize.c: 92: TRISBbits.TRISB3 = 0;
 13057  003216  9693               	bcf	3987,3,c	;volatile
 13058                           
 13059                           ; BSR set to: 15
 13060                           ;easat2_init_initialize.c: 93: TRISBbits.TRISB4 = 0;
 13061  003218  9893               	bcf	3987,4,c	;volatile
 13062                           
 13063                           ; BSR set to: 15
 13064                           ;easat2_init_initialize.c: 94: TRISBbits.TRISB5 = 0;
 13065  00321A  9A93               	bcf	3987,5,c	;volatile
 13066                           
 13067                           ; BSR set to: 15
 13068                           ;easat2_init_initialize.c: 95: TRISBbits.TRISB6 = 0;
 13069  00321C  9C93               	bcf	3987,6,c	;volatile
 13070                           
 13071                           ; BSR set to: 15
 13072                           ;easat2_init_initialize.c: 96: TRISBbits.TRISB7 = 0;
 13073  00321E  9E93               	bcf	3987,7,c	;volatile
 13074                           
 13075                           ; BSR set to: 15
 13076                           ;easat2_init_initialize.c: 100: ANSELBbits.ANSB0 = 1;
 13077  003220  010F               	movlb	15	; () banked
 13078  003222  8139               	bsf	57,0,b	;volatile
 13079                           
 13080                           ; BSR set to: 15
 13081                           ;easat2_init_initialize.c: 101: ANSELBbits.ANSB1 = 0;
 13082  003224  010F               	movlb	15	; () banked
 13083  003226  9339               	bcf	57,1,b	;volatile
 13084                           
 13085                           ; BSR set to: 15
 13086                           ;easat2_init_initialize.c: 102: ANSELBbits.ANSB2 = 0;
 13087  003228  010F               	movlb	15	; () banked
 13088  00322A  9539               	bcf	57,2,b	;volatile
 13089                           
 13090                           ; BSR set to: 15
 13091                           ;easat2_init_initialize.c: 103: ANSELBbits.ANSB3 = 0;
 13092  00322C  010F               	movlb	15	; () banked
 13093  00322E  9739               	bcf	57,3,b	;volatile
 13094                           
 13095                           ; BSR set to: 15
 13096                           ;easat2_init_initialize.c: 105: ANSELBbits.ANSB5 = 0;
 13097  003230  010F               	movlb	15	; () banked
 13098  003232  9B39               	bcf	57,5,b	;volatile
 13099                           
 13100                           ; BSR set to: 15
 13101                           ;easat2_init_initialize.c: 109: LATBbits.LATB0 = 0;
 13102  003234  908A               	bcf	3978,0,c	;volatile
 13103                           
 13104                           ; BSR set to: 15
 13105                           ;easat2_init_initialize.c: 110: LATBbits.LATB1 = 0;
 13106  003236  928A               	bcf	3978,1,c	;volatile
 13107                           
 13108                           ; BSR set to: 15
 13109                           ;easat2_init_initialize.c: 111: LATBbits.LATB2 = 0;
 13110  003238  948A               	bcf	3978,2,c	;volatile
 13111                           
 13112                           ; BSR set to: 15
 13113                           ;easat2_init_initialize.c: 112: LATBbits.LATB3 = 0;
 13114  00323A  968A               	bcf	3978,3,c	;volatile
 13115                           
 13116                           ; BSR set to: 15
 13117                           ;easat2_init_initialize.c: 113: LATBbits.LATB4 = 0;
 13118  00323C  988A               	bcf	3978,4,c	;volatile
 13119                           
 13120                           ; BSR set to: 15
 13121                           ;easat2_init_initialize.c: 114: LATBbits.LATB5 = 0;
 13122  00323E  9A8A               	bcf	3978,5,c	;volatile
 13123                           
 13124                           ; BSR set to: 15
 13125                           ;easat2_init_initialize.c: 118: TRISDbits.TRISD0 = 0;
 13126  003240  9095               	bcf	3989,0,c	;volatile
 13127                           
 13128                           ; BSR set to: 15
 13129                           ;easat2_init_initialize.c: 119: TRISDbits.TRISD1 = 0;
 13130  003242  9295               	bcf	3989,1,c	;volatile
 13131                           
 13132                           ; BSR set to: 15
 13133                           ;easat2_init_initialize.c: 120: TRISDbits.TRISD2 = 0;
 13134  003244  9495               	bcf	3989,2,c	;volatile
 13135                           
 13136                           ; BSR set to: 15
 13137                           ;easat2_init_initialize.c: 121: TRISDbits.TRISD3 = 0;
 13138  003246  9695               	bcf	3989,3,c	;volatile
 13139                           
 13140                           ; BSR set to: 15
 13141                           ;easat2_init_initialize.c: 122: TRISDbits.TRISD4 = 0;
 13142  003248  9895               	bcf	3989,4,c	;volatile
 13143                           
 13144                           ; BSR set to: 15
 13145                           ;easat2_init_initialize.c: 123: TRISDbits.TRISD5 = 0;
 13146  00324A  9A95               	bcf	3989,5,c	;volatile
 13147                           
 13148                           ; BSR set to: 15
 13149                           ;easat2_init_initialize.c: 124: TRISDbits.TRISD6 = 0;
 13150  00324C  9C95               	bcf	3989,6,c	;volatile
 13151                           
 13152                           ; BSR set to: 15
 13153                           ;easat2_init_initialize.c: 125: TRISDbits.TRISD7 = 0;
 13154  00324E  9E95               	bcf	3989,7,c	;volatile
 13155                           
 13156                           ; BSR set to: 15
 13157                           ;easat2_init_initialize.c: 129: ANSELDbits.ANSD0 = 0;
 13158  003250  010F               	movlb	15	; () banked
 13159  003252  913B               	bcf	59,0,b	;volatile
 13160                           
 13161                           ; BSR set to: 15
 13162                           ;easat2_init_initialize.c: 130: ANSELDbits.ANSD1 = 0;
 13163  003254  010F               	movlb	15	; () banked
 13164  003256  933B               	bcf	59,1,b	;volatile
 13165                           
 13166                           ; BSR set to: 15
 13167                           ;easat2_init_initialize.c: 131: ANSELDbits.ANSD2 = 0;
 13168  003258  010F               	movlb	15	; () banked
 13169  00325A  953B               	bcf	59,2,b	;volatile
 13170                           
 13171                           ; BSR set to: 15
 13172                           ;easat2_init_initialize.c: 132: ANSELDbits.ANSD3 = 0;
 13173  00325C  010F               	movlb	15	; () banked
 13174  00325E  973B               	bcf	59,3,b	;volatile
 13175                           
 13176                           ; BSR set to: 15
 13177                           ;easat2_init_initialize.c: 133: ANSELDbits.ANSD4 = 0;
 13178  003260  010F               	movlb	15	; () banked
 13179  003262  993B               	bcf	59,4,b	;volatile
 13180                           
 13181                           ; BSR set to: 15
 13182                           ;easat2_init_initialize.c: 134: ANSELDbits.ANSD5 = 0;
 13183  003264  010F               	movlb	15	; () banked
 13184  003266  9B3B               	bcf	59,5,b	;volatile
 13185                           
 13186                           ; BSR set to: 15
 13187                           ;easat2_init_initialize.c: 135: ANSELDbits.ANSD6 = 0;
 13188  003268  010F               	movlb	15	; () banked
 13189  00326A  9D3B               	bcf	59,6,b	;volatile
 13190                           
 13191                           ; BSR set to: 15
 13192                           ;easat2_init_initialize.c: 136: ANSELDbits.ANSD7 = 0;
 13193  00326C  010F               	movlb	15	; () banked
 13194  00326E  9F3B               	bcf	59,7,b	;volatile
 13195                           
 13196                           ; BSR set to: 15
 13197                           ;easat2_init_initialize.c: 140: LATDbits.LATD0 = 0;
 13198  003270  908C               	bcf	3980,0,c	;volatile
 13199                           
 13200                           ; BSR set to: 15
 13201                           ;easat2_init_initialize.c: 141: LATDbits.LATD1 = 0;
 13202  003272  928C               	bcf	3980,1,c	;volatile
 13203                           
 13204                           ; BSR set to: 15
 13205                           ;easat2_init_initialize.c: 142: LATDbits.LATD2 = 0;
 13206  003274  948C               	bcf	3980,2,c	;volatile
 13207                           
 13208                           ; BSR set to: 15
 13209                           ;easat2_init_initialize.c: 143: LATDbits.LATD3 = 0;
 13210  003276  968C               	bcf	3980,3,c	;volatile
 13211                           
 13212                           ; BSR set to: 15
 13213                           ;easat2_init_initialize.c: 144: LATDbits.LATD4 = 0;
 13214  003278  988C               	bcf	3980,4,c	;volatile
 13215                           
 13216                           ; BSR set to: 15
 13217                           ;easat2_init_initialize.c: 145: LATDbits.LATD5 = 0;
 13218  00327A  9A8C               	bcf	3980,5,c	;volatile
 13219                           
 13220                           ; BSR set to: 15
 13221                           ;easat2_init_initialize.c: 146: LATDbits.LATD6 = 0;
 13222  00327C  9C8C               	bcf	3980,6,c	;volatile
 13223                           
 13224                           ; BSR set to: 15
 13225                           ;easat2_init_initialize.c: 147: LATDbits.LATD7 = 0;
 13226  00327E  9E8C               	bcf	3980,7,c	;volatile
 13227                           
 13228                           ; BSR set to: 15
 13229  003280  0012               	return		;funcret
 13230  003282                     __end_of_init_io_initialize:
 13231                           	opt stack 0
 13232                           tblptru	equ	0xFF8
 13233                           tblptrh	equ	0xFF7
 13234                           tblptrl	equ	0xFF6
 13235                           tablat	equ	0xFF5
 13236                           prodh	equ	0xFF4
 13237                           prodl	equ	0xFF3
 13238                           intcon	equ	0xFF2
 13239                           intcon2	equ	0xFF1
 13240                           indf0	equ	0xFEF
 13241                           postinc0	equ	0xFEE
 13242                           fsr0h	equ	0xFEA
 13243                           fsr0l	equ	0xFE9
 13244                           wreg	equ	0xFE8
 13245                           indf1	equ	0xFE7
 13246                           postdec1	equ	0xFE5
 13247                           fsr1h	equ	0xFE2
 13248                           fsr1l	equ	0xFE1
 13249                           indf2	equ	0xFDF
 13250                           postinc2	equ	0xFDE
 13251                           postdec2	equ	0xFDD
 13252                           fsr2h	equ	0xFDA
 13253                           fsr2l	equ	0xFD9
 13254                           status	equ	0xFD8
 13255                           
 13256 ;; *************** function _low_priority_int *****************
 13257 ;; Defined at:
 13258 ;;		line 223 in file "easat2_util_timer.c"
 13259 ;; Parameters:    Size  Location     Type
 13260 ;;		None
 13261 ;; Auto vars:     Size  Location     Type
 13262 ;;		None
 13263 ;; Return value:  Size  Location     Type
 13264 ;;                  1    wreg      void 
 13265 ;; Registers used:
 13266 ;;		None
 13267 ;; Tracked objects:
 13268 ;;		On entry : 0/0
 13269 ;;		On exit  : 0/0
 13270 ;;		Unchanged: 0/0
 13271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13272 ;;      Params:         0       0       0       0       0       0       0
 13273 ;;      Locals:         0       0       0       0       0       0       0
 13274 ;;      Temps:          0      17       0       0       0       0       0
 13275 ;;      Totals:         0      17       0       0       0       0       0
 13276 ;;Total ram usage:       17 bytes
 13277 ;; Hardware stack levels used:    1
 13278 ;; Hardware stack levels required when called:    2
 13279 ;; This function calls:
 13280 ;;		Nothing
 13281 ;; This function is called by:
 13282 ;;		Interrupt level 1
 13283 ;; This function uses a non-reentrant model
 13284 ;;
 13285                           
 13286                           	psect	intcodelo
 13287  000018                     __pintcodelo:
 13288                           	opt stack 0
 13289  000018                     _low_priority_int:
 13290                           	opt stack 21
 13291                           
 13292                           ; BSR set to: 15
 13293                           ;incstack = 0
 13294  000018  803E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 13295  00001A  CFD8 F060          	movff	status,??_low_priority_int
 13296  00001E  CFE8 F061          	movff	wreg,??_low_priority_int+1
 13297  000022  CFE0 F062          	movff	bsr,??_low_priority_int+2
 13298  000026  CFFA F063          	movff	pclath,??_low_priority_int+3
 13299  00002A  CFFB F064          	movff	pclatu,??_low_priority_int+4
 13300  00002E  CFE9 F065          	movff	fsr0l,??_low_priority_int+5
 13301  000032  CFEA F066          	movff	fsr0h,??_low_priority_int+6
 13302  000036  CFE1 F067          	movff	fsr1l,??_low_priority_int+7
 13303  00003A  CFE2 F068          	movff	fsr1h,??_low_priority_int+8
 13304  00003E  CFD9 F069          	movff	fsr2l,??_low_priority_int+9
 13305  000042  CFDA F06A          	movff	fsr2h,??_low_priority_int+10
 13306  000046  CFF3 F06B          	movff	prodl,??_low_priority_int+11
 13307  00004A  CFF4 F06C          	movff	prodh,??_low_priority_int+12
 13308  00004E  CFF6 F06D          	movff	tblptrl,??_low_priority_int+13
 13309  000052  CFF7 F06E          	movff	tblptrh,??_low_priority_int+14
 13310  000056  CFF8 F06F          	movff	tblptru,??_low_priority_int+15
 13311  00005A  CFF5 F070          	movff	tablat,??_low_priority_int+16
 13312  00005E  C070  FFF5         	movff	??_low_priority_int+16,tablat
 13313  000062  C06F  FFF8         	movff	??_low_priority_int+15,tblptru
 13314  000066  C06E  FFF7         	movff	??_low_priority_int+14,tblptrh
 13315  00006A  C06D  FFF6         	movff	??_low_priority_int+13,tblptrl
 13316  00006E  C06C  FFF4         	movff	??_low_priority_int+12,prodh
 13317  000072  C06B  FFF3         	movff	??_low_priority_int+11,prodl
 13318  000076  C06A  FFDA         	movff	??_low_priority_int+10,fsr2h
 13319  00007A  C069  FFD9         	movff	??_low_priority_int+9,fsr2l
 13320  00007E  C068  FFE2         	movff	??_low_priority_int+8,fsr1h
 13321  000082  C067  FFE1         	movff	??_low_priority_int+7,fsr1l
 13322  000086  C066  FFEA         	movff	??_low_priority_int+6,fsr0h
 13323  00008A  C065  FFE9         	movff	??_low_priority_int+5,fsr0l
 13324  00008E  C064  FFFB         	movff	??_low_priority_int+4,pclatu
 13325  000092  C063  FFFA         	movff	??_low_priority_int+3,pclath
 13326  000096  C062  FFE0         	movff	??_low_priority_int+2,bsr
 13327  00009A  C061  FFE8         	movff	??_low_priority_int+1,wreg
 13328  00009E  C060  FFD8         	movff	??_low_priority_int,status
 13329  0000A2  903E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 13330  0000A4  0010               	retfie	
 13331  0000A6                     __end_of_low_priority_int:
 13332                           	opt stack 0
 13333                           pclatu	equ	0xFFB
 13334                           pclath	equ	0xFFA
 13335                           tblptru	equ	0xFF8
 13336                           tblptrh	equ	0xFF7
 13337                           tblptrl	equ	0xFF6
 13338                           tablat	equ	0xFF5
 13339                           prodh	equ	0xFF4
 13340                           prodl	equ	0xFF3
 13341                           intcon	equ	0xFF2
 13342                           intcon2	equ	0xFF1
 13343                           indf0	equ	0xFEF
 13344                           postinc0	equ	0xFEE
 13345                           fsr0h	equ	0xFEA
 13346                           fsr0l	equ	0xFE9
 13347                           wreg	equ	0xFE8
 13348                           indf1	equ	0xFE7
 13349                           postdec1	equ	0xFE5
 13350                           fsr1h	equ	0xFE2
 13351                           fsr1l	equ	0xFE1
 13352                           bsr	equ	0xFE0
 13353                           indf2	equ	0xFDF
 13354                           postinc2	equ	0xFDE
 13355                           postdec2	equ	0xFDD
 13356                           fsr2h	equ	0xFDA
 13357                           fsr2l	equ	0xFD9
 13358                           status	equ	0xFD8
 13359                           
 13360 ;; *************** function _high_priority_int *****************
 13361 ;; Defined at:
 13362 ;;		line 74 in file "easat2_util_timer.c"
 13363 ;; Parameters:    Size  Location     Type
 13364 ;;		None
 13365 ;; Auto vars:     Size  Location     Type
 13366 ;;  i               2   31[COMRAM] int 
 13367 ;;  sample          2   29[COMRAM] unsigned int 
 13368 ;; Return value:  Size  Location     Type
 13369 ;;                  1    wreg      void 
 13370 ;; Registers used:
 13371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13372 ;; Tracked objects:
 13373 ;;		On entry : 0/0
 13374 ;;		On exit  : 0/0
 13375 ;;		Unchanged: 0/0
 13376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13377 ;;      Params:         0       0       0       0       0       0       0
 13378 ;;      Locals:         4       0       0       0       0       0       0
 13379 ;;      Temps:         19       0       0       0       0       0       0
 13380 ;;      Totals:        23       0       0       0       0       0       0
 13381 ;;Total ram usage:       23 bytes
 13382 ;; Hardware stack levels used:    1
 13383 ;; Hardware stack levels required when called:    1
 13384 ;; This function calls:
 13385 ;;		___ltdiv
 13386 ;; This function is called by:
 13387 ;;		Interrupt level 2
 13388 ;; This function uses a non-reentrant model
 13389 ;;
 13390                           
 13391                           	psect	intcode
 13392  000008                     __pintcode:
 13393                           	opt stack 0
 13394  000008                     _high_priority_int:
 13395                           	opt stack 21
 13396                           
 13397                           ;incstack = 0
 13398  000008  823E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13399  00000A  CFFA F010          	movff	pclath,??_high_priority_int+5
 13400  00000E  CFFB F011          	movff	pclatu,??_high_priority_int+6
 13401  000012  EFCE  F010         	goto	int_func
 13402                           pclatu	equ	0xFFB
 13403                           pclath	equ	0xFFA
 13404                           tblptru	equ	0xFF8
 13405                           tblptrh	equ	0xFF7
 13406                           tblptrl	equ	0xFF6
 13407                           tablat	equ	0xFF5
 13408                           prodh	equ	0xFF4
 13409                           prodl	equ	0xFF3
 13410                           intcon	equ	0xFF2
 13411                           intcon2	equ	0xFF1
 13412                           indf0	equ	0xFEF
 13413                           postinc0	equ	0xFEE
 13414                           fsr0h	equ	0xFEA
 13415                           fsr0l	equ	0xFE9
 13416                           wreg	equ	0xFE8
 13417                           indf1	equ	0xFE7
 13418                           postdec1	equ	0xFE5
 13419                           fsr1h	equ	0xFE2
 13420                           fsr1l	equ	0xFE1
 13421                           bsr	equ	0xFE0
 13422                           indf2	equ	0xFDF
 13423                           postinc2	equ	0xFDE
 13424                           postdec2	equ	0xFDD
 13425                           fsr2h	equ	0xFDA
 13426                           fsr2l	equ	0xFD9
 13427                           status	equ	0xFD8
 13428                           
 13429                           	psect	intcode_body
 13430  00219C                     __pintcode_body:
 13431                           	opt stack 21
 13432  00219C                     int_func:
 13433                           	opt stack 21
 13434  00219C  CFE9 F012          	movff	fsr0l,??_high_priority_int+7
 13435  0021A0  CFEA F013          	movff	fsr0h,??_high_priority_int+8
 13436  0021A4  CFE1 F014          	movff	fsr1l,??_high_priority_int+9
 13437  0021A8  CFE2 F015          	movff	fsr1h,??_high_priority_int+10
 13438  0021AC  CFD9 F016          	movff	fsr2l,??_high_priority_int+11
 13439  0021B0  CFDA F017          	movff	fsr2h,??_high_priority_int+12
 13440  0021B4  CFF3 F018          	movff	prodl,??_high_priority_int+13
 13441  0021B8  CFF4 F019          	movff	prodh,??_high_priority_int+14
 13442  0021BC  CFF6 F01A          	movff	tblptrl,??_high_priority_int+15
 13443  0021C0  CFF7 F01B          	movff	tblptrh,??_high_priority_int+16
 13444  0021C4  CFF8 F01C          	movff	tblptru,??_high_priority_int+17
 13445  0021C8  CFF5 F01D          	movff	tablat,??_high_priority_int+18
 13446                           
 13447                           ;easat2_util_timer.c: 76: static unsigned int samples[100];
 13448                           ;easat2_util_timer.c: 77: static int sample_position = 0;
 13449                           ;easat2_util_timer.c: 78: static unsigned short long noise_mean_value = 32000;
 13450                           ;easat2_util_timer.c: 79: static unsigned int activation_thresold = 32000;
 13451                           ;easat2_util_timer.c: 80: static int times_thresold_exceeded = 0;
 13452                           ;easat2_util_timer.c: 81: static int cycles_transmitter_active = 0;
 13453                           ;easat2_util_timer.c: 82: static int is_transmitter_active = 0;
 13454                           ;easat2_util_timer.c: 84: static int valid_samples = 0;
 13455  0021CC  0E00               	movlw	0
 13456  0021CE  6E1F               	movwf	high_priority_int@sample+1,c
 13457  0021D0  0E00               	movlw	0
 13458  0021D2  6E1E               	movwf	high_priority_int@sample,c
 13459                           
 13460                           ;easat2_util_timer.c: 90: if (PIR1bits.TMR1IF) {
 13461  0021D4  A09E               	btfss	3998,0,c	;volatile
 13462  0021D6  D0D1               	goto	i2l195
 13463                           
 13464                           ;easat2_util_timer.c: 94: TMR1H = 0xEC;
 13465  0021D8  0EEC               	movlw	236
 13466  0021DA  6ECF               	movwf	4047,c	;volatile
 13467                           
 13468                           ;easat2_util_timer.c: 95: TMR1L = 0x77 ; 60535;
 13469  0021DC  0E77               	movlw	119
 13470  0021DE  6ECE               	movwf	4046,c	;volatile
 13471  0021E0  0004               	clrwdt		;# 
 13472                           
 13473                           ;easat2_util_timer.c: 112: tmr1_interrupt_number++;
 13474  0021E2  4A2D               	infsnz	_tmr1_interrupt_number,f,c
 13475  0021E4  2A2E               	incf	_tmr1_interrupt_number+1,f,c
 13476                           
 13477                           ;easat2_util_timer.c: 116: if (tmr1_interrupt_number == 50) {
 13478  0021E6  0E32               	movlw	50
 13479  0021E8  182D               	xorwf	_tmr1_interrupt_number,w,c
 13480  0021EA  102E               	iorwf	_tmr1_interrupt_number+1,w,c
 13481  0021EC  A4D8               	btfss	status,2,c
 13482  0021EE  D010               	goto	i2l4648
 13483                           
 13484                           ;easat2_util_timer.c: 119: (PORTDbits.RD4) = !(PORTDbits.RD4);
 13485  0021F0  B883               	btfsc	3971,4,c	;volatile
 13486  0021F2  D003               	goto	i2u428_40
 13487  0021F4  6A0B               	clrf	??_high_priority_int& (0+255),c
 13488  0021F6  2A0B               	incf	??_high_priority_int& (0+255),f,c
 13489  0021F8  D001               	goto	i2u429_48
 13490  0021FA                     i2u428_40:
 13491  0021FA  6A0B               	clrf	??_high_priority_int& (0+255),c
 13492  0021FC                     i2u429_48:
 13493  0021FC  3A0B               	swapf	??_high_priority_int,f,c
 13494  0021FE  5083               	movf	3971,w,c	;volatile
 13495  002200  180B               	xorwf	??_high_priority_int,w,c
 13496  002202  0BEF               	andlw	-17
 13497  002204  180B               	xorwf	??_high_priority_int,w,c
 13498  002206  6E83               	movwf	3971,c	;volatile
 13499                           
 13500                           ;easat2_util_timer.c: 121: tmr1_interrupt_number = 0;
 13501  002208  0E00               	movlw	0
 13502  00220A  6E2E               	movwf	_tmr1_interrupt_number+1,c
 13503  00220C  0E00               	movlw	0
 13504  00220E  6E2D               	movwf	_tmr1_interrupt_number,c
 13505  002210                     i2l4648:
 13506                           
 13507                           ;easat2_util_timer.c: 123: }
 13508                           ;easat2_util_timer.c: 127: if (valid_samples < 100) valid_samples++;
 13509  002210  BE38               	btfsc	high_priority_int@valid_samples+1,7,c
 13510  002212  D006               	goto	i2l4650
 13511  002214  5038               	movf	high_priority_int@valid_samples+1,w,c
 13512  002216  E106               	bnz	i2l4652
 13513  002218  0E64               	movlw	100
 13514  00221A  5C37               	subwf	high_priority_int@valid_samples,w,c
 13515  00221C  B0D8               	btfsc	status,0,c
 13516  00221E  D002               	goto	i2l4652
 13517  002220                     i2l4650:
 13518  002220  4A37               	infsnz	high_priority_int@valid_samples,f,c
 13519  002222  2A38               	incf	high_priority_int@valid_samples+1,f,c
 13520  002224                     i2l4652:
 13521                           
 13522                           ;easat2_util_timer.c: 140: ADCON0bits.CHS = 4;
 13523  002224  94C2               	bcf	4034,2,c	;volatile
 13524  002226  96C2               	bcf	4034,3,c	;volatile
 13525  002228  88C2               	bsf	4034,4,c	;volatile
 13526  00222A  9AC2               	bcf	4034,5,c	;volatile
 13527  00222C  9CC2               	bcf	4034,6,c	;volatile
 13528                           
 13529                           ;easat2_util_timer.c: 141: ADCON0bits.ADON = 1;
 13530  00222E  80C2               	bsf	4034,0,c	;volatile
 13531                           
 13532                           ;easat2_util_timer.c: 142: PIR1bits.ADIF = 0;
 13533  002230  9C9E               	bcf	3998,6,c	;volatile
 13534                           
 13535                           ;easat2_util_timer.c: 144: ADCON0bits.GO = 1;
 13536  002232  82C2               	bsf	4034,1,c	;volatile
 13537  002234                     i2l183:
 13538  002234  AC9E               	btfss	3998,6,c	;volatile
 13539  002236  D7FE               	goto	i2l183
 13540                           
 13541                           ;easat2_util_timer.c: 147: sample = ADRES;
 13542  002238  CFC3 F01E          	movff	4035,high_priority_int@sample	;volatile
 13543  00223C  CFC4 F01F          	movff	4036,high_priority_int@sample+1	;volatile
 13544                           
 13545                           ;easat2_util_timer.c: 149: PIR1bits.ADIF = 0;
 13546  002240  9C9E               	bcf	3998,6,c	;volatile
 13547                           
 13548                           ;easat2_util_timer.c: 150: ADCON0bits.ADON = 0;
 13549  002242  90C2               	bcf	4034,0,c	;volatile
 13550                           
 13551                           ;easat2_util_timer.c: 152: if (is_transmitter_active) cycles_transmitter_active++;
 13552  002244  5031               	movf	high_priority_int@is_transmitter_active,w,c
 13553  002246  1032               	iorwf	high_priority_int@is_transmitter_active+1,w,c
 13554  002248  B4D8               	btfsc	status,2,c
 13555  00224A  D002               	goto	i2l4664
 13556  00224C  4A2F               	infsnz	high_priority_int@cycles_transmitter_active,f,c
 13557  00224E  2A30               	incf	high_priority_int@cycles_transmitter_active+1,f,c
 13558  002250                     i2l4664:
 13559                           
 13560                           ;easat2_util_timer.c: 157: if (sample > 128 && sample > activation_thresold) {
 13561  002250  501F               	movf	high_priority_int@sample+1,w,c
 13562  002252  E104               	bnz	i2u433_40
 13563  002254  0E81               	movlw	129
 13564  002256  5C1E               	subwf	high_priority_int@sample,w,c
 13565  002258  A0D8               	btfss	status,0,c
 13566  00225A  D01B               	goto	i2l4676
 13567  00225C                     i2u433_40:
 13568  00225C  501E               	movf	high_priority_int@sample,w,c
 13569  00225E  5C3C               	subwf	high_priority_int@activation_thresold,w,c
 13570  002260  501F               	movf	high_priority_int@sample+1,w,c
 13571  002262  583D               	subwfb	high_priority_int@activation_thresold+1,w,c
 13572  002264  B0D8               	btfsc	status,0,c
 13573  002266  D015               	goto	i2l4676
 13574                           
 13575                           ;easat2_util_timer.c: 159: times_thresold_exceeded++;
 13576  002268  4A35               	infsnz	high_priority_int@times_thresold_exceeded,f,c
 13577  00226A  2A36               	incf	high_priority_int@times_thresold_exceeded+1,f,c
 13578                           
 13579                           ;easat2_util_timer.c: 161: if (times_thresold_exceeded == 200) {
 13580  00226C  0EC8               	movlw	200
 13581  00226E  1835               	xorwf	high_priority_int@times_thresold_exceeded,w,c
 13582  002270  1036               	iorwf	high_priority_int@times_thresold_exceeded+1,w,c
 13583  002272  A4D8               	btfss	status,2,c
 13584  002274  D081               	goto	i2l4710
 13585                           
 13586                           ;easat2_util_timer.c: 166: (PORTBbits.RB1) = 1;
 13587  002276  8281               	bsf	3969,1,c	;volatile
 13588                           
 13589                           ;easat2_util_timer.c: 168: is_transmitter_active = 1;
 13590  002278  0E00               	movlw	0
 13591  00227A  6E32               	movwf	high_priority_int@is_transmitter_active+1,c
 13592  00227C  0E01               	movlw	1
 13593  00227E  6E31               	movwf	high_priority_int@is_transmitter_active,c
 13594                           
 13595                           ;easat2_util_timer.c: 169: cycles_transmitter_active = 0;
 13596  002280  0E00               	movlw	0
 13597  002282  6E30               	movwf	high_priority_int@cycles_transmitter_active+1,c
 13598  002284  0E00               	movlw	0
 13599  002286  6E2F               	movwf	high_priority_int@cycles_transmitter_active,c
 13600                           
 13601                           ;easat2_util_timer.c: 171: times_thresold_exceeded = 0;
 13602  002288  0E00               	movlw	0
 13603  00228A  6E36               	movwf	high_priority_int@times_thresold_exceeded+1,c
 13604  00228C  0E00               	movlw	0
 13605  00228E  6E35               	movwf	high_priority_int@times_thresold_exceeded,c
 13606                           
 13607                           ;easat2_util_timer.c: 173: }
 13608                           ;easat2_util_timer.c: 176: } else {
 13609  002290  D073               	goto	i2l4710
 13610  002292                     i2l4676:
 13611                           
 13612                           ;easat2_util_timer.c: 178: times_thresold_exceeded = 0;
 13613  002292  0E00               	movlw	0
 13614  002294  6E36               	movwf	high_priority_int@times_thresold_exceeded+1,c
 13615  002296  0E00               	movlw	0
 13616  002298  6E35               	movwf	high_priority_int@times_thresold_exceeded,c
 13617                           
 13618                           ;easat2_util_timer.c: 180: if (cycles_transmitter_active == 12000) {
 13619  00229A  0EE0               	movlw	224
 13620  00229C  182F               	xorwf	high_priority_int@cycles_transmitter_active,w,c
 13621  00229E  E109               	bnz	i2l4684
 13622  0022A0  0E2E               	movlw	46
 13623  0022A2  1830               	xorwf	high_priority_int@cycles_transmitter_active+1,w,c
 13624  0022A4  A4D8               	btfss	status,2,c
 13625  0022A6  D005               	goto	i2l4684
 13626                           
 13627                           ;easat2_util_timer.c: 182: (PORTBbits.RB1) = 0;
 13628  0022A8  9281               	bcf	3969,1,c	;volatile
 13629                           
 13630                           ;easat2_util_timer.c: 183: is_transmitter_active = 0;
 13631  0022AA  0E00               	movlw	0
 13632  0022AC  6E32               	movwf	high_priority_int@is_transmitter_active+1,c
 13633  0022AE  0E00               	movlw	0
 13634  0022B0  6E31               	movwf	high_priority_int@is_transmitter_active,c
 13635  0022B2                     i2l4684:
 13636                           
 13637                           ;easat2_util_timer.c: 184: }
 13638                           ;easat2_util_timer.c: 186: samples[sample_position++] = sample;
 13639  0022B2  90D8               	bcf	status,0,c
 13640  0022B4  3433               	rlcf	high_priority_int@sample_position,w,c
 13641  0022B6  6ED9               	movwf	fsr2l,c
 13642  0022B8  3434               	rlcf	high_priority_int@sample_position+1,w,c
 13643  0022BA  6EDA               	movwf	fsr2h,c
 13644  0022BC  0E00               	movlw	low high_priority_int@samples
 13645  0022BE  26D9               	addwf	fsr2l,f,c
 13646  0022C0  0E02               	movlw	high high_priority_int@samples
 13647  0022C2  22DA               	addwfc	fsr2h,f,c
 13648  0022C4  C01E  FFDE         	movff	high_priority_int@sample,postinc2
 13649  0022C8  C01F  FFDD         	movff	high_priority_int@sample+1,postdec2
 13650  0022CC  4A33               	infsnz	high_priority_int@sample_position,f,c
 13651  0022CE  2A34               	incf	high_priority_int@sample_position+1,f,c
 13652                           
 13653                           ;easat2_util_timer.c: 189: if (sample_position == 100) sample_position = 0;
 13654  0022D0  0E64               	movlw	100
 13655  0022D2  1833               	xorwf	high_priority_int@sample_position,w,c
 13656  0022D4  1034               	iorwf	high_priority_int@sample_position+1,w,c
 13657  0022D6  A4D8               	btfss	status,2,c
 13658  0022D8  D004               	goto	i2l4692
 13659  0022DA  0E00               	movlw	0
 13660  0022DC  6E34               	movwf	high_priority_int@sample_position+1,c
 13661  0022DE  0E00               	movlw	0
 13662  0022E0  6E33               	movwf	high_priority_int@sample_position,c
 13663  0022E2                     i2l4692:
 13664                           
 13665                           ;easat2_util_timer.c: 191: if (valid_samples == 100) {
 13666  0022E2  0E64               	movlw	100
 13667  0022E4  1837               	xorwf	high_priority_int@valid_samples,w,c
 13668  0022E6  1038               	iorwf	high_priority_int@valid_samples+1,w,c
 13669  0022E8  A4D8               	btfss	status,2,c
 13670  0022EA  D046               	goto	i2l4710
 13671                           
 13672                           ;easat2_util_timer.c: 194: noise_mean_value = 0;
 13673  0022EC  0E00               	movlw	0
 13674  0022EE  6E39               	movwf	high_priority_int@noise_mean_value,c
 13675  0022F0  0E00               	movlw	0
 13676  0022F2  6E3A               	movwf	high_priority_int@noise_mean_value+1,c
 13677  0022F4  0E00               	movlw	0
 13678  0022F6  6E3B               	movwf	high_priority_int@noise_mean_value+2,c
 13679                           
 13680                           ;easat2_util_timer.c: 196: for (int i = 0; i < 100; i++)
 13681  0022F8  0E00               	movlw	0
 13682  0022FA  6E21               	movwf	high_priority_int@i+1,c
 13683  0022FC  0E00               	movlw	0
 13684  0022FE  6E20               	movwf	high_priority_int@i,c
 13685  002300                     i2l4696:
 13686  002300  BE21               	btfsc	high_priority_int@i+1,7,c
 13687  002302  D006               	goto	i2l4700
 13688  002304  5021               	movf	high_priority_int@i+1,w,c
 13689  002306  E11F               	bnz	i2l4706
 13690  002308  0E64               	movlw	100
 13691  00230A  5C20               	subwf	high_priority_int@i,w,c
 13692  00230C  B0D8               	btfsc	status,0,c
 13693  00230E  D01B               	goto	i2l4706
 13694  002310                     i2l4700:
 13695                           
 13696                           ;easat2_util_timer.c: 197: noise_mean_value += samples[i];
 13697  002310  90D8               	bcf	status,0,c
 13698  002312  3420               	rlcf	high_priority_int@i,w,c
 13699  002314  6ED9               	movwf	fsr2l,c
 13700  002316  3421               	rlcf	high_priority_int@i+1,w,c
 13701  002318  6EDA               	movwf	fsr2h,c
 13702  00231A  0E00               	movlw	low high_priority_int@samples
 13703  00231C  26D9               	addwf	fsr2l,f,c
 13704  00231E  0E02               	movlw	high high_priority_int@samples
 13705  002320  22DA               	addwfc	fsr2h,f,c
 13706  002322  CFDE F00B          	movff	postinc2,??_high_priority_int
 13707  002326  CFDD F00C          	movff	postdec2,??_high_priority_int+1
 13708  00232A  C00B  F00D         	movff	??_high_priority_int,??_high_priority_int+2
 13709  00232E  C00C  F00E         	movff	??_high_priority_int+1,??_high_priority_int+3
 13710  002332  6A0F               	clrf	(??_high_priority_int+4)& (0+255),c
 13711  002334  500D               	movf	??_high_priority_int+2,w,c
 13712  002336  2639               	addwf	high_priority_int@noise_mean_value,f,c
 13713  002338  500E               	movf	??_high_priority_int+3,w,c
 13714  00233A  223A               	addwfc	high_priority_int@noise_mean_value+1,f,c
 13715  00233C  500F               	movf	??_high_priority_int+4,w,c
 13716  00233E  223B               	addwfc	high_priority_int@noise_mean_value+2,f,c
 13717  002340  4A20               	infsnz	high_priority_int@i,f,c
 13718  002342  2A21               	incf	high_priority_int@i+1,f,c
 13719  002344  D7DD               	goto	i2l4696
 13720  002346                     i2l4706:
 13721                           
 13722                           ;easat2_util_timer.c: 200: noise_mean_value = (unsigned short long)(noise_mean_value / 1
      +                          00);
 13723  002346  C039  F001         	movff	high_priority_int@noise_mean_value,___ltdiv@dividend
 13724  00234A  C03A  F002         	movff	high_priority_int@noise_mean_value+1,___ltdiv@dividend+1
 13725  00234E  C03B  F003         	movff	high_priority_int@noise_mean_value+2,___ltdiv@dividend+2
 13726  002352  0E64               	movlw	100
 13727  002354  6E04               	movwf	___ltdiv@divisor,c
 13728  002356  0E00               	movlw	0
 13729  002358  6E05               	movwf	___ltdiv@divisor+1,c
 13730  00235A  0E00               	movlw	0
 13731  00235C  6E06               	movwf	___ltdiv@divisor+2,c
 13732  00235E  EC22  F01B         	call	___ltdiv	;wreg free
 13733  002362  C001  F039         	movff	?___ltdiv,high_priority_int@noise_mean_value
 13734  002366  C002  F03A         	movff	?___ltdiv+1,high_priority_int@noise_mean_value+1
 13735  00236A  C003  F03B         	movff	?___ltdiv+2,high_priority_int@noise_mean_value+2
 13736                           
 13737                           ;easat2_util_timer.c: 205: activation_thresold = noise_mean_value * 2;
 13738  00236E  90D8               	bcf	status,0,c
 13739  002370  3439               	rlcf	high_priority_int@noise_mean_value,w,c
 13740  002372  6E3C               	movwf	high_priority_int@activation_thresold,c
 13741  002374  343A               	rlcf	high_priority_int@noise_mean_value+1,w,c
 13742  002376  6E3D               	movwf	high_priority_int@activation_thresold+1,c
 13743  002378                     i2l4710:
 13744                           
 13745                           ;easat2_util_timer.c: 207: }
 13746                           ;easat2_util_timer.c: 209: }
 13747                           ;easat2_util_timer.c: 214: PIR1bits.TMR1IF = 0;
 13748  002378  909E               	bcf	3998,0,c	;volatile
 13749  00237A                     i2l195:
 13750  00237A  C01D  FFF5         	movff	??_high_priority_int+18,tablat
 13751  00237E  C01C  FFF8         	movff	??_high_priority_int+17,tblptru
 13752  002382  C01B  FFF7         	movff	??_high_priority_int+16,tblptrh
 13753  002386  C01A  FFF6         	movff	??_high_priority_int+15,tblptrl
 13754  00238A  C019  FFF4         	movff	??_high_priority_int+14,prodh
 13755  00238E  C018  FFF3         	movff	??_high_priority_int+13,prodl
 13756  002392  C017  FFDA         	movff	??_high_priority_int+12,fsr2h
 13757  002396  C016  FFD9         	movff	??_high_priority_int+11,fsr2l
 13758  00239A  C015  FFE2         	movff	??_high_priority_int+10,fsr1h
 13759  00239E  C014  FFE1         	movff	??_high_priority_int+9,fsr1l
 13760  0023A2  C013  FFEA         	movff	??_high_priority_int+8,fsr0h
 13761  0023A6  C012  FFE9         	movff	??_high_priority_int+7,fsr0l
 13762  0023AA  C011  FFFB         	movff	??_high_priority_int+6,pclatu
 13763  0023AE  C010  FFFA         	movff	??_high_priority_int+5,pclath
 13764  0023B2  923E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13765  0023B4  0011               	retfie		f
 13766  0023B6                     __end_of_high_priority_int:
 13767                           	opt stack 0
 13768                           pclatu	equ	0xFFB
 13769                           pclath	equ	0xFFA
 13770                           tblptru	equ	0xFF8
 13771                           tblptrh	equ	0xFF7
 13772                           tblptrl	equ	0xFF6
 13773                           tablat	equ	0xFF5
 13774                           prodh	equ	0xFF4
 13775                           prodl	equ	0xFF3
 13776                           intcon	equ	0xFF2
 13777                           intcon2	equ	0xFF1
 13778                           indf0	equ	0xFEF
 13779                           postinc0	equ	0xFEE
 13780                           fsr0h	equ	0xFEA
 13781                           fsr0l	equ	0xFE9
 13782                           wreg	equ	0xFE8
 13783                           indf1	equ	0xFE7
 13784                           postdec1	equ	0xFE5
 13785                           fsr1h	equ	0xFE2
 13786                           fsr1l	equ	0xFE1
 13787                           bsr	equ	0xFE0
 13788                           indf2	equ	0xFDF
 13789                           postinc2	equ	0xFDE
 13790                           postdec2	equ	0xFDD
 13791                           fsr2h	equ	0xFDA
 13792                           fsr2l	equ	0xFD9
 13793                           status	equ	0xFD8
 13794                           
 13795 ;; *************** function ___ltdiv *****************
 13796 ;; Defined at:
 13797 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ltdiv.c"
 13798 ;; Parameters:    Size  Location     Type
 13799 ;;  dividend        3    0[COMRAM] unsigned um
 13800 ;;  divisor         3    3[COMRAM] unsigned um
 13801 ;; Auto vars:     Size  Location     Type
 13802 ;;  quotient        3    6[COMRAM] unsigned um
 13803 ;;  counter         1    9[COMRAM] unsigned char 
 13804 ;; Return value:  Size  Location     Type
 13805 ;;                  3    0[COMRAM] unsigned um
 13806 ;; Registers used:
 13807 ;;		wreg, status,2, status,0
 13808 ;; Tracked objects:
 13809 ;;		On entry : 0/0
 13810 ;;		On exit  : 0/0
 13811 ;;		Unchanged: 0/0
 13812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13813 ;;      Params:         6       0       0       0       0       0       0
 13814 ;;      Locals:         4       0       0       0       0       0       0
 13815 ;;      Temps:          0       0       0       0       0       0       0
 13816 ;;      Totals:        10       0       0       0       0       0       0
 13817 ;;Total ram usage:       10 bytes
 13818 ;; Hardware stack levels used:    1
 13819 ;; This function calls:
 13820 ;;		Nothing
 13821 ;; This function is called by:
 13822 ;;		_high_priority_int
 13823 ;; This function uses a non-reentrant model
 13824 ;;
 13825                           
 13826                           	psect	text56
 13827  003644                     __ptext56:
 13828                           	opt stack 0
 13829  003644                     ___ltdiv:
 13830                           	opt stack 21
 13831                           
 13832                           ;incstack = 0
 13833  003644  0E00               	movlw	0
 13834  003646  6E07               	movwf	___ltdiv@quotient,c
 13835  003648  0E00               	movlw	0
 13836  00364A  6E08               	movwf	___ltdiv@quotient+1,c
 13837  00364C  0E00               	movlw	0
 13838  00364E  6E09               	movwf	___ltdiv@quotient+2,c
 13839  003650  5004               	movf	___ltdiv@divisor,w,c
 13840  003652  1005               	iorwf	___ltdiv@divisor+1,w,c
 13841  003654  1006               	iorwf	___ltdiv@divisor+2,w,c
 13842  003656  B4D8               	btfsc	status,2,c
 13843  003658  D023               	goto	i2l961
 13844  00365A  0E01               	movlw	1
 13845  00365C  6E0A               	movwf	___ltdiv@counter,c
 13846  00365E  D005               	goto	i2l4618
 13847  003660                     i2l4616:
 13848  003660  90D8               	bcf	status,0,c
 13849  003662  3604               	rlcf	___ltdiv@divisor,f,c
 13850  003664  3605               	rlcf	___ltdiv@divisor+1,f,c
 13851  003666  3606               	rlcf	___ltdiv@divisor+2,f,c
 13852  003668  2A0A               	incf	___ltdiv@counter,f,c
 13853  00366A                     i2l4618:
 13854  00366A  AE06               	btfss	___ltdiv@divisor+2,7,c
 13855  00366C  D7F9               	goto	i2l4616
 13856  00366E                     i2l4620:
 13857  00366E  90D8               	bcf	status,0,c
 13858  003670  3607               	rlcf	___ltdiv@quotient,f,c
 13859  003672  3608               	rlcf	___ltdiv@quotient+1,f,c
 13860  003674  3609               	rlcf	___ltdiv@quotient+2,f,c
 13861  003676  5004               	movf	___ltdiv@divisor,w,c
 13862  003678  5C01               	subwf	___ltdiv@dividend,w,c
 13863  00367A  5005               	movf	___ltdiv@divisor+1,w,c
 13864  00367C  5802               	subwfb	___ltdiv@dividend+1,w,c
 13865  00367E  5006               	movf	___ltdiv@divisor+2,w,c
 13866  003680  5803               	subwfb	___ltdiv@dividend+2,w,c
 13867  003682  A0D8               	btfss	status,0,c
 13868  003684  D007               	goto	i2l966
 13869  003686  5004               	movf	___ltdiv@divisor,w,c
 13870  003688  5E01               	subwf	___ltdiv@dividend,f,c
 13871  00368A  5005               	movf	___ltdiv@divisor+1,w,c
 13872  00368C  5A02               	subwfb	___ltdiv@dividend+1,f,c
 13873  00368E  5006               	movf	___ltdiv@divisor+2,w,c
 13874  003690  5A03               	subwfb	___ltdiv@dividend+2,f,c
 13875  003692  8007               	bsf	___ltdiv@quotient,0,c
 13876  003694                     i2l966:
 13877  003694  90D8               	bcf	status,0,c
 13878  003696  3206               	rrcf	___ltdiv@divisor+2,f,c
 13879  003698  3205               	rrcf	___ltdiv@divisor+1,f,c
 13880  00369A  3204               	rrcf	___ltdiv@divisor,f,c
 13881  00369C  2E0A               	decfsz	___ltdiv@counter,f,c
 13882  00369E  D7E7               	goto	i2l4620
 13883  0036A0                     i2l961:
 13884  0036A0  C007  F001         	movff	___ltdiv@quotient,?___ltdiv
 13885  0036A4  C008  F002         	movff	___ltdiv@quotient+1,?___ltdiv+1
 13886  0036A8  C009  F003         	movff	___ltdiv@quotient+2,?___ltdiv+2
 13887  0036AC  0012               	return		;funcret
 13888  0036AE                     __end_of___ltdiv:
 13889                           	opt stack 0
 13890                           pclatu	equ	0xFFB
 13891                           pclath	equ	0xFFA
 13892                           tblptru	equ	0xFF8
 13893                           tblptrh	equ	0xFF7
 13894                           tblptrl	equ	0xFF6
 13895                           tablat	equ	0xFF5
 13896                           prodh	equ	0xFF4
 13897                           prodl	equ	0xFF3
 13898                           intcon	equ	0xFF2
 13899                           intcon2	equ	0xFF1
 13900                           indf0	equ	0xFEF
 13901                           postinc0	equ	0xFEE
 13902                           fsr0h	equ	0xFEA
 13903                           fsr0l	equ	0xFE9
 13904                           wreg	equ	0xFE8
 13905                           indf1	equ	0xFE7
 13906                           postdec1	equ	0xFE5
 13907                           fsr1h	equ	0xFE2
 13908                           fsr1l	equ	0xFE1
 13909                           bsr	equ	0xFE0
 13910                           indf2	equ	0xFDF
 13911                           postinc2	equ	0xFDE
 13912                           postdec2	equ	0xFDD
 13913                           fsr2h	equ	0xFDA
 13914                           fsr2l	equ	0xFD9
 13915                           status	equ	0xFD8
 13916                           pclatu	equ	0xFFB
 13917                           pclath	equ	0xFFA
 13918                           tblptru	equ	0xFF8
 13919                           tblptrh	equ	0xFF7
 13920                           tblptrl	equ	0xFF6
 13921                           tablat	equ	0xFF5
 13922                           prodh	equ	0xFF4
 13923                           prodl	equ	0xFF3
 13924                           intcon	equ	0xFF2
 13925                           intcon2	equ	0xFF1
 13926                           indf0	equ	0xFEF
 13927                           postinc0	equ	0xFEE
 13928                           fsr0h	equ	0xFEA
 13929                           fsr0l	equ	0xFE9
 13930                           wreg	equ	0xFE8
 13931                           indf1	equ	0xFE7
 13932                           postdec1	equ	0xFE5
 13933                           fsr1h	equ	0xFE2
 13934                           fsr1l	equ	0xFE1
 13935                           bsr	equ	0xFE0
 13936                           indf2	equ	0xFDF
 13937                           postinc2	equ	0xFDE
 13938                           postdec2	equ	0xFDD
 13939                           fsr2h	equ	0xFDA
 13940                           fsr2l	equ	0xFD9
 13941                           status	equ	0xFD8
 13942                           
 13943                           	psect	rparam
 13944  0000                     pclatu	equ	0xFFB
 13945                           pclath	equ	0xFFA
 13946                           tblptru	equ	0xFF8
 13947                           tblptrh	equ	0xFF7
 13948                           tblptrl	equ	0xFF6
 13949                           tablat	equ	0xFF5
 13950                           prodh	equ	0xFF4
 13951                           prodl	equ	0xFF3
 13952                           intcon	equ	0xFF2
 13953                           intcon2	equ	0xFF1
 13954                           indf0	equ	0xFEF
 13955                           postinc0	equ	0xFEE
 13956                           fsr0h	equ	0xFEA
 13957                           fsr0l	equ	0xFE9
 13958                           wreg	equ	0xFE8
 13959                           indf1	equ	0xFE7
 13960                           postdec1	equ	0xFE5
 13961                           fsr1h	equ	0xFE2
 13962                           fsr1l	equ	0xFE1
 13963                           bsr	equ	0xFE0
 13964                           indf2	equ	0xFDF
 13965                           postinc2	equ	0xFDE
 13966                           postdec2	equ	0xFDD
 13967                           fsr2h	equ	0xFDA
 13968                           fsr2l	equ	0xFD9
 13969                           status	equ	0xFD8
 13970                           
 13971                           	psect	temp
 13972  00003E                     btemp:
 13973                           	opt stack 0
 13974  00003E                     	ds	1
 13975  0000                     int$flags	set	btemp
 13976                           pclatu	equ	0xFFB
 13977                           pclath	equ	0xFFA
 13978                           tblptru	equ	0xFF8
 13979                           tblptrh	equ	0xFF7
 13980                           tblptrl	equ	0xFF6
 13981                           tablat	equ	0xFF5
 13982                           prodh	equ	0xFF4
 13983                           prodl	equ	0xFF3
 13984                           intcon	equ	0xFF2
 13985                           intcon2	equ	0xFF1
 13986                           indf0	equ	0xFEF
 13987                           postinc0	equ	0xFEE
 13988                           fsr0h	equ	0xFEA
 13989                           fsr0l	equ	0xFE9
 13990                           wreg	equ	0xFE8
 13991                           indf1	equ	0xFE7
 13992                           postdec1	equ	0xFE5
 13993                           fsr1h	equ	0xFE2
 13994                           fsr1l	equ	0xFE1
 13995                           bsr	equ	0xFE0
 13996                           indf2	equ	0xFDF
 13997                           postinc2	equ	0xFDE
 13998                           postdec2	equ	0xFDD
 13999                           fsr2h	equ	0xFDA
 14000                           fsr2l	equ	0xFD9
 14001                           status	equ	0xFD8


Data Sizes:
    Strings     148
    Constant    118
    Data        5
    BSS         212
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      61
    BANK0           160    134     134
    BANK1           256    206     206
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_43(CODE[7]), STR_42(CODE[7]), STR_41(CODE[6]), STR_40(CODE[7]), 
		 -> STR_39(CODE[7]), STR_38(CODE[6]), STR_37(CODE[6]), STR_36(CODE[6]), 
		 -> STR_35(CODE[6]), STR_34(CODE[6]), STR_33(CODE[6]), STR_32(CODE[6]), 
		 -> STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[6]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[5]), 
		 -> STR_23(CODE[4]), STR_22(CODE[2]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[5]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[4]), STR_8(CODE[5]), 
		 -> STR_7(CODE[2]), STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_43(CODE[7]), STR_42(CODE[7]), STR_41(CODE[6]), STR_40(CODE[7]), 
		 -> STR_39(CODE[7]), STR_38(CODE[6]), STR_37(CODE[6]), STR_36(CODE[6]), 
		 -> STR_35(CODE[6]), STR_34(CODE[6]), STR_33(CODE[6]), STR_32(CODE[6]), 
		 -> STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[6]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[5]), 
		 -> STR_23(CODE[4]), STR_22(CODE[2]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[5]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[4]), STR_8(CODE[5]), 
		 -> STR_7(CODE[2]), STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 64
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    memset@p1	PTR void  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    memset@p	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 64
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    util_transmit_morse_sequence@morse_sequence	PTR unsigned char  size(2) Largest target is 7
		 -> STR_43(CODE[7]), STR_42(CODE[7]), STR_41(CODE[6]), STR_40(CODE[7]), 
		 -> STR_39(CODE[7]), STR_38(CODE[6]), STR_37(CODE[6]), STR_36(CODE[6]), 
		 -> STR_35(CODE[6]), STR_34(CODE[6]), STR_33(CODE[6]), STR_32(CODE[6]), 
		 -> STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[6]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[5]), 
		 -> STR_23(CODE[4]), STR_22(CODE[2]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[5]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[4]), STR_8(CODE[5]), 
		 -> STR_7(CODE[2]), STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 

    sp__memset	PTR void  size(2) Largest target is 128
		 -> util_beacon_transmission@BEACON_BUFFER(BANK1[64]), util_beacon_transmission@BEACON_MESSAGE(BANK1[128]), 


Critical Paths under _main in COMRAM

    _main_loop->_util_waits_delay_mins
    _util_waits_delay_hours->_util_waits_delay_mins
    _util_waits_delay_mins->_util_waits_delay_secs
    _util_getTemperature->___ftmul
    _util_waits_delay_secs->_util_waits_delay_ms
    _util_onewire_read_byte->_util_onewire_read_bit
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _util_getSolarCurrent->___ftmul
    _util_getBatteryVoltage->___ftmul
    _util_getBatteryCurrent->___ftmul
    ___lwtoft->___ftpack
    _util_transmit_letter->_util_transmit_morse_sequence
    _util_transmit_space_between_words->_util_waits_delay_ms
    _util_transmit_space_between_letters->_util_waits_delay_ms
    _util_transmit_morse_sequence->_util_transmit_dash
    _util_transmit_morse_sequence->_util_transmit_dot
    _util_transmit_space_between_dots_dashes->_util_waits_delay_ms
    _util_transmit_dot->_util_waits_delay_ms
    _util_transmit_dash->_util_waits_delay_ms
    _util_transmit_buzzer_1ms_cycle->_util_waits_delay_hundred_us
    _sprintf->___ftmul
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftmul
    ___ftadd->___ftmul

Critical Paths under _low_priority_int in COMRAM

    None.

Critical Paths under _high_priority_int in COMRAM

    _high_priority_int->___ltdiv

Critical Paths under _main in BANK0

    _main->_main_loop
    _main_loop->_util_beacon_transmission
    _util_waits_delay_hours->_util_waits_delay_mins
    _util_waits_delay_mins->_util_waits_delay_secs
    _util_getTemperature->___ftadd
    _util_waits_delay_secs->_util_waits_delay_ms
    _util_onewire_write_byte->_util_onewire_write_bit
    _util_onewire_read_byte->_util_onewire_read_bit
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _util_getSolarCurrent->___fttol
    _util_getBatteryVoltage->___ftmul
    _util_getBatteryCurrent->___fttol
    ___lwtoft->___ftpack
    _util_beacon_transmission->_sprintf
    _util_transmit_letter->_util_transmit_morse_sequence
    _util_transmit_space_between_words->_util_waits_delay_ms
    _util_transmit_space_between_letters->_util_waits_delay_ms
    _util_transmit_morse_sequence->_strlen
    _util_transmit_space_between_dots_dashes->_util_waits_delay_ms
    _util_transmit_dot->_util_waits_delay_ms
    _util_transmit_dash->_util_waits_delay_ms
    _util_transmit_buzzer_1ms_cycle->_util_waits_delay_hundred_us
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _low_priority_int in BANK0

    None.

Critical Paths under _high_priority_int in BANK0

    None.

Critical Paths under _main in BANK1

    _main_loop->_util_getTemperature

Critical Paths under _low_priority_int in BANK1

    None.

Critical Paths under _high_priority_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_priority_int in BANK2

    None.

Critical Paths under _high_priority_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_priority_int in BANK3

    None.

Critical Paths under _high_priority_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_priority_int in BANK4

    None.

Critical Paths under _high_priority_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_priority_int in BANK5

    None.

Critical Paths under _high_priority_int in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  134161
                    _init_initialize
                          _main_loop
 ---------------------------------------------------------------------------------
 (1) _main_loop                                           10    10      0  134161
                                            124 BANK0     10    10      0
           _util_beacon_transmission
             _util_getBatteryCurrent
             _util_getBatteryVoltage
               _util_getSolarCurrent
                _util_getTemperature
             _util_waits_delay_hours
              _util_waits_delay_mins
 ---------------------------------------------------------------------------------
 (2) _util_waits_delay_hours                               5     3      2    1187
                                             23 BANK0      5     3      2
              _util_waits_delay_mins
 ---------------------------------------------------------------------------------
 (2) _util_waits_delay_mins                                5     3      2    1042
                                             41 COMRAM     3     3      0
                                             21 BANK0      2     0      2
              _util_waits_delay_secs
 ---------------------------------------------------------------------------------
 (2) _util_getTemperature                                224   221      3   25643
                                             63 BANK0      6     3      3
                                              0 BANK1    206   206      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
             _util_onewire_read_byte
                 _util_onewire_reset
            _util_onewire_write_byte
              _util_waits_delay_secs
 ---------------------------------------------------------------------------------
 (3) _util_waits_delay_secs                                7     5      2     820
                                             36 COMRAM     5     5      0
                                             19 BANK0      2     0      2
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (3) _util_onewire_write_byte                             21    19      2    1475
                                             33 COMRAM     3     3      0
                                             19 BANK0     18    16      2
             _util_onewire_write_bit
 ---------------------------------------------------------------------------------
 (4) _util_onewire_write_bit                               2     0      2     647
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _util_onewire_reset                                   5     3      2      37
                                             33 COMRAM     3     3      0
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _util_onewire_read_byte                              34    32      2     346
                                             19 BANK0     34    32      2
              _util_onewire_read_bit
 ---------------------------------------------------------------------------------
 (4) _util_onewire_read_bit                                5     3      2      37
                                             33 COMRAM     3     3      0
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3734
                                             37 COMRAM     3     3      0
                                             25 BANK0     12     6      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3564
                                             36 COMRAM     1     1      0
                                             22 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _util_getSolarCurrent                                 8     6      2   10870
                                             63 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) _util_getBatteryVoltage                               9     6      3   10298
                                             41 BANK0      9     6      3
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) _util_getBatteryCurrent                               8     6      2   10870
                                             63 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2846
                                             22 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _util_beacon_transmission                           204   194     10   74084
                                            114 BANK0     10     0     10
                                              0 BANK1    194   194      0
                             _memset
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
               _util_transmit_letter
 ---------------------------------------------------------------------------------
 (3) _util_transmit_letter                                 1     1      0    6832
                                             42 COMRAM     1     1      0
       _util_transmit_morse_sequence
_util_transmit_space_between_letters
  _util_transmit_space_between_words
 ---------------------------------------------------------------------------------
 (4) _util_transmit_space_between_words                    0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_transmit_space_between_letters                  0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_transmit_morse_sequence                         6     4      2    5741
                                             38 COMRAM     4     4      0
                                             19 BANK0      2     0      2
                             _strlen
                 _util_transmit_dash
                  _util_transmit_dot
_util_transmit_space_between_dots_da
 ---------------------------------------------------------------------------------
 (5) _util_transmit_space_between_dots_dashes              0     0      0     530
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (5) _util_transmit_dot                                    2     2      0     820
                                             36 COMRAM     2     2      0
     _util_transmit_buzzer_1ms_cycle
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (5) _util_transmit_dash                                   2     2      0     820
                                             36 COMRAM     2     2      0
     _util_transmit_buzzer_1ms_cycle
                _util_waits_delay_ms
 ---------------------------------------------------------------------------------
 (4) _util_waits_delay_ms                                  5     3      2     530
                                             33 COMRAM     3     3      0
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _util_transmit_buzzer_1ms_cycle                       0     0      0     222
        _util_waits_delay_hundred_us
 ---------------------------------------------------------------------------------
 (7) _util_waits_delay_hundred_us                          5     3      2     222
                                             33 COMRAM     3     3      0
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     284
                                             33 COMRAM     4     4      0
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4     263
                                             33 COMRAM     2     2      0
                                             17 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4     297
                                             33 COMRAM     2     2      0
                                             17 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             51    37     14   64953
                                             69 BANK0     45    31     14
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                               10     7      3   14849
                                             41 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             33 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              13    10      3   14570
                                             41 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3004
                                             39 COMRAM     2     2      0
                                             25 BANK0      4     0      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    7344
                                             41 COMRAM     3     3      0
                                             29 BANK0     12     6      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1819
                                             33 COMRAM     2     2      0
                                             17 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1985
                                             35 COMRAM     4     4      0
                                             21 BANK0      4     0      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6     608
                                             33 COMRAM     9     9      0
                                             17 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          12     6      6     827
                                             33 COMRAM     6     6      0
                                             17 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    2763
                                             36 COMRAM     5     5      0
                                             22 BANK0      4     0      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     848
                                             38 COMRAM     1     1      0
                                             25 BANK0      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     703
                                             33 COMRAM     5     5      0
                                             17 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     572
                                             48 BANK0     15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    6135
                                             63 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    5771
                                             51 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2584
                                             33 COMRAM     3     3      0
                                             17 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     142
                                             17 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6     660
                                             33 COMRAM     3     3      0
                                             17 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6     599
                                             33 COMRAM     2     2      0
                                             17 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (1) _init_initialize                                      0     0      0       0
                 _init_io_initialize
             _util_timer1_initialize
 ---------------------------------------------------------------------------------
 (2) _util_timer1_initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_io_initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _low_priority_int                                    17    17      0       0
                                              0 BANK0     17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _high_priority_int                                   23    23      0     426
                                             10 COMRAM    23    23      0
                            ___ltdiv
 ---------------------------------------------------------------------------------
 (10) ___ltdiv                                            10     4      6     290
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_initialize
     _init_io_initialize
     _util_timer1_initialize
   _main_loop
     _util_beacon_transmission
       _memset
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
         ___ftsub
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcat
       _strcpy
       _strlen
       _util_transmit_letter
         _util_transmit_morse_sequence
           _strlen
           _util_transmit_dash
             _util_transmit_buzzer_1ms_cycle
               _util_waits_delay_hundred_us
             _util_waits_delay_ms
           _util_transmit_dot
             _util_transmit_buzzer_1ms_cycle
               _util_waits_delay_hundred_us
             _util_waits_delay_ms
           _util_transmit_space_between_dots_dashes
             _util_waits_delay_ms
         _util_transmit_space_between_letters
           _util_waits_delay_ms
         _util_transmit_space_between_words
           _util_waits_delay_ms
     _util_getBatteryCurrent
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getBatteryVoltage
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getSolarCurrent
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _util_getTemperature
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _util_onewire_read_byte
         _util_onewire_read_bit
       _util_onewire_reset
       _util_onewire_write_byte
         _util_onewire_write_bit
       _util_waits_delay_secs
         _util_waits_delay_ms
     _util_waits_delay_hours
       _util_waits_delay_mins
         _util_waits_delay_secs
           _util_waits_delay_ms
     _util_waits_delay_mins
       _util_waits_delay_secs
         _util_waits_delay_ms

 _low_priority_int (ROOT)

 _high_priority_int (ROOT)
   ___ltdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      C8       8       78.1%
BITBANK1           100      0       0       5        0.0%
BANK1              100     CE      CE       6       80.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     86      86       4       83.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      3D       1       64.9%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     259       9        0.0%
DATA                 0      0     259      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sun Apr 09 20:30:16 2017

                               ??_init_initialize 0022                       util_onewire_read_byte@value 0093  
            high_priority_int@activation_thresold 003C                              util_getTemperature@i 01CC  
                                              l24 35B8                                                l26 3634  
                                              l70 2FA8                                                l64 313C  
                                              l76 3072                                      ___awdiv@sign 0025  
                                              bsr 000FE0                               ___wmul@multiplicand 007B  
                __end_of_util_beacon_transmission 2E80                                      __CFG_CP0$OFF 000000  
                                    __CFG_CP1$OFF 000000                                      __CFG_CP2$OFF 000000  
                                    __CFG_CP3$OFF 000000                                      ___ftadd@exp1 009E  
                                    ___ftadd@exp2 009D                                      ___ftadd@sign 009C  
                                             l127 3A14                                               l306 3A8A  
                                             l352 3B6E                                               l513 07A8  
                                             l358 3B9E                                               l299 3A56  
                                             l813 1FD6                                               l815 1FFE  
                                             l824 20D4                                               l833 20FE  
                                             l809 1F9C                                               l754 2986  
                                             l851 277C                                               l852 27BC  
                                             l844 2D38                                               l933 33D8  
                                             l943 35A6                                               l786 2F40  
                                             l858 2828                                               l883 3BDA  
                         ??_util_onewire_read_bit 0022                                      __CFG_CPB$OFF 000000  
                                             _PR2 000FBB                                      __CFG_CPD$OFF 000000  
                     __end_of_util_getTemperature 13EA                   __size_of_util_timer1_initialize 0026  
                                    ___awmod@sign 0023                    ??_util_transmit_morse_sequence 0027  
                                             wreg 000FE8                                      __CFG_FOSC$XT 000000  
                                    __CFG_LVP$OFF 000000        util_transmit_morse_sequence@morse_sequence 0073  
                                    ___ftdiv@cntr 007F                                      ___ftdiv@sign 0084  
                                            l5000 34D4                                              l5002 34DA  
                                            l5010 350A                                              l5020 37DA  
                                            l5014 351A                                              l5006 34FE  
                                            l5022 37E2                                              l5120 155C  
                                            l5032 3806                                              l5202 27EC  
                                            l5106 1EEC                                              l5130 1648  
                                            l5026 37F2                                              l5034 380A  
                                            l3604 2BB6                                              l5212 2816  
                                            l6012 0E58                                              l6004 0DB0  
                                            l3622 2C1C                                              l3614 2BE6  
                                            l5222 285C                                              l5214 2822  
                                            l5206 27FC                                              l5126 1622  
                                            l5070 3720                                              l6014 0E62  
                                            l6030 0EEC                                              l3616 2BF6  
                                            l3608 2BCA                                              l5312 3364  
                                            l5144 1872                                              l5072 3726  
                                            l6032 0EF6                                              l6008 0E42  
                                            l3618 2C00                                              l5314 3372  
                                            l5250 2918                                              l5242 28C8  
                                            l5138 17AC                                              l5082 375C  
                                            l6122 2E3E                                              l6026 0EE4  
                                            l6018 0E78                                              l6130 3906  
                                            l5324 33C8                                              l5316 3378  
                                            l5340 3596                                              l5332 353E  
                                            l5228 287E                                              l5172 2732  
                                            l5156 3C70                                              l5500 0250  
                                            l5076 372C                                              l6036 0F0C  
                                            l5334 354C                                              l5262 294A  
                                            l5166 2702                                              l5078 3754  
                                            l6126 2E5A                                              l6134 391A  
                                            l5280 3846                                              l5336 3552  
                                            l5272 2974                                              l5600 0668  
                                            l6072 0FFE                                              l5360 39DA  
                                            l3586 2B24                                              l5346 36B4  
                                            l5274 2980                                              l5266 295A  
                                            l5098 1E08                                              l5610 06B8  
                                            l5602 0670                                              l5506 026A  
                                            l4730 3B62                                              l6082 103A  
                                            l6066 0FDA                                              l6074 100A  
                                            l6058 0FAA                                              l5444 3B30  
                                            l5292 32F2                                              l5348 36C2  
                                            l5620 075C                                              l5604 0684  
                                            l5540 03D2                                              l5532 0362  
                                            l5516 02B0                                              l5452 3ACC  
                                            l4804 3A78                                              l5356 39C8  
                                            l4750 2F00                                              l4742 2EAE  
                                            l4902 2A00                                              l5702 0A5A  
                                            l5550 045C                                              l5470 010C  
                                            l5454 3AD6                                              l4718 3B92  
                                            l6078 101E                                              l5448 3B40  
                                            l5288 32BA                                              l4760 2F4A  
                                            l4752 2F24                                              l4744 2EBC  
                                            l4840 1FF4                                              l4920 2A6C  
                                            l5720 0B08                                              l5640 07DC  
                                            l5632 07AC                                              l5608 06B0  
                                            l5560 04D4                                              l5544 0400  
                                            l5464 00DA                                              l5800 19F2  
                                            l5298 3336                                              l4754 2F32  
                                            l4746 2EE0                                              l4738 2E9A  
                                            l4850 2036                                              l4834 1FE4  
                                            l4930 2AAA                                              l5730 0B44  
                                            l5722 0B12                                              l5714 0AC6  
                                            l5626 0776                                              l5618 074E  
                                            l5570 0532                                              l5546 0416  
                                            l5490 0206                                              l5458 00BA  
                                            l5810 1A4C                                              l5802 1A04  
                                            l4860 2080                                              l4828 1FAA  
                                            l4916 2A4E                                              l5740 0C00  
                                            l5724 0B1E                                              l5716 0AD0  
                                            l5708 0A8E                                              l5644 082E  
                                            l5628 078A                                              l5556 04A6  
                                            l5548 0446                                              l5484 01AA  
                                            l4772 3784                                              l5820 1AA6  
                                            l5812 1A5E                                              l5804 1A16  
                                            l4766 2F66                                              l4870 20C8  
                                            l4862 208C                                              l4926 2A8C  
                                            l5742 0C06                                              l5662 093E  
                                            l5654 0916                                              l5574 0598  
                                            l5494 0216                                              l5478 0182  
                                            l4774 3788                                              l5830 1B00  
                                            l5822 1AB8                                              l5814 1A70  
                                            l5806 1A28                                              l4856 2064  
                                            l4960 343A                                              l4952 3416  
                                            l5736 0B72                                              l5680 09B6  
                                            l5656 0924                                              l5592 0634  
                                            l5576 059E                                              l5664 094C  
                                            l5488 01F0                                              l5744 0C1C  
                                            l5752 38C0                                              l5840 1B5A  
                                            l5832 1B12                                              l5824 1ACA  
                                            l5816 1A82                                              l5808 1A3A  
                                            l6288 3626                                              l4858 2072  
                                            l4970 346C                                              l4962 3440  
                                            l4946 3402                                              l5682 09BC  
                                            l5674 0990                                              l5746 0C3A  
                                            l5498 021C                                              l5754 38C4  
                                            l5842 1B6C                                              l5834 1B24  
                                            l5826 1ADC                                              l5818 1A94  
                                            l5770 18E4                                              l5850 1C82  
                                            l5762 189C                                              l5906 3996  
                                            l4876 2128                                              l4868 20BA  
                                            l5596 0656                                              l5588 05E4  
                                            l5756 38D4                                              l4788 3A44  
                                            l5844 1B7E                                              l5836 1B36  
                                            l5828 1AEE                                              l5780 193E  
                                            l5772 18F6                                              l5764 18AE  
                                            l4886 2176                                              l4958 3430  
                                            l4974 3478                                              l4990 34A8  
                                            l5694 0A02                                              l5758 38DE  
                                            l5838 1B48                                              l5790 1998  
                                            l5782 1950                                              l5774 1908  
                                            l5766 18C0                                              l4896 29CC  
                                            l5792 19AA                                              l5784 1962  
                                            l5776 191A                                              l5768 18D2  
                                            l5848 1B84                                              l5864 2C96  
                                            l4978 3486                                              l4994 34B8  
                                            l5698 0A2A                                              l5794 19BC  
                                            l5786 1974                                              l5778 192C  
                                            l5858 2C62                                              l5796 19CE  
                                            l5788 1986                                              l5884 2CF6  
                                            l4998 34CA                                              l5798 19E0  
                                            l5990 0D66                                              l5992 0D6A  
                                            l5984 0D3C                                              l5978 0D12  
                                            l5988 0D50                                              l5998 0D8C  
                                            STR_1 7F9E                                              STR_2 7F6B  
                                            STR_3 7FE8                                              STR_4 7FD0  
                                            STR_5 7FF5                                              STR_6 7FCB  
                                            STR_7 7FC1                                              STR_8 7FC4  
                                            STR_9 7FBF                                              u3121 2B00  
                                            u3140 2B4A                                              u5000 3AAA  
                                            u3145 2B40                                              u5111 26E4  
                                            u5008 3AAC                                              u5131 2714  
                                            u6021 2C40                                              u4510 37A8  
                                            u5400 3966                                              u6041 2C74  
                                            u4540 3A56                                              u4517 379E  
                                            u5415 25C4                                              u4560 3A8A  
                                            u5408 3968                                              u4801 29DE  
                                            u5425 25E6                                              u4571 1F4A  
                                            u5435 2608                                              u4581 1F68  
                                            u5445 262A                                              u6407 3AB4  
                                            u5455 242C                                              u6184 0EA8  
                                            u6417 3B64                                              u5465 2442  
                                            u6185 0EA0                                              u6427 3B94  
                                            u5475 2458                                              u4781 29AA  
                                            u6357 3A0E                                              u5590 02F6  
                                            u6367 3A18                                              u6377 394A  
                                            u5595 02EA                                              u6387 3954  
                                            u5780 07A0                                              u6397 3970  
                        ??_util_onewire_read_byte 0075                                              _RBPU 007F8F  
                              high_priority_int@i 0020                                              _WPUB 000F61  
                                    __CFG_WRTC$ON 000000                                      __CFG_WRTD$ON 000000  
                                            _main 3CA8                                      ___ftpack@arg 0071  
                                    ___ftpack@exp 0074                                              fsr0h 000FEA  
                                            fsr1h 000FE2                                              indf0 000FEF  
                                            fsr0l 000FE9                                              fsr2h 000FDA  
                                            indf1 000FE7                                              fsr1l 000FE1  
                                            indf2 000FDF                                              fsr2l 000FD9  
                                            btemp 003E                                     __CFG_BORV$190 000000  
                                            pclat 000FFA                                              prodh 000FF4  
                                            prodl 000FF3                                              start 00A6  
                                   __CFG_IESO$OFF 000000   __end_of_util_transmit_space_between_dots_dashes 3CA8  
__size_of_util_transmit_space_between_dots_dashes 0010         ??_util_transmit_space_between_dots_dashes 0025  
        ?_util_transmit_space_between_dots_dashes 0001           _util_transmit_space_between_dots_dashes 3C98  
                                    _sprintf$2681 00B9                                      ___ftmul@cntr 0087  
                                    ___param_bank 000010                                      ___ftmul@sign 0088  
                                    ___fttol@exp1 009E                                      ___fttol@lval 009A  
                              _util_transmit_dash 3A5C                           util_getTemperature@sign 01A4  
                                           ?_main 0001               __end_of_util_waits_delay_hundred_us 3BB8  
                     _util_waits_delay_hundred_us 3B88                                   __end_of___awdiv 3490  
                                           _ADRES 000FC3                                   __end_of___ftadd 219C  
                                           STR_10 7FD6                                             STR_11 7FCC  
                                           STR_12 7FB2                                             STR_20 7FF6  
                                           STR_13 7FE7                                             STR_21 7FD1  
                                           STR_22 7FA9                                             STR_14 7FFA  
                                           STR_30 7FAB                                             STR_15 7FA8  
                                           STR_23 7FEC                                             STR_31 7FB1  
                                           STR_24 7F92                                             STR_16 7FC0  
                                           STR_32 7FB7                                             STR_40 7F97  
                                           STR_17 7FA7                                             STR_25 7FE2  
                                           STR_33 7F91                                             STR_41 7FC3  
                                           STR_18 7FF0                                             STR_26 7FEB  
                                           STR_34 7FDB                                             STR_42 7F89  
                                           STR_19 7FE6                                             STR_27 7FE1  
                                           STR_35 7FD5                                             STR_43 7F90  
                                           STR_28 7FCA                                             STR_36 7FCF  
                                 __end_of___awmod 3524                                             STR_37 7FC9  
                                           STR_29 7FA5                                             STR_38 7FBD  
                                           STR_39 7F82                                   __end_of___ftdiv 2D6E  
                                 __end_of___ftneg 3BE8                                   __end_of___lldiv 33EA  
                               ?_low_priority_int 0001                                   __end_of___ftmul 2AEA  
                                 ___awdiv@divisor 0077                                   __end_of___llmod 35B8  
                                 __end_of___ftsub 3870                                   __end_of___fttol 2C2E  
                                 __end_of___ltdiv 36AE                       __size_of_util_onewire_reset 0042  
                                   __CFG_WDTEN$ON 000000                                             i2l183 2234  
                                           i2l195 237A                                             i2l961 36A0  
                                 ___awdiv@counter 0024                                             i2l966 3694  
                                           _TMR1H 000FCF                                             _TMR1L 000FCE  
                             ?_util_transmit_dash 0001                                ??_low_priority_int 0060  
                                   __CFG_WRT0$OFF 000000                                     __CFG_WRT1$OFF 000000  
                                   __CFG_WRT2$OFF 000000                                     __CFG_WRT3$OFF 000000  
                                    ___lltoft@exp 0029                                    __CFG_EBTR0$OFF 000000  
                                  __CFG_FCMEN$OFF 000000                                    __CFG_EBTR1$OFF 000000  
                                  __CFG_EBTR2$OFF 000000                                    __CFG_EBTR3$OFF 000000  
                    __end_of_util_getSolarCurrent 303E                                     __CFG_WRTB$OFF 000000  
                                  __CFG_EBTRB$OFF 000000                                     ___awtoft@sign 0025  
                                 __end_of_dpowers 7F1D                                             _scale 13EA  
                                 __end_of_isdigit 3C78                                __CFG_MCLRE$EXTMCLR 000000  
                                   ___ftpack@sign 0075                          ??_util_onewire_write_bit 0022  
                       util_waits_delay_secs@secs 0073                                    __CFG_BOREN$OFF 000000  
                                           tablat 000FF5                 high_priority_int@noise_mean_value 0039  
                                           status 000FD8                       __end_of_util_waits_delay_ms 3B88  
                                 __end_of_sprintf 0C48                            _util_timer1_initialize 3C12  
                            ??_util_transmit_dash 0025                           util_waits_delay_hours@i 007A  
                  util_getTemperature@bit_in_byte 01C7                                   __initialization 3870  
                       util_beacon_transmission@i 01C0                                      __end_of_main 3CB4  
                    __end_of_util_transmit_letter 1C88                                            ??_main 002D  
                                   ___fttol@sign1 0099                                     __activetblptr 000002  
                            __size_of__tdiv_to_l_ 0168                        util_onewire_read_bit@value 0023  
                       util_getSolarCurrent@value 00A1                                            _ADCON1 000FC1  
                                          _ADCON2 000FC0                                  ___llmod@dividend 0079  
                                          ?_scale 0089                                            _CCPR2L 000F67  
                                ___awdiv@dividend 0075                                  __end_of___awtoft 39BE  
                                __end_of___ftpack 2F74                    high_priority_int@valid_samples 0037  
                                __end_of___lltoft 3716                                            i2l4620 366E  
                                          i2l4700 2310                                            i2l4710 2378  
                                          i2l4616 3660                                            i2l4618 366A  
                                          i2l4706 2346                                            i2l4650 2220  
                                          i2l4652 2224                                            i2l4664 2250  
                                          i2l4648 2210                                            i2l4692 22E2  
                                          i2l4684 22B2                                            i2l4676 2292  
                                          i2l4696 2300                                  __end_of___lwtoft 3C12  
                 __size_of_util_onewire_read_byte 0194                       __size_of_init_io_initialize 00BC  
               __size_of_util_beacon_transmission 0112                         ?_util_beacon_transmission 00D2  
                                  __CFG_XINST$OFF 000000                                  __end_of__powers_ 7F6B  
                                    _CCPTMRS0bits 000F49                          ?_util_onewire_write_byte 0073  
                                          ___ftge 3282                        util_onewire_read_byte@bit0 0083  
                      util_onewire_read_byte@bit1 0085                        util_onewire_read_byte@bit2 0087  
                      util_onewire_read_byte@bit3 0089                        util_onewire_read_byte@bit4 008B  
                      util_onewire_read_byte@bit5 008D                        util_onewire_read_byte@bit6 008F  
                      util_onewire_read_byte@bit7 0091                           ??_util_waits_delay_mins 002A  
                         ??_util_waits_delay_secs 0025                                            ___wmul 3AF4  
                                       ??___awdiv 0024                                         ??___ftadd 0099  
                                  __CFG_STVREN$ON 000000                                         ??___awmod 0022  
                                       ??___ftdiv 0026                                         ??___ftneg 0022  
                                       ??___lldiv 0022                                         ??___ftmul 002A  
                                       ??___llmod 0027                                         ??___ftsub 002D  
                                       ??___fttol 0094                                         ??___ltdiv 0007  
                     util_onewire_write_byte@bit0 0075                       util_onewire_write_byte@bit1 0077  
                     util_onewire_write_byte@bit2 0079                       util_onewire_write_byte@bit3 007B  
                     util_onewire_write_byte@bit4 007D                       util_onewire_write_byte@bit5 007F  
                     util_onewire_write_byte@bit6 0081                       util_onewire_write_byte@bit7 0083  
                                          _memset 3B26                                            _fround 1C88  
                                          clear_0 3896                                            clear_1 38A2  
                                ___awdiv@quotient 0026                                   ___awmod@divisor 0073  
                                 ___awmod@counter 0022                       util_waits_delay_hours@hours 0077  
                                          _strcat 38B6                                            _strcpy 3AC2  
                                          _strlen 377A                             ___ftmul@f3_as_product 0084  
                                    __pdataCOMRAM 0039                                         ??_isdigit 0022  
                                    __mediumconst 7EF4                                            tblptrh 000FF7  
                                          tblptrl 000FF6                                            tblptru 000FF8  
                                       ??_sprintf 00B3                                   __CFG_HFOFST$OFF 000000  
                        ??_util_getBatteryCurrent 002D                   __size_of_util_onewire_write_bit 0034  
                                 _init_initialize 3CB4                                        __accesstop 0060  
                         __end_of__initialization 38A8                                   __CFG_PBADEN$OFF 000000  
                                      ___ftadd@f1 0093                                        ___ftadd@f2 0096  
                                      ___ftge@ff1 0071                                        ___ftge@ff2 0074  
                                   ___rparam_used 000001                                        ___ftdiv@f1 0079  
                                      ___ftdiv@f2 007C                                        ___ftdiv@f3 0080  
                        ??_util_getBatteryVoltage 002D                                        ___ftneg@f1 0071  
                                      ___awtoft@c 0076                                        ___ftmul@f1 007D  
                                      ___ftmul@f2 0080                                        ___ftsub@f1 009F  
                                      ___ftsub@f2 00A2                                        ___fttol@f1 0090  
                                  __pcstackCOMRAM 0001                              _util_getSolarCurrent 2F74  
                                      ___lltoft@c 0076                          main_loop@battery_current 00E1  
                                   __end_of_scale 1898                            _util_onewire_read_byte 23B6  
                                      ___lwtoft@c 0076                                        __div_to_l_ 283A  
                        main_loop@battery_voltage 00E3                    __size_of_util_onewire_read_bit 0032  
                   __end_of_util_onewire_read_bit 3AC2                                   __div_to_l_@exp1 0027  
                                 __div_to_l_@cntr 0026                                           ??_scale 002D  
                                 __div_to_l_@quot 0022                                      sprintf@width 00C0  
       __end_of_util_transmit_space_between_words 3C88        __size_of_util_transmit_space_between_words 0010  
             ??_util_transmit_space_between_words 0025                ?_util_transmit_space_between_words 0001  
               _util_transmit_space_between_words 3C78                                        __pbssBANK2 0200  
                              __size_of_main_loop 008C                                   __CFG_PLLCFG$OFF 000000  
                            _util_transmit_letter 1898                                     __div_to_l_@f1 0071  
                                   __div_to_l_@f2 0074                                __CFG_CCP2MX$PORTC1 000000  
                           ?_util_getSolarCurrent 009F                                           ?___ftge 0071  
                    util_onewire_write_bit@bit_in 0071                                           ?___wmul 0079  
                high_priority_int@sample_position 0033                                __CFG_CCP3MX$PORTB5 000000  
                          _util_onewire_write_bit 39F4                                           ?_memset 0071  
                                         ?_fround 0089                                         ?___awtoft 0076  
                                       ?___ftpack 0071                                 _high_priority_int 0008  
                                       ?___lltoft 0076                                           ?_strcat 0071  
                                         ?_strcpy 0071                                           ?_strlen 0071  
                                       ?___lwtoft 0076                                ?_high_priority_int 0001  
                         __end_of_init_initialize 3CBE                               ??_high_priority_int 000B  
                    __size_of_util_getTemperature 07A2                           ?_util_timer1_initialize 0001  
                           ?_util_transmit_letter 0001              __size_of_util_waits_delay_hundred_us 0030  
                 __size_of_util_getBatteryCurrent 00CA                         __size_of_low_priority_int 008E  
                            util_waits_delay_ms@i 0023                      util_waits_delay_mins@minutes 0075  
                                 __CFG_PWRTEN$OFF 000000                                 __end_of__npowers_ 7F44  
                                         __Hparam 0000                   __size_of_util_getBatteryVoltage 00BE  
                                      _scale$2680 008C              __end_of_util_transmit_morse_sequence 377A  
           __size_of_util_transmit_morse_sequence 0064                      _util_transmit_morse_sequence 3716  
                                         __Lparam 0000                        util_getTemperature@bit_mem 0100  
     __end_of_util_transmit_space_between_letters 3C98      __size_of_util_transmit_space_between_letters 0010  
           ??_util_transmit_space_between_letters 0025              ?_util_transmit_space_between_letters 0001  
             _util_transmit_space_between_letters 3C88                                   __size_of___ftge 00B8  
                                         ___awdiv 33EA                                           ___ftadd 1F34  
                                         ___awmod 3490                                           ___ftdiv 2C2E  
                                         ___ftneg 3BB8                                           ___lldiv 333A  
                                 __size_of___wmul 0032                                           ___ftmul 2998  
                        ??_util_waits_delay_hours 0079                                           ___llmod 3524  
                                         ___ftsub 3824                       util_getTemperature@byte_mem 0190  
                                         ___fttol 2AEA                                           ___ltdiv 3644  
                       __end_of_high_priority_int 23B6                    util_getTemperature@temperature 01C9  
                      __end_of_util_onewire_reset 397E                                 __end_of_main_loop 3644  
                                         __pcinit 3870                                        ??___awtoft 0025  
                                      ??___ftpack 0022                                   __size_of_memset 0032  
                                 __size_of_fround 02AC                                           __ramtop 0600  
                      util_getTemperature@num_bit 01A2                                        ??___lltoft 0025  
                                         __ptext0 3CA8                                           __ptext1 35B8  
                                         __ptext2 38FA                                           __ptext3 39BE  
                                         __ptext4 0C48                                           __ptext5 37D0  
                                         __ptext6 254A                                           __ptext7 39F4  
                                         __ptext8 393C                                           __ptext9 23B6  
                                      ??___lwtoft 0025                                   __size_of_strcat 0044  
                                 __size_of_strcpy 0032                                   __size_of_strlen 0056  
                                       _T1CONbits 000FCD                                       ?__div_to_l_ 0071  
                                         _dpowers 7EF5                                         _T2CONbits 000FBA  
                     util_getTemperature@num_byte 01C5                                           _isdigit 3C5A  
                                ___awmod@dividend 0071                      util_onewire_write_byte@value 0073  
                ??_util_transmit_buzzer_1ms_cycle 0025                   ?_util_transmit_buzzer_1ms_cycle 0001  
                  __end_of_util_timer1_initialize 3C38                              main_loop@temperature 00DC  
                                         _sprintf 00AA                     util_transmit_morse_sequence@i 0029  
                                  __pintcode_body 219C                              end_of_initialization 38A8  
                    util_waits_delay_hundred_us@i 0023                                           memset@c 0073  
                                         memset@n 0075                                           memset@p 0022  
                                   __Lmediumconst 7EF4                                           int_func 219C  
                     __size_of_util_transmit_dash 0034                                   ___lldiv@divisor 0075  
                                ___ltdiv@dividend 0001                            ??_util_getSolarCurrent 002D  
                                 ___lldiv@counter 0026                                           postdec1 000FE5  
                                         postdec2 000FDD                      __size_of_util_waits_delay_ms 0030  
                                         postinc0 000FEE                                           postinc2 000FDE  
           util_beacon_transmission@solar_current 00D5                    __size_of_util_waits_delay_mins 0036  
                                  __tdiv_to_l_@f1 0071                                    __tdiv_to_l_@f2 0074  
                  __size_of_util_waits_delay_secs 0054                     __end_of_util_waits_delay_mins 39F4  
                          _util_getBatteryCurrent 303E                     __end_of_util_waits_delay_secs 3824  
                                         strlen@s 0071                                     ??__tdiv_to_l_ 0022  
                                       _PORTAbits 000F80                                         _PORTBbits 000F81  
                                       _PORTDbits 000F83                           high_priority_int@sample 001E  
                          _util_getBatteryVoltage 3108                  __size_of_util_onewire_write_byte 0188  
                        _util_getTemperature$2674 01A7                          _util_getTemperature$2675 01AA  
                        _util_getTemperature$2676 01AD                          _util_getTemperature$2677 01B0  
                                       _TRISAbits 000F92                                         _TRISBbits 000F93  
                                       _TRISDbits 000F95                                  ?_init_initialize 0001  
                                ___ltdiv@quotient 0007                        __end_of_init_io_initialize 3282  
                          ??_util_transmit_letter 002B                                       ___ftdiv@exp 0083  
                                     _CCP2CONbits 000F66             util_beacon_transmission@BEACON_BUFFER 0180  
                             __size_of__div_to_l_ 015E                                       ___ftmul@exp 0083  
                         ?_util_onewire_read_byte 0073                                 _util_transmit_dot 3A28  
                      __size_of_high_priority_int 23AE                                    __end_of___ftge 333A  
                 __size_of_util_waits_delay_hours 0042                                    __end_of___wmul 3B26  
                              ?_util_transmit_dot 0001                                     __pidataCOMRAM 3CBE  
                                  __end_of_memset 3B58                                    __end_of_fround 1F34  
                                  __end_of_strcat 38FA                                    __end_of_strcpy 3AF4  
                                  __end_of_strlen 37D0                 util_waits_delay_hundred_us@hun_us 0071  
                             start_initialization 3870                               ??_util_transmit_dot 0025  
                          util_waits_delay_mins@i 002B                            util_waits_delay_secs@i 0026  
                          util_waits_delay_secs@j 0028                               __end_of__tdiv_to_l_ 283A  
                        _util_beacon_transmission 2D6E               util_beacon_transmission@temperature 00D9  
                                _low_priority_int 0018                                   ___llmod@divisor 007D  
                                 ___llmod@counter 0027                               util_transmit_dash@i 0025  
                  __end_of_util_onewire_read_byte 254A                         __end_of_util_transmit_dot 3A5C  
                         ?_util_onewire_write_bit 0071                                          ??___ftge 0022  
                                        ??___wmul 0028                               _util_getTemperature 0C48  
                                        ??_memset 0022                                          ??_fround 002D  
                                   sprintf@tmpval 00C2                                          ??_strcat 0022  
                                        ??_strcpy 0022                                          ??_strlen 0022  
                    ?_util_waits_delay_hundred_us 0071                                        fround@prec 0092  
                               __size_of___awtoft 0040                                 __size_of___ftpack 00F4  
                               __size_of___lltoft 0068                                       __pbssCOMRAM 002D  
                               __size_of___lwtoft 002A                                     __pcstackBANK0 0060  
                                   __pcstackBANK1 0100                                      _isdigit$2306 0023  
                           _util_onewire_read_bit 3A90                              ?_util_getTemperature 009F  
                          _util_waits_delay_hours 38FA                 util_getTemperature@shift_reg_bit0 01B3  
               util_getTemperature@shift_reg_bit1 01B5                 util_getTemperature@shift_reg_bit2 01B7  
               util_getTemperature@shift_reg_bit3 01B9                 util_getTemperature@shift_reg_bit4 01BB  
               util_getTemperature@shift_reg_bit5 01BD                 util_getTemperature@shift_reg_bit6 01BF  
               util_getTemperature@shift_reg_bit7 01C1            util_beacon_transmission@BEACON_MESSAGE 0100  
                                     sprintf@flag 00BE                                       sprintf@fval 00CC  
           util_getTemperature@shift_reg_bit_temp 01C3                                       sprintf@prec 00CF  
                  __end_of_util_onewire_write_bit 3A28                                         __pintcode 0008  
                                   __pmediumconst 7EF4                                          ?___awdiv 0075  
                                        ?___ftadd 0093                                          ?___awmod 0071  
                                        ?___ftdiv 0079                                          ?___ftneg 0071  
                                        ?___lldiv 0071                                          ?___ftmul 007D  
                                        ?___llmod 0079                                          ?___ftsub 009F  
                                       __npowers_ 7F1D                                          ?___fttol 0090  
                                        ?___ltdiv 0001                                       __pintcodelo 0018  
                                __CFG_PRICLKEN$ON 000000                                       __tdiv_to_l_ 26D2  
                                    ??__div_to_l_ 0022                           _util_onewire_write_byte 254A  
                                        ?_isdigit 0001                                         _main_loop 35B8  
                   ??_util_waits_delay_hundred_us 0022        high_priority_int@cycles_transmitter_active 002F  
                             _util_waits_delay_ms 3B58                             ??_util_getTemperature 00A2  
                              _util_onewire_reset 393C                                          ?_sprintf 00A5  
                                  __size_of_scale 04AE                       util_getBatteryVoltage@value 008C  
                                  ___wmul@product 0028                                          _LATAbits 000F89  
                                        _LATBbits 000F8A                                          _LATDbits 000F8C  
                             ?_util_onewire_reset 0071                                          _IPR1bits 000F9F  
                                        _PIE1bits 000F9D                        __size_of_util_transmit_dot 0034  
                                        i2u433_40 225C                                   ___ltdiv@divisor 0004  
                                        _PIR1bits 000F9E                                __end_of__div_to_l_ 2998  
                                        i2u428_40 21FA                                          i2u429_48 21FC  
          __end_of_util_transmit_buzzer_1ms_cycle 3C5A           __size_of_util_transmit_buzzer_1ms_cycle 0022  
                  _util_transmit_buzzer_1ms_cycle 3C38                           ?_util_getBatteryCurrent 009F  
                                 ___ltdiv@counter 000A                                          _RCONbits 000FD0  
                                __CFG_WDTPS$32768 000000                              ?_util_waits_delay_ms 0071  
         util_beacon_transmission@battery_current 00D7                           ?_util_getBatteryVoltage 0089  
                                      _ADCON0bits 000FC2                                 ___wmul@multiplier 0079  
                            ??_util_onewire_reset 0022                        util_transmit_letter@letter 002B  
                                      ?_main_loop 0001           util_beacon_transmission@battery_voltage 00D2  
                          ?_util_onewire_read_bit 0071                       util_getBatteryCurrent@value 00A1  
                                       copy_data0 3884                             util_waits_delay_ms@ms 0071  
                      __end_of_util_transmit_dash 3A90            high_priority_int@is_transmitter_active 0031  
                  __end_of_util_getBatteryCurrent 3108                                          __Hrparam 0000  
                              util_transmit_dot@i 0025                                _init_io_initialize 31C6  
                                        __Lrparam 0000                             ??_util_waits_delay_ms 0022  
                   __size_of_util_getSolarCurrent 00CA                                 __CFG_P2BMX$PORTC0 000000  
                  __end_of_util_getBatteryVoltage 31C6                                  __size_of___awdiv 00A6  
                                __size_of___ftadd 0268                                  __size_of___awmod 0094  
                                __size_of___ftdiv 0140                                  __size_of___ftneg 0030  
                                __size_of___lldiv 00B0                                  __size_of___ftmul 0152  
                       ??_util_onewire_write_byte 0022                                  __size_of___llmod 0094  
                                __size_of___ftsub 004C                                  __size_of___fttol 0144  
                                __size_of___ltdiv 006A                               ?_init_io_initialize 0001  
                                        ___awtoft 397E                                          ___ftpack 2E80  
                                     _fround$2678 008F                                       _fround$2679 008C  
                        __end_of_low_priority_int 00A6                                          ___lltoft 36AE  
                      ??_util_beacon_transmission 002D                             _util_waits_delay_mins 39BE  
                           _util_waits_delay_secs 37D0                                        _ANSELAbits 000F38  
                                        ___lwtoft 3BE8                                        _ANSELBbits 000F39  
                                      _ANSELDbits 000F3B                                        sprintf@exp 00CA  
                                      sprintf@val 00C6                                        strcat@from 0073  
                                __size_of_isdigit 001E                                          __ptext10 3A90  
                                        __ptext11 2C2E                                          __ptext20 3C88  
                                        __ptext12 397E                                          __ptext21 3716  
                                        __ptext13 2F74                                          __ptext30 38B6  
                                        __ptext22 3C98                                          __ptext14 3108  
                                        __ptext31 00AA                                          __ptext23 3A28  
                                        __ptext15 303E                                          __ptext40 283A  
                                        __ptext32 13EA                                          __ptext24 3A5C  
                                        __ptext16 3BE8                                          __ptext41 36AE  
                                        __ptext33 3C5A                                          __ptext25 3B58  
                                        __ptext17 2D6E                                          __ptext50 3B26  
                                        __ptext42 3524                                          __ptext34 1C88  
                                        __ptext26 3C38                                          __ptext18 1898  
                                        __ptext51 3CB4                                          __ptext43 333A  
                                        __ptext35 3AF4                                          __ptext27 3B88  
                                        __ptext19 3C78                                          __ptext52 3C12  
                                        __ptext44 2AEA                                          __ptext36 2998  
                                        __ptext28 377A                                          __ptext53 31C6  
                                        __ptext45 3824                                          __ptext37 3490  
                                        __ptext29 3AC2                                          __ptext46 1F34  
                                        __ptext38 33EA                                          __ptext47 2E80  
                                        __ptext39 26D2                                          __ptext56 3644  
                                        __ptext48 3BB8                                          __ptext49 3282  
                                        __powers_ 7F44                                  __size_of_sprintf 0B9E  
                            ??_init_io_initialize 0022                                        strcpy@from 0073  
                   __size_of_util_transmit_letter 03F0                  util_getSolarCurrent@solarCurrent 00A4  
                        __size_of_init_initialize 000A                                     __size_of_main 000C  
                      util_onewire_reset@presence 0023                                          int$flags 003E  
                   ?_util_transmit_morse_sequence 0073                     util_getBatteryVoltage@voltage 008F  
                           _tmr1_interrupt_number 002D                          ??_util_timer1_initialize 0022  
                                     ??_main_loop 002D                                        _INTCONbits 000FF2  
                         ?_util_waits_delay_hours 0077                                          isdigit@c 0024  
                                        memset@p1 0071                            main_loop@solar_current 00DF  
                                        scale@scl 008F                   __end_of_util_onewire_write_byte 26D2  
                                        intlevel1 0000                                          intlevel2 0000  
                                       sprintf@ap 00BC                                  __tdiv_to_l_@exp1 002A  
                                __tdiv_to_l_@cntr 0029                                         sprintf@sp 00A5  
                                __tdiv_to_l_@quot 0025                                      _VREFCON0bits 000F42  
                                ___lldiv@dividend 0071                            ?_util_waits_delay_mins 0075  
                          ?_util_waits_delay_secs 0073                                      ?__tdiv_to_l_ 0071  
                                        sprintf@c 00D1                                          sprintf@f 00A7  
                                        strcat@cp 0022                                          strcat@to 0071  
                  __end_of_util_waits_delay_hours 393C                                  ___lldiv@quotient 0022  
                                        strcpy@cp 0022                                          strlen@cp 0024  
                                        strcpy@to 0071                                 __CFG_T3CMX$PORTB5 000000  
                        high_priority_int@samples 0200          high_priority_int@times_thresold_exceeded 0035  
            util_getBatteryCurrent@batteryCurrent 00A4  
